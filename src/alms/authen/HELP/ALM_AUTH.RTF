{\rtf1\ansi \deff5\deflang1033{\fonttbl{\f5\fswiss\fcharset0\fprq2 Arial;}{\f11\fmodern\fcharset0\fprq1 Courier New;}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;
\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;
\red192\green192\blue192;}{\stylesheet{\f5\fs20 \snext0 Normal;}{\*\cs10 \additive Default Paragraph Font;}{\s15\li720\ri720\tldot\tx8280\tqr\tx8640 \f5\fs20\cf8 \sbasedon0\snext0 toc 2;}{\*\cs16 \additive\fs16\up6 \sbasedon10 footnote reference;}{\s17 
\f5\fs20 \sbasedon0\snext17 footnote text;}{\s18\keepn \b\f5\cf6 \sbasedon0\snext0 Help Topic Heading;}{\s19 \b\i\f5 \sbasedon0\snext19 Help See Also;}{\*\cs20 \additive\super \sbasedon10 endnote reference;}{\s21 \b\f5 \sbasedon0\snext0 
Help Popup Heading;}{\s22\sa60\tx720\tx1260 \b\f5\fs20 \sbasedon0\snext0 Topic Section;}{\s23\sb80 \f11 \sbasedon0\snext0 Function Syntax;}{\s24\sa120\tx2880 \f5\fs16 \sbasedon0\snext24 Topic Wizard Line 2;}{\s25\keepn\tx720\tx1260 \b\f5\fs32\cf6 
\sbasedon18\snext25 new 2;}{\s26\li360\ri20 \f5\fs20 \sbasedon0\snext0 hlpbrz_toc;}{\s27\li360\sa100 \f5\fs20 \sbasedon0\snext27 HelpBreeze TOC;}{\s28\li360 \f5\fs20 \sbasedon0\snext28 Normal Indent;}{\s29 \b\f5\fs22 \sbasedon0\snext29 Function Section;}{
\s30\fi-360\li720\sa60\tx720 \f5\fs20 \sbasedon28\snext30 Numbered List;}{\s31\fi-2520\li2880\sa60\tx720\tx2880 \f5\fs20 \sbasedon30\snext31 Return Flows;}}{\info{\title # $ + K NW Authentication ALM Help Contents}{\author AppWare Systems Group}
{\operator AppWare Systems Group}{\creatim\yr1995\mo4\dy17\hr9\min33}{\revtim\yr1995\mo4\dy17\hr9\min33}{\version2}{\edmins1}{\nofpages9}{\nofwords294}{\nofchars1681}{\vern49197}}\margl1440\margr1440 
\widowctrl\ftnbj\aenddoc\noextrasprl\prcolbl\cvmme\sprsspbf\brkfrm\swpbdr\hyphcaps0 \fet0{\*\template D:\\MSWORD6\\TEMPLATE\\HLPBRZ6.DOT}\sectd \linex0\endnhere {\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl2
\pnucltr\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang{\pntxta )}}{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl6
\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang
{\pntxtb (}{\pntxta )}}\pard\plain \s18\keepn \b\f5\cf6 {\cs16\super #{\footnote \pard\plain \s17 \f5\fs20 {\cs16\fs16\up6 #} idh_contents}}{\super {\*\bkmkstart idh_contents}{\*\bkmkend idh_contents} }{\cs16\super ${\footnote \pard\plain \s17 \f5\fs20 {
\cs16\fs16\up6 $} NW Authentication ALM Help Contents}}{\super  }{\cs16\super +{\footnote \pard\plain \s17 \f5\fs20 {\cs16\fs16\up6 +} top:0010}}{\super  }{\cs16\super K{\footnote \pard\plain \s17 \f5\fs20 {\cs16\fs16\up6 K}
 NW Authentication ALM Help Contents}} NW Authentication ALM Help Contents
\par \pard\plain \f5\fs20 
\par \pard\plain \s29 \b\f5\fs22 Description
\par \pard\plain \s28\li360 \f5\fs20 The functions listed below are used to perform various authentication and mapping functions.  These functions help the application developer create applications that need to access Novell NetWare dur
ing program execution.  The functions logically fall into three categories: authentication, mapping, and logout.
\par \pard\plain \f5\fs20 
\par \pard\plain \s29 \b\f5\fs22 Functions
\par \pard\plain \s28\li360 \f5\fs20 
\par \trowd \trqc\trgaph108\trleft-108 \cellx2957\cellx5837 \pard \s28\sa60\intbl {\uldb\cf11 \{bml i_aut0.bmp\}Authenticate}{\v idh_authenticate}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}
}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 6964685f61757468656e746963617465}}}{\fldrslt }}{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }} \cell {\uldb\cf11 \{bml i_aut5.bmp\}Map Drive}{\v idh_map_drive}
{\field\flddirty{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 6964685f6d61705f6472697665}}}{\fldrslt }}
{\field\flddirty{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }} \cell \pard\plain \intbl \f5\fs20 \row \trowd \trqc\trgaph108\trleft-108 \cellx2957\cellx5837 \pard\plain \s28\sa60\intbl \f5\fs20 {\uldb\cf11 \{bml i_aut2.bmp\}Delete Mapped Drives}{
\v idh_delete_mapped_drives}{\field\flddirty{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 
6964685f64656c6574655f6d61707065645f647269766573}}}{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }} \cell {\uldb\cf11 \{bml i_aut6.bmp\}Map Drives}{\v idh_map_drives}{\field\flddirty{\*\fldinst  macrobutton NextField 
}{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 6964685f6d61705f647269766573}}}{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  macrobutton NextField }
}{\fldrslt }} \cell \pard\plain \intbl \f5\fs20 \row \pard\plain \s28\sa60\intbl \f5\fs20 {\uldb\cf11 \{bml i_aut3.bmp\}Get Mapped Drives}{\v idh_get_mapped_drives}{\field\flddirty{\*\fldinst  macrobutton NextField }{\fldrslt }}
{\field\flddirty{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 6964685f6765745f6d61707065645f647269766573}}}{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  macrobutton NextField 
}}{\fldrslt }} \cell {\uldb\cf11 \{bml i_aut7.bmp\}Map Next}{\v idh_map_next}{\field\flddirty{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1 
 ADDIN }{\cf1 {\*\datafield 6964685f6d61705f6e657874}}}{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }} \cell \pard\plain \intbl \f5\fs20 \row \trowd \trqc\trgaph108\trleft-108 \cellx2957\cellx5837 \pard\plain 
\s28\sa60\intbl \f5\fs20 {\uldb\cf11 \{bml i_aut4.bmp\}Logout}{\v idh_logout}{\field\flddirty{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1 
 ADDIN }{\cf1 {\*\datafield 6964685f6c6f676f7574}}}{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }} \cell {\uldb\cf11 \{bml i_aut1.bmp\}Prompted Authenticate}{\v idh_prompted_authenticate}{\field\flddirty{\*\fldinst 
 macrobutton NextField }{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 6964685f70726f6d707465645f61757468656e746963617465}}}{\fldrslt }}
{\field\flddirty{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }} \cell \pard\plain \intbl \f5\fs20 \row \pard\plain \s28\li360 \f5\fs20 
\par \pard\plain \f5\fs20 
\par \pard\plain \s29 \b\f5\fs22 Related ALMs
\par \pard\plain \s28\li360 \f5\fs20 NW Error
\par \pard\plain \f5\fs20 
\par 
\par For Help on Help, Press F1
\par \pard\plain \s18\keepn \b\f5\cf6 \page {\cs16\fs16\up6 {\*\bkmkstart idh_authenticate}{\*\bkmkend idh_authenticate}#{\footnote \pard\plain \s17 \f5\fs20 {\cs16\fs16\up6 #} idh_authenticate}} {\cs16\fs16\up6 ${\footnote \pard\plain \s17 \f5\fs20 {
\cs16\fs16\up6 $} Authenticate}} {\cs16\fs16\up6 +{\footnote \pard\plain \s17 \f5\fs20 {\cs16\fs16\up6 +} func:0010}} {\cs16\fs16\up6 K{\footnote \pard\plain \s17 \f5\fs20 {\cs16\fs16\up6 K} Authenticate}} Authenticate
\par \pard\plain \f5\fs20 
\par Allows a user to establish an authenticated connection to either a NetWare 3 or NetWare 4 server in either NDS or BINDERY modes.
\par 
\par {\cf5 \{bml f_aut0.bmp\}}{\cf1  }
\par 
\par \pard\plain \s29 \b\f5\fs22 Usage
\par \pard\plain \s28\li360 \f5\fs20 Use this function to provide the user with an authenticated connection for either NDS or BINDERY systems. The function attaches to either a server or a tree, depending on user-specified parameters.
\par 
\par For example, assume you have already logged into a NetWare network and you want to map drives to a server that you are not currently connected to. You would first use the Authenticate function to authenticate to that server and then call the Map Drives fu
nction to map the desired drives to the server directories.
\par \pard\plain \f5\fs20 
\par \pard\plain \s29 \b\f5\fs22 Inputs
\par \pard\plain \s30\fi-360\li720\sa60\tx720 \f5\fs20 1.\tab "Server/Tree Name"  Required parameter. Identifies the specific server and/or tree name to which the user wants to connect.
\par 2.\tab 
"User Name"  Optional parameter.  Specifies the user name allowed to access the server or tree. If this field is not defined, the default will depend on whether the system is authenticated or not. If the system is currently authenticated to an NDS tree
, the default will be the current user. If the system is not authenticated to an NDS tree, the function will attempt to get the current bindery user name, if the user name cannot be found this function will return an error.
\par 3.\tab "Password"  Optional parameter. Identifies the proper password for accessing this server or tree. If this parameter is left blank, the function reads the password as blank.
\par 4.\tab "Login type"  Optional parameter. Identifies the desired login type (1 = NDS only; 2 = BINDERY only) to access this information. If left blank, the default type depends on the server: 
\par \tab \tab NetWare 4 = NDS
\par \tab \tab NetWare 3 or less = BINDERY.
\par \pard\plain \f5\fs20 
\par \pard\plain \s29 \b\f5\fs22 Outputs
\par \pard\plain \s30\fi-360\li720\sa60\tx720 \f5\fs20 None
\par \pard\plain \f5\fs20 
\par \pard\plain \s29 \b\f5\fs22 Flows (Return Codes)
\par \pard\plain \s31\fi-2520\li2880\sa60\tx720\tx2880 \f5\fs20 1.\tab NDS authenticated\tab Followed if an NDS connection is constructed and authenticated.
\par 2.\tab NDS authenticated pwd expired\tab Followed if an NDS connection is constructed and authenticated and the user\rquote s password is currently expired.
\par 3.\tab Bindery authenticated\tab Followed if a BINDERY connection is made and authenticated.
\par 4.\tab Bindery authenticated pwd expired\tab Followed if a BINDERY connection is made and authenticated and the user\rquote s password is currently expired.
\par 5.\tab Different user same tree\tab Followed when a user attempts to re-authenticate onto the same NDS tree as currently authenticated, but as a different user.
\par 6.\tab Failed\tab Followed if an error occurs.
\par \pard\plain \f5\fs20 
\par \pard\plain \s29 \b\f5\fs22 Notes
\par \pard\plain \s28\li360 \f5\fs20 TBD
\par 
\par \pard\plain \f5\fs20 /* bmc AUTHEX2.SHG */
\par \pard\plain \s18\keepn \b\f5\cf6 \page {\cs16\fs16\up6 {\*\bkmkstart idh_delete_mapped_drives}{\*\bkmkend idh_delete_mapped_drives}#{\footnote \pard\plain \s17 \f5\fs20 {\cs16\fs16\up6 #} idh_delete_mapped_drives}} {\cs16\fs16\up6 ${\footnote \pard\plain 
\s17 \f5\fs20 {\cs16\fs16\up6 $} Delete Mapped Drives}} {\cs16\fs16\up6 +{\footnote \pard\plain \s17 \f5\fs20 {\cs16\fs16\up6 +} func:0020}} {\cs16\fs16\up6 K{\footnote \pard\plain \s17 \f5\fs20 {\cs16\fs16\up6 K} Delete Mapped Drives}}
 Delete Mapped Drives
\par \pard\plain \f5\fs20 
\par Deletes an established mapping to a drive in preparation for establishing a new mapping.
\par 
\par {\cf5 \{bml f_aut2.bmp\}}{\cf1  }
\par 
\par \pard\plain \s29 \b\f5\fs22 Usage
\par \pard\plain \s28\li360 \f5\fs20 Use this function to change the way the user accesses the information stored or saved in file directories.
\par 
\par For example, if you have a program that maps to a temporary drive for use with other applications, you may want to remove the temporary mapping and clean up your re\-
sources after finishing with the drive. In your application, you could use the Map Drive function, followed by your ALM or other application program that uses the temporary drive, followed by the Delete Mapped Drive function to remove the tempor
ary mapping.
\par \pard\plain \f5\fs20 
\par \pard\plain \s29 \b\f5\fs22 Inputs
\par \pard\plain \s30\fi-360\li720\sa60\tx720 \f5\fs20 1.\tab "Drive"  Required parameter. Identifies the list of mapped drives to delete. 
\par \pard\plain \f5\fs20 
\par \pard\plain \s29 \b\f5\fs22 Outputs
\par \pard\plain \s30\fi-360\li720\sa60\tx720 \f5\fs20 2.\tab "Error list"  Optional parameter. Returns a list of numbers, corresponding with the rows of the drive map list in the required input, where eac
h number identifies which drive mapping was not deleted.
\par \pard\plain \f5\fs20 
\par \pard\plain \s29 \b\f5\fs22 Flows (Return Codes)
\par \pard\plain \s31\fi-2520\li2880\sa60\tx720\tx2880 \f5\fs20 1.\tab Deleted\tab Followed if the mapped drive(s) are deleted.
\par 2.\tab Failed\tab Followed if an error occurs.
\par \pard\plain \f5\fs20 
\par \pard\plain \s29 \b\f5\fs22 Notes
\par \pard\plain \s28\li360 \f5\fs20 TBD
\par \pard\plain \f5\fs20 
\par /* bmc DELMAPEX.SHG  */
\par \pard\plain \s18\keepn \b\f5\cf6 \page {\cs16\fs16\up6 {\*\bkmkstart idh_get_mapped_drives}{\*\bkmkend idh_get_mapped_drives}#{\footnote \pard\plain \s17 \f5\fs20 {\cs16\fs16\up6 #} idh_get_mapped_drives}} {\cs16\fs16\up6 ${\footnote \pard\plain \s17 
\f5\fs20 {\cs16\fs16\up6 $} Get Mapped Drives}} {\cs16\fs16\up6 +{\footnote \pard\plain \s17 \f5\fs20 {\cs16\fs16\up6 +} func:0030}} {\cs16\fs16\up6 K{\footnote \pard\plain \s17 \f5\fs20 {\cs16\fs16\up6 K} Get Mapped Drives}} Get Mapped Drives
\par \pard\plain \f5\fs20 
\par Recalls all currently mapped drives and return them to the user.
\par 
\par {\cf5 \{bml f_aut3.bmp\}}{\cf1  }
\par 
\par \pard\plain \s29 \b\f5\fs22 Usage
\par \pard\plain \s28\li360 \f5\fs20 Use this function to retrieve a list of drive mappings.
\par 
\par For example, you want to remove mapped drives in your application. You could get the current mappings by calling the Get Mapped Drives function and then \-you could remove any unwanted mapped drives by calling the Delete Map Drives function.
\par \pard\plain \f5\fs20 
\par \pard\plain \s29 \b\f5\fs22 Inputs
\par \pard\plain \s30\fi-360\li720\sa60\tx720 \f5\fs20 None
\par \pard\plain \f5\fs20 
\par \pard\plain \s29 \b\f5\fs22 Outputs
\par \pard\plain \s30\fi-360\li720\sa60\tx720 \f5\fs20 1.\tab 
"Drive mappings"  Required parameter. Returns the drive mappings from the Directory to a Table object in the application.  The first three columns of the table contain the drive letter, the path, and the map root flag value. Each row represents a singl
e drive mapping. If the table assigned to receive this output has no columns, the function will set three columns in the
 table and output the information. If the table has only one or two columns set, then the function will send only one or two columns of information.
\par \pard\plain \f5\fs20 
\par \pard\plain \s29 \b\f5\fs22 Flows (Return Codes)
\par \pard\plain \s31\fi-2520\li2880\sa60\tx720\tx2880 \f5\fs20 1.\tab Retrieved\tab Followed if the mapped drives are retrieved.
\par 2.\tab Failed\tab Followed if an error occurs, such as a general system call failure.
\par \pard\plain \f5\fs20 
\par \pard\plain \s29 \b\f5\fs22 Notes
\par \pard\plain \s28\li360 \f5\fs20 TBD
\par \pard\plain \f5\fs20 
\par /* bmc GETMAPEX.SHG */
\par \pard\plain \s18\keepn \b\f5\cf6 \page {\cs16\fs16\up6 {\*\bkmkstart idh_logout}{\*\bkmkend idh_logout}#{\footnote \pard\plain \s17 \f5\fs20 {\cs16\fs16\up6 #} idh_logout}} {\cs16\fs16\up6 ${\footnote \pard\plain \s17 \f5\fs20 {\cs16\fs16\up6 $} Logout}} 
{\cs16\fs16\up6 +{\footnote \pard\plain \s17 \f5\fs20 {\cs16\fs16\up6 +} func:0040}} {\cs16\fs16\up6 K{\footnote \pard\plain \s17 \f5\fs20 {\cs16\fs16\up6 K} Logout}} Logout
\par \pard\plain \f5\fs20 
\par Terminates the user's connection to an NDS tree, a desired server list, or all servers.
\par 
\par {\cf5 \{bml f_aut4.bmp\}}{\cf1  }
\par 
\par \pard\plain \s29 \b\f5\fs22 Usage
\par \pard\plain \s28\li360 \f5\fs20 Use this function to facilitate logging the user out of servers or the NDS tree. 
\par Unlike a DOS logout, the function will not remove all drive maps in the path environment variable. 
\par 
\par For example, you want to create a temporary attachment to a server, possibly in o\-
rder to read some CD-ROMs, without changing the original environment. You could use the Authenticate function, followed by Map Drive function to that temporary server. You c
ould then run your applications needed. After finishing with the drive, you could use the Delete M\-apped Drive fu
nction to remove the temporary drive. You can then call the Logout function to log out of only the one server and not out of your other servers.
\par \pard\plain \f5\fs20 
\par \pard\plain \s29 \b\f5\fs22 Inputs
\par \pard\plain \s30\fi-360\li720\sa60\tx720 \f5\fs20 1.\tab "Server/Tree Name"  Optional parameter. Identifies the server or list of servers from which the user will disconnect. This list may include wild-card server names.
\par \tab If the user leaves this field blank, the function will log the user out of all servers and the NetWare Directory Services tree, if appropriate.
\par 
\par 2.\tab "Logout of Tree?"  Optional parameter. If t
his is "True," the function will log the user out of the current NetWare Directory Services tree and NDS servers but not out of BINDERY servers. If the field is left blank, the default is "False," and the function logs the user out of all servers.
\par \tab This field cannot be True with the Server/Tree Name specified, or an error will be returned.
\par \pard\plain \s29 \b\f5\fs22 Outputs
\par \pard\plain \s30\fi-360\li720\sa60\tx720 \f5\fs20 1.\tab "Error list"  Optional parameter. Returns a list of numbers, corresponding with the list of servers/trees in the required input, where each number identifies w
hich server on the input list failed to logout.
\par \pard\plain \f5\fs20 
\par \pard\plain \s29 \b\f5\fs22 Flows (Return Codes)
\par \pard\plain \s31\fi-2520\li2880\sa60\tx720\tx2880 \f5\fs20 1.\tab Logged out\tab Followed if the user logs out.
\par 2.\tab Failed\tab Followed if an error occurs.
\par \pard\plain \f5\fs20 
\par \pard\plain \s29 \b\f5\fs22 Notes
\par \pard\plain \s28\li360 \f5\fs20 TBD
\par \pard\plain \f5\fs20 
\par / * bmc LOGOUTEX.SHG */
\par \pard\plain \s18\keepn \b\f5\cf6 \page {\cs16\fs16\up6 {\*\bkmkstart idh_map_drive}{\*\bkmkend idh_map_drive}#{\footnote \pard\plain \s17 \f5\fs20 {\cs16\fs16\up6 #} idh_map_drive}} {\cs16\fs16\up6 ${\footnote \pard\plain \s17 \f5\fs20 {\cs16\fs16\up6 $}
 Map Drive}} {\cs16\fs16\up6 +{\footnote \pard\plain \s17 \f5\fs20 {\cs16\fs16\up6 +} func:0050}} {\cs16\fs16\up6 K{\footnote \pard\plain \s17 \f5\fs20 {\cs16\fs16\up6 K} Map Drive}} Map Drive
\par \pard\plain \f5\fs20 
\par Establishes a drive mapping to a network drive for the user.
\par 
\par {\cf5 \{bml f_aut5.bmp\}}{\cf1  }
\par 
\par \pard\plain \s29 \b\f5\fs22 Usage
\par \pard\plain \s28\li360 \f5\fs20 Use this function when you want to change a drive mapping on the system for the current user. This function is similar to the "map drive: = path" command. Once the new drive is mapped, the function will make the ide
ntified directory the current working directory.
\par 
\par For example, if you have a program that maps to a temporary drive for use with other applications, you may want to temporarily map only one drive. In your application, you could map the temporary drive by using the Map Drive function, followed by your ALM
 or other application program that uses the temporary drive, followed by the Delete Mapped Drive function to remove the temporary mapping.
\par \pard\plain \f5\fs20 
\par \pard\plain \s29 \b\f5\fs22 Inputs
\par \pard\plain \s30\fi-360\li720\sa60\tx720 \f5\fs20 1.\tab "Drive"  Required parameter. Identifies the new drive letter associated with the drive mapping.
\par 2.\tab "Path"  Required parameter. Establishes a path for the new drive that you map. The path may either be another network drive (such as "g:") or a full path (which may include a drive letter).
\par 3.\tab 
"Map Root?"  Optional parameter. Identifies whether the mapping should be a root mapping. If this parameter is "True," then the function includes a root mapping. If the parameter is not defined, the default is "False," and the function maps to the driv
e only. However, you cannot map to local drives.
\par \pard\plain \f5\fs20 
\par \pard\plain \s29 \b\f5\fs22 Outputs
\par \pard\plain \s30\fi-360\li720\sa60\tx720 \f5\fs20 None
\par \pard\plain \f5\fs20 
\par \pard\plain \s29 \b\f5\fs22 Flows (Return Codes)
\par \pard\plain \s31\fi-2520\li2880\sa60\tx720\tx2880 \f5\fs20 1.\tab Mapped\tab Followed if the new drive is mapped.
\par 2.\tab Failed\tab Followed if the drive mapping failed.
\par \pard\plain \f5\fs20 
\par \pard\plain \s29 \b\f5\fs22 Notes
\par \pard\plain \s28\li360 \f5\fs20 TBD
\par \pard\plain \f5\fs20 
\par /* bmc MAPDRVEX.SHG */
\par \pard\plain \s18\keepn \b\f5\cf6 \page {\cs16\fs16\up6 {\*\bkmkstart idh_map_drives}{\*\bkmkend idh_map_drives}#{\footnote \pard\plain \s17 \f5\fs20 {\cs16\fs16\up6 #} idh_map_drives}} {\cs16\fs16\up6 ${\footnote \pard\plain \s17 \f5\fs20 {\cs16\fs16\up6 
$} Map Drives}} {\cs16\fs16\up6 +{\footnote \pard\plain \s17 \f5\fs20 {\cs16\fs16\up6 +} func:0060}} {\cs16\fs16\up6 K{\footnote \pard\plain \s17 \f5\fs20 {\cs16\fs16\up6 K} Map Drives}} Map Drives
\par \pard\plain \f5\fs20 
\par Creates multiple drive mappings to network drives.
\par 
\par {\cf5 \{bml f_aut6.bmp\}}{\cf1  }
\par 
\par \pard\plain \s29 \b\f5\fs22 Usage
\par \pard\plain \s28\li360 \f5\fs20 
Use this function to provide the user access to more than one drive at a time. This function enables the user to map many drives simultaneously rather than calling the Map Drive function for each desired drive mapping. The l
ast mapped drive will be the working directory.
\par 
\par For example, if you have a program that maps to several drives for use with other applications, you may want to temporarily map to those drives. In your application, you could map the drives by using the Map Drives function, followed by your ALM or other 
application program that uses the temporary drives, followed by the Delete Mapped Drive function to remove the temporary mapping.
\par \pard\plain \f5\fs20 
\par \pard\plain \s29 \b\f5\fs22 Inputs
\par \pard\plain \s30\fi-360\li720\sa60\tx720 \f5\fs20 1.\tab "Drive table"  Required parameter. Identifies a table of drives to map.
\par \tab 
The table must be at least two (2) columns wide. The first column specifies the drive name; the second column specifies the path (see Map Drive). If the table has a third column, the values will be interpreted as the Map Root Flag (see Map Drive). The pa
rameter is required because the function uses a table input to read the drive list.
\par \pard\plain \f5\fs20 
\par \pard\plain \s29 \b\f5\fs22 Outputs
\par \pard\plain \s30\fi-360\li720\sa60\tx720 \f5\fs20 1.\tab "Error list"  Optional parameter. Returns a list of numbers, corresponding with the rows of the Drive Table in the required input, where each number identifies which mapping f\-ailed.
\par \pard\plain \f5\fs20 
\par \pard\plain \s29 \b\f5\fs22 Flows (Return Codes)
\par \pard\plain \s31\fi-2520\li2880\sa60\tx720\tx2880 \f5\fs20 1.\tab Mapped\tab Followed if the drive was mapped.
\par 2.\tab Failed\tab Followed if all the mappings were unsuccessful.
\par \pard\plain \f5\fs20 
\par \pard\plain \s29 \b\f5\fs22 Notes
\par \pard\plain \s28\li360 \f5\fs20 TBD
\par 
\par \pard\plain \f5\fs20 /* bmc MAPDVSEX.SHG */
\par \pard\plain \s18\keepn \b\f5\cf6 \page {\cs16\fs16\up6 {\*\bkmkstart idh_map_next}{\*\bkmkend idh_map_next}#{\footnote \pard\plain \s17 \f5\fs20 {\cs16\fs16\up6 #} idh_map_next}} {\cs16\fs16\up6 ${\footnote \pard\plain \s17 \f5\fs20 {\cs16\fs16\up6 $}
 Map Next}} {\cs16\fs16\up6 +{\footnote \pard\plain \s17 \f5\fs20 {\cs16\fs16\up6 +} func:0070}} {\cs16\fs16\up6 K{\footnote \pard\plain \s17 \f5\fs20 {\cs16\fs16\up6 K} Map Next}} Map Next
\par \pard\plain \f5\fs20 
\par \pard The function searches for the next available, unmapped network drive and maps the path to that drive.
\par 
\par {\cf5 \{bml f_aut7.bmp\}}{\cf1  }
\par 
\par \pard\plain \s29 \b\f5\fs22 Usage
\par \pard\plain \s28\li360 \f5\fs20 Use this function when you want to map the next available network drive letter to the specified path. This function is similar to the "map n path" command.
\par \pard \s28\li360 
\par \pard \s28\li360 This function is user-friendly because it allows the user to map to the next available drive as a courtesy. The user does not have to force the mapping or know the drive to map.
\par \pard\plain \f5\fs20 
\par \pard\plain \s29 \b\f5\fs22 Inputs
\par \pard\plain \s30\fi-360\li720\sa60\tx720 \f5\fs20 1.\tab "Path"  Required parameter. Establishes a path for the new drive that you map. The path may either be another network drive (such as "g:") or a full path (which may include a drive letter).
\par \pard \s30\fi-360\li720\sa60\tx720 2.\tab "Map Root?"  Optional parameter. Identifies whether the mapping should be a root mapping. If this parameter is "True," then the function includes a root
 mapping. If the parameter is not defined, the default is "False," and the function maps to the drive only.
\par \pard\plain \f5\fs20 
\par \pard\plain \s29 \b\f5\fs22 Outputs
\par \pard\plain \s30\fi-360\li720\sa60\tx720 \f5\fs20 1.\tab "Drive Used"  Optional parameter.  Receives the drive letter actually used to perform the drive mapping.  A single character is returned in this parameter.
\par \pard\plain \f5\fs20 
\par \pard\plain \s29 \b\f5\fs22 Flows (Return Codes)
\par \pard\plain \s31\fi-2520\li2880\sa60\tx720\tx2880 \f5\fs20 1.\tab Mapped\tab Followed if the next drive is mapped.
\par \pard \s31\fi-2520\li2880\sa60\tx720\tx2880 2.\tab Failed\tab Followed if an error occurs.
\par 3.\tab No drive\tab Followed if all available drive letters are already in use.
\par \pard\plain \f5\fs20 
\par \pard\plain \s29 \b\f5\fs22 Notes
\par \pard\plain \s28\li360 \f5\fs20 TBD
\par 
\par \pard\plain \f5\fs20 /* bmc MAPNXTEX.SHG */
\par \pard\plain \s18\keepn \b\f5\cf6 \page {\cs16\fs16\up6 {\*\bkmkstart idh_prompted_authenticate}{\*\bkmkend idh_prompted_authenticate}#{\footnote \pard\plain \s17 \f5\fs20 {\cs16\fs16\up6 #} idh_prompted_authenticate}} {\cs16\fs16\up6 ${\footnote 
\pard\plain \s17 \f5\fs20 {\cs16\fs16\up6 $} Prompted Authenticate}} {\cs16\fs16\up6 +{\footnote \pard\plain \s17 \f5\fs20 {\cs16\fs16\up6 +} func:0080}} {\cs16\fs16\up6 K{\footnote \pard\plain \s17 \f5\fs20 {\cs16\fs16\up6 K} Prompted Authenticate}}
 Prompted Authenticate
\par \pard\plain \f5\fs20 
\par Allows a user to establish an authenticated connection to either a NetWare 3 or NetWare 4 file server in either NDS or BINDERY modes.
\par 
\par {\cf5 \{bml f_aut1.bmp\}}{\cf1  }
\par 
\par \pard\plain \s29 \b\f5\fs22 Usage
\par \pard\plain \s28\li360 \f5\fs20 
Use this function to prompt the user for the server/tree name, the user name, and the password. The function automatically calls a pop-up dialog box for the user to input this information. The user inputs the necessary information as the function waits fo
r the user to click the OK button.
\par 
\par This function is identical to Authenticate except for the pop-up window that allows the user to input data directly instead of entering data in fields.
\par \pard\plain \f5\fs20 
\par \pard\plain \s29 \b\f5\fs22 Inputs
\par \pard\plain \s30\fi-360\li720\sa60\tx720 \f5\fs20 None
\par \pard\plain \f5\fs20 
\par \pard\plain \s29 \b\f5\fs22 Outputs
\par \pard\plain \s30\fi-360\li720\sa60\tx720 \f5\fs20 None
\par \pard\plain \f5\fs20 
\par \pard\plain \s29 \b\f5\fs22 Flows (Return Codes)
\par \pard\plain \s31\fi-2520\li2880\sa60\tx720\tx2880 \f5\fs20 1.\tab NDS authenticated\tab Followed if the NDS connection is authenticated.
\par 2.\tab NDS authenticated pwd expired\tab Followed if an NDS connection is constructed and authenticated and the user\rquote s password is currently expired.
\par 3.\tab Bindery authenticated\tab Followed if the BINDERY connection is authenticated.
\par 4.\tab Bindery authenticated pwd expired\tab Followed if a BINDERY connection is made and authenticated and the user\rquote s password is currently expired
\par 5.\tab Different user same tree\tab Followed when a user attempts to re-authenticate onto the same NDS tree as currently authenticated to, but as a different user.
\par 6.\tab Canceled\tab Followed if the user presses the cancel button on the pop-up login box, or leaves all the login fields empty.
\par 7.\tab Failed\tab Followed if an error occurs.
\par \pard\plain \f5\fs20 
\par \pard\plain \s29 \b\f5\fs22 Notes
\par \pard\plain \s28\li360 \f5\fs20 TBD
\par \pard\plain \f5\fs20 
\par /* bmc PRAUTEX2.SHG */
\par \pard\plain \s29 \b\f5\fs22 \page 
\par \pard\plain \f5\fs20 << old entries used in hypertext links from example bitmaps >>
\par \pard\plain \s29 \b\f5\fs22 
\par \pard \s29 Notification Object - Alert Notify
\par \pard\plain \f5\fs20 This function, Alert Notify, is a standard AppWare function that is found in the Notification functional category.  Its purpose is to display an alert box with a message and wait for the user to click on OK to proceed.
\par \pard 
\par \pard\plain \s29 \b\f5\fs22 File Object - Delete File
\par \pard\plain \f5\fs20 This function, Delete File, is a standard AppWare function that is found in the File Operations functional category.  Its purpose is to delete a specified file.
\par \pard 
\par \pard\plain \s29 \b\f5\fs22 General - Yes/No/Cancel
\par \pard\plain \f5\fs20 This function, Yes/No/Cancel, is a standard AppWare function that is found in the General functional category.  Its purpose is to display a message and wait for the user to respond by clicking on the Yes, No, or Cancel button.
\par \pard 
\par \pard\plain \s29 \b\f5\fs22 Launch Object - Launch Application
\par \pard\plain \f5\fs20 This function, Launch Application, is a standard AppWare function that is found in the Launch functional category.  Its purpose is to launch (run) applications specified in the command line field of the Launch object.
\par \pard 
\par }