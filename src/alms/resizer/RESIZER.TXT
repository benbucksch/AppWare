
******  RESIZER CUSTOM CONTROL  **********


**What is Does**
The resizer custom control provides an easy way to reorganize/resize 
the things in a dialog box when the dialog box is resized.

** Steps Involved **

1. Make the dialog box resizable.  Select the 'Thick Frame' checkbox, and 
   unselect the 'Modal Frame' checkbox.  You may also want to give it a 
   Maximize button.

2. Either go into the resource editor, edit the dialog, go under the 'Options'
   menu and select 'Install custom control', chose the resizer dll, go under the
	 'Control' menu, chose 'Custom', select 'AWResizer', and add it to the dialog
	 box. OR Add the following manually line:
		CONTROL "", 100/*or some unique id*/, "AWResizer", 0 | WS_CHILD, 257, 237, 20, 20

3. Add the AWResizeLeft, AWResizeRight, AWResizeTop, and AWResizeBottom RCDATA statements.
   For Example:
     AWResizeRight RCDATA 
      BEGIN
        PB_OK     PB_CANCEL   PB_HELP
        ST_VERTLINE   ST_OBJECTNAME
        0
      END
	 **** These lists of control ids MUST end with a 0 *****


*****  How it works  *****
The resizer control, when created, subclasses the parent dialog box.  When the 
parent is resized, it get control ids from the RCDATA resource statements.  When 
the width changes it adds the change to the left sides of everything under the 
AWResizeLeft RCDATA statement, and adds the change to the right sides of everything
under the AWResizeRight statement.  When the height changes, it add the change to the
top sides of everything under the AWResizeTop statement and the change to the bottom
sides of everything under the AWResizeBottom statement.

****  WARNINGS  ***
1) If the resizer control is going to be used in a dialog box that comes up at
runtime, you must include it in the list of dependant dlls you give to the bus.

2) The resize control is not functional during the test phase of the resource
workshop.  (Sorry, I'm not *that* smart :->)



