{\rtf1\ansi \deff5\deflang1033{\fonttbl{\f0\froman\fcharset0\fprq2 Tms Rmn;}{\f1\froman\fcharset2\fprq2 Symbol;}{\f2\fswiss\fcharset0\fprq2 Helv;}{\f3\fmodern\fcharset0\fprq1 Courier;}
{\f4\froman\fcharset0\fprq2 Times New Roman;}{\f5\fswiss\fcharset0\fprq2 Arial;}{\f6\froman\fcharset0\fprq2 MS Serif;}{\f7\fswiss\fcharset0\fprq2 MS Sans Serif;}{\f8\froman\fcharset0\fprq2 Times;}{\f9\fswiss\fcharset0\fprq2 Helvetica;}
{\f10\fswiss\fcharset0\fprq2 System;}{\f11\fmodern\fcharset0\fprq1 Courier New;}{\f12\fnil\fcharset2\fprq2 Wingdings;}{\f13\fnil\fcharset0\fprq2 WP OverflowSet;}{\f14\fscript\fcharset0\fprq2 Brush738 BT;}{\f15\fscript\fcharset0\fprq2 Blackletter686 BT;}
{\f16\froman\fcharset0\fprq2 Arrus Blk BT;}{\f17\froman\fcharset2\fprq2 MT Extra;}{\f18\fmodern\fcharset2\fprq1 MS LineDraw;}{\f19\fdecor\fcharset0\fprq2 Algerian;}{\f20\fswiss\fcharset0\fprq2 Arial Rounded MT Bold;}
{\f21\froman\fcharset0\fprq2 Bookman Old Style;}{\f22\fdecor\fcharset0\fprq2 Braggadocio;}{\f23\fswiss\fcharset0\fprq2 Britannic Bold;}{\f24\fscript\fcharset0\fprq2 Brush Script MT;}{\f25\fswiss\fcharset0\fprq2 Century Gothic;}
{\f26\fdecor\fcharset0\fprq2 Colonna MT;}{\f27\fdecor\fcharset0\fprq2 Desdemona;}{\f28\froman\fcharset0\fprq2 Footlight MT Light;}{\f29\fswiss\fcharset0\fprq2 Impact;}{\f30\fdecor\fcharset0\fprq2 Kino MT;}{\f31\froman\fcharset0\fprq2 Wide Latin;}
{\f32\fscript\fcharset0\fprq2 Matura MT Script Capitals;}{\f33\fdecor\fcharset0\fprq2 Playbill;}{\f34\fswiss\fcharset2\fprq2 WP Phonetic;}{\f35\fnil\fcharset2\fprq2 WP MathExtendedB;}{\f36\fmodern\fcharset0\fprq1 WP BoxDrawing;}
{\f37\fnil\fcharset2\fprq2 WP IconicSymbolsB;}{\f38\fnil\fcharset2\fprq2 WP Greek Helve;}{\f39\fnil\fcharset2\fprq2 WP MathExtendedA;}{\f40\froman\fcharset2\fprq2 WP CyrillicA;}{\f41\fnil\fcharset2\fprq2 WP Japanese;}{\f42\fnil\fcharset2\fprq2 WP MathB;}
{\f43\fnil\fcharset2\fprq2 WP IconicSymbolsA;}{\f44\fnil\fcharset2\fprq2 WP Arabic Sihafa;}{\f45\froman\fcharset2\fprq2 WP MultinationalA Roman;}{\f46\fnil\fcharset0\fprq2 WP CyrillicB;}{\f47\fnil\fcharset2\fprq2 WP MultinationalB Roman;}
{\f48\fmodern\fcharset2\fprq1 WP Greek Courier;}{\f49\fnil\fcharset2\fprq2 WP MathA;}{\f50\fnil\fcharset2\fprq2 WP ArabicScript Sihafa;}{\f51\fnil\fcharset2\fprq2 WP Greek Century;}{\f52\fnil\fcharset2\fprq2 WP TypographicSymbols;}
{\f53\fnil\fcharset2\fprq2 WP Hebrew David;}{\f54\fnil\fcharset2\fprq2 WP MultinationalA Helve;}{\f55\fnil\fcharset2\fprq2 WP MultinationalB Helve;}{\f56\fmodern\fcharset2\fprq1 WP MultinationalA Courier;}
{\f57\fmodern\fcharset2\fprq1 WP MultinationalB Courier;}{\f58\fscript\fcharset0\fprq2 Ribbon131 Bd BT;}{\f59\froman\fcharset0\fprq2 Humanst521 Lt BT;}{\f60\froman\fcharset0\fprq2 GeoSlab703 Lt BT;}{\f61\fswiss\fcharset0\fprq2 Swis721 BlkEx BT;}
{\f62\fswiss\fcharset0\fprq2 Humanst521 Cn BT;}{\f63\fdecor\fcharset0\fprq2 Onyx BT;}{\f64\fdecor\fcharset0\fprq2 CaslonOpnface BT;}{\f65\fswiss\fcharset0\fprq2 EngraversGothic BT;}{\f66\fscript\fcharset0\fprq2 ShelleyVolante BT;}
{\f67\froman\fcharset0\fprq2 BernhardMod BT;}{\f68\froman\fcharset0\fprq2 Arrus BT;}{\f69\fscript\fcharset0\fprq2 OzHandicraft BT;}{\f70\fswiss\fcharset0\fprq2 AvantGarde;}{\f71\froman\fcharset0\fprq2 Bookman;}
{\f72\fswiss\fcharset0\fprq2 Helvetica-Narrow;}{\f73\froman\fcharset0\fprq2 NewCenturySchlbk;}{\f74\froman\fcharset0\fprq2 Palatino;}{\f75\fscript\fcharset0\fprq2 ZapfChancery;}{\f76\fdecor\fcharset2\fprq2 ZapfDingbats;}
{\f77\froman\fcharset255\fprq2 Roman;}{\f78\fscript\fcharset255\fprq2 Script;}{\f79\fmodern\fcharset255\fprq2 Modern;}{\f80\fswiss\fcharset0\fprq1 MS Dialog;}{\f81\fnil\fcharset0\fprq1 Small Fonts;}{\f82\fswiss\fcharset0\fprq0 BI Helvetica BoldOblique;}
{\f83\fnil\fcharset0\fprq0 AGaramond;}{\f84\fswiss\fcharset0\fprq0 B Helvetica Bold;}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;
\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{\f5\fs20 \snext0 Normal;}{
\s1\sb240\sa60\keepn \b\f5\fs28\kerning28 \sbasedon0\snext15 heading 1;}{\s2\sb240\sa60\keepn \b\f5 \sbasedon0\snext15 heading 2;}{\s3\sb240\sa60\keepn \b\f5 \sbasedon0\snext15 heading 3;}{\s4\sb240\sa60\keepn \b\f5 \sbasedon0\snext15 heading 4;}{\*\cs10 
\additive Default Paragraph Font;}{\s15\li360\sa60\nowidctlpar \f5\fs20\cf1 \snext15 Body;}{\s16\tqc\tx4320\tqr\tx8640 \f5\fs20 \sbasedon0\snext16 header;}{\s17\li360\sb120\sa40\nowidctlpar \f5\fs20\cf1 \sbasedon41\snext0 Signal Name;}{
\s18\fi-360\li720\sa60\nowidctlpar \f5\fs20\cf1 \sbasedon15\snext18 Body - Bullet;}{\s19\li720\sa60\nowidctlpar \f5\fs20\cf1 \sbasedon42\snext17 Signal Text;}{\s20\fi-360\li720\sa60\nowidctlpar{\*\pn \pnlvl12\pnf1\pnstart1\pnindent360\pnhang
{\pntxtb \'b7}}\f5\fs20\cf1 \sbasedon15\snext20 Body - Indent;}{\s21\fi-360\li720\sa60\nowidctlpar{\*\pn \pnlvl10\pndec\pnstart1\pnindent360\pnhang{\pntxta .}}\f5\fs20\cf1 \sbasedon20\snext21 Instructions;}{\s22\tqc\tx4320\tqr\tx8640 \f5\fs20 
\sbasedon0\snext22 footer;}{\*\cs23 \additive\f5 \sbasedon10 page number;}{\s24\sb20\sa40 \b\f5 \sbasedon0\snext0 Help Topic Heading;}{\s25\li720\ri720\tldot\tx8280\tqr\tx8640 \f5\fs20\cf8 \sbasedon0\snext0 toc 2;}{\*\cs26 \additive\f5\fs16\up6 
\sbasedon10 footnote reference;}{\s27 \f5\fs20 \sbasedon0\snext27 footnote text;}{\s28 \b\f5 \sbasedon0\snext28 Help See Also;}{\*\cs29 \additive\f5\super \sbasedon10 endnote reference;}{\s30 \b\f5 \sbasedon0\snext0 Help Popup Heading;}{
\s31\sa60\tx720\tx1260 \b\f5\fs20 \sbasedon0\snext0 Topic Section;}{\s32\sb80 \f11 \sbasedon0\snext0 Function Syntax;}{\s33\sa120\tx2880 \f5\fs16 \sbasedon0\snext33 Topic Wizard Line 2;}{\s34\sb20\sa40\tx720\tx1260 \b\f5\fs32 \sbasedon24\snext34 new 2;}{
\s35\li360\ri20 \f5\fs20 \sbasedon0\snext0 hlpbrz_toc;}{\s36\li360\sa100 \b\f5\fs20 \sbasedon0\snext36 HelpBreeze TOC;}{\s37\ri432\sb40\sa40 \b\f5\fs20 \sbasedon0\snext15 Action;}{\s38\ri14\sb40\sa40 \i\f5\fs22 \sbasedon0\snext38 ALM;}{
\s39\fi-360\li720\sa60\nowidctlpar\tx360\tx1224\tx1440 \f5\fs20\cf1 \sbasedon18\snext39 Body - Left;}{\s40\sb240\sa60 \i\f5\fs22 \sbasedon0\snext40 Caution;}{\s41\li360\sb40\sa20\nowidctlpar \f5\fs20\cf1 \sbasedon15\snext0 Flow Name;}{
\s42\li720\sa60\nowidctlpar \f5\fs20\cf1 \sbasedon15\snext41 Flow Text;}{\s43\ri432\sb40\sa40 \b\f5\fs20 \sbasedon37\snext43 Flows;}{\s44\li360 \b\f5\fs20\uldb\cf11 \sbasedon36\snext44 Function Table;}{\s45\li360\sb40\sa20\nowidctlpar \f5\fs20\cf1 
\sbasedon41\snext0 Input Name;}{\s46\sb40\sa40 \b\f5\fs20 \sbasedon37\snext46 Input Parameters;}{\s47\li720\sa60\nowidctlpar \f5\fs20\cf1 \sbasedon42\snext45 Input Text;}{\s48\li360\sb40\sa20\nowidctlpar \f5\fs20\cf1 \sbasedon41\snext0 Output Name;}{
\s49\ri432\sb40\sa40 \b\f5\fs20 \sbasedon37\snext49 Output Parameters;}{\s50\li720\sa60\nowidctlpar \f5\fs20\cf1 \sbasedon42\snext48 Output Text;}{\s51\ri432\sb40\sa40 \b\f5\fs20 \sbasedon37\snext51 Platform;}{\s52\li1400\tqr\tldot\tx8640 \f5\fs20 
\sbasedon0\snext0 toc 8;}{\s53\sb40\sa40 \b\f5\fs20 \sbasedon37\snext53 Usage;}{\s54 \f5\fs10 \sbasedon0\snext54 Space After;}}{\info{\title Introduction to the XXX ALM:}{\author Kathy Schofield}{\doccomm <project = o:\\help\\general\\awusgnrl.hpj>}
{\operator Kathy Schofield}{\creatim\yr1995\mo8\dy10\hr12\min32}{\revtim\yr1995\mo8\dy10\hr12\min32}{\version2}{\edmins1}{\nofpages29}{\nofwords2557}{\nofchars14576}{\vern49203}}\widowctrl\ftnbj\aenddoc\linkstyles\formshade \fet0{\*\template 
C:\\WINWORD\\TEMPLATE\\hlpbrz6.dot}\sectd \linex0\endnhere {\header \pard\plain \s16\tqc\tx4320\tqr\tx8640 \f5\fs20 {\field{\*\fldinst {\cs23  DATE  \\l }}{\fldrslt {\cs23 7/7/95}}}{\cs23 \tab \tab }{\field{\*\fldinst {\cs23  TIME }}{\fldrslt {\cs23 
3:35 PM}}}
\par }{\footer \pard\plain \s22\qc\tqc\tx4320\tqr\tx8640 \f5\fs20 {\field{\*\fldinst {\cs23  PAGE }}{\fldrslt {\cs23 1}}}
\par }{\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang{\pntxta )}}{\*\pnseclvl5
\pndec\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang
{\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}\pard\plain \s24\sb20\sa40\keepn \b\f5 {\cs26\fs16\up6 #{\footnote \pard\plain \s27 \f5\fs20 {\cs26\fs16\up6 #} idx_contents}}{\*\bkmkstart idx_contents}
{\*\bkmkend idx_contents} {\cs26\fs16\up6 ${\footnote \pard\plain \s27 \f5\fs20 {\cs26\fs16\up6 $} General ALM Contents}} {\cs26\fs16\up6 K{\footnote \pard\plain \s27 \f5\fs20 {\cs26\fs16\up6 K} Contents}} {\cs26\fs16\up6 !{\footnote \pard\plain \s27 
\f5\fs20 {\cs26\fs16\up6 !} DB(`btn_up')}} Contents
\par \pard\plain \s36\li360\sa100 \b\f5\fs20 
\par {\uldb\cf11 Introduction to the General ALM}{\v idx_introduction_to_the_general_alm}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 
{\*\datafield 6964785f696e74726f64756374696f6e5f746f5f7468655f67656e6572616c5f6f7065726174696f}}}{\fldrslt }}{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}
\par {\uldb\cf11 General Functions}{\v idx_general_alm_functions}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 
6964785f67656e6572616c5f6f7065726174696f6e735f616c6d5f66756e6374696f6e73}}}{\fldrslt }}{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}
\par \pard\plain \s24\sb20\sa40\keepn \b\f5 \page {\cs26\fs16\up6 {\*\bkmkstart idx_introduction_to_the_general_alm}{\*\bkmkend idx_introduction_to_the_general_alm}#{\footnote \pard\plain \s27 \f5\fs20 {\cs26\fs16\up6 #} idx_introduction_to_the_general_alm}} {
\cs26\fs16\up6 ${\footnote \pard\plain \s27 \f5\fs20 {\cs26\fs16\up6 $} Introduction to the General ALM}} {\cs26\fs16\up6 +{\footnote \pard\plain \s27 \f5\fs20 {\cs26\fs16\up6 +} top:0005}} {\cs26\fs16\up6 K{\footnote \pard\plain \s27 \f5\fs20 {
\cs26\fs16\up6 K} Introduction to the General ALM}} {\cs26\fs16\up6 !{\footnote \pard\plain \s27 \f5\fs20 {\cs26\fs16\up6 !}  EB(`btn_up'); CBB(`btn_up', `JI(`', `idx_contents')')}} Introduction
\par \pard\plain \s36\li360\sa100\keepn \b\f5\fs20 {\uldb\cf11 Functions}{\v  idx_general_alm_functions}{\field\flddirty{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}
{\field\flddirty{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 6964785f67656e6572616c5f616c6d5f66756e6374696f6e73}}}{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}
\par \pard\plain \s54 \f5\fs10 
\par \pard\plain \s15\li360\sa60\nowidctlpar \f5\fs20\cf1 {\cf0 The General Operations functions provide services for many common object and program functions. There is no associated object.}
\par \pard\plain \s24\sb20\sa40\keepn \b\f5 \page {\cs26\fs16\up6 {\*\bkmkstart idx_general_alm_functions}{\*\bkmkend idx_general_alm_functions}#{\footnote \pard\plain \s27 \f5\fs20 {\cs26\fs16\up6 #} idx_general_alm_functions}} {\cs26\fs16\up6 ${\footnote 
\pard\plain \s27 \f5\fs20 {\cs26\fs16\up6 $} List of,}} {\cs26\fs16\up6 +{\footnote \pard\plain \s27 \f5\fs20 {\cs26\fs16\up6 +} top:0010}} {\cs26\fs16\up6 K{\footnote \pard\plain \s27 \f5\fs20 {\cs26\fs16\up6 K} General Functions}} {\cs26\fs16\up6 !
{\footnote \pard\plain \s27 \f5\fs20 {\cs26\fs16\up6 !}  EB(`btn_up'); CBB(`btn_up', `JI(`', `idx_contents')')}} General Operations Functions
\par \pard\plain \s36\li360\sa100 \b\f5\fs20 
\par \trowd \trqc \cellx2880\cellx5760 \pard\plain \s44\li360\intbl \b\f5\fs20\uldb\cf11 \{bmc graphics\\i_asin.bmp\}{\v\ulnone\cf0 idx_assign}{\field\flddirty{\*\fldinst {\b0\ulnone\cf0  macrobutton NextField }}{\fldrslt }}{\field\flddirty{\*\fldinst {
\b0\ulnone\cf1  }{\b0\ulnone\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field\flddirty{\*\fldinst {\b0\ulnone\cf1  ADDIN }{\b0\ulnone\cf1 {\*\datafield 6964785f61737369676e}}}{\fldrslt }}{\field\flddirty{\*\fldinst {\b0\ulnone\cf1  macrobutton NextField }
}{\fldrslt }}{\ulnone\cf0  }{\b0\ulnone\cf1  }Assign{\v  idx_assign}{\field\flddirty{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  ADDIN }{
\cf1 {\*\datafield 6964785f61737369676e}}}{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}
\par \cell \{bmc graphics\\i_getssi.bmp\}{\v idx_get_screen_size}{\field{\*\fldinst {\b0  macrobutton NextField }}{\fldrslt }}{\field{\*\fldinst {\b0\cf1  }{\b0\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field\flddirty{\*\fldinst {\b0\ulnone\cf1 
 macrobutton NextField }}{\fldrslt }}{\ulnone\cf0  }{\b0\ulnone\cf1  }Get Screen Size{\v  idx_get_screen_size}{\field\flddirty{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}
{\field\flddirty{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 6964785f6765745f73637265656e5f73697a65}}}{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}
\par \pard \s44\li360\intbl \cell \pard\plain \intbl \f5\fs20 \row \trowd \trqc \cellx2880\cellx5760 \pard\plain \s44\li360\intbl \b\f5\fs20\uldb\cf11 \{bmc graphics\\i_beep.bmp\}{\v idx_beep}{\field\flddirty{\*\fldinst  macrobutton NextField }{\fldrslt }}
{\field\flddirty{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field\flddirty{\*\fldinst {\b0\ulnone\cf1  macrobutton NextField }}{\fldrslt }}{\ulnone\cf0  }{\b0\ulnone\cf1  }Beep{\v  idx_beep}{\field\flddirty{\*\fldinst 
 macrobutton NextField }{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 6964785f62656570}}}{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1 
 macrobutton NextField }}{\fldrslt }}
\par \cell \{bmc graphics\\i_gtks.bmp\}{\v idx_get_ticks}{\field\flddirty{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field\flddirty{\*\fldinst {\b0\ulnone\cf1 
 macrobutton NextField }}{\fldrslt }}{\ulnone\cf0  }{\b0\ulnone\cf1  }Get Ticks{\v  idx_get_ticks}{\field\flddirty{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}
{\field\flddirty{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 6964785f6765745f7469636b73}}}{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}
\par \pard \s44\li360\intbl \cell \pard\plain \intbl \f5\fs20 \row \pard\plain \s44\li360\intbl \b\f5\fs20\uldb\cf11 \{bmc graphics\\i_clrn.bmp\}{\v idx_color_on}{\field\flddirty{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1 
 }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field\flddirty{\*\fldinst {\b0\ulnone\cf1  macrobutton NextField }}{\fldrslt }}{\ulnone\cf0  }{\b0\ulnone\cf1  }Color On?{\v  idx_color_on}{\field\flddirty{\*\fldinst  macrobutton NextField }{\fldrslt }}
{\field\flddirty{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 6964785f636f6c6f725f6f6e}}}{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}

\par \cell \{bmc graphics\\i_past.bmp\}{\v idx_paste}{\field\flddirty{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field\flddirty{\*\fldinst {\b0\ulnone\cf1 
 macrobutton NextField }}{\fldrslt }}{\ulnone\cf0  }{\b0\ulnone\cf1  }Paste{\v  idx_paste}{\field\flddirty{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}
{\field\flddirty{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 6964785f7061737465}}}{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}
\par \pard \s44\li360\intbl \cell \pard\plain \intbl \f5\fs20 \row \pard\plain \s44\li360\intbl \b\f5\fs20\uldb\cf11 \{bmc graphics\\i_copy.bmp\}{\v idx_copy}{\field\flddirty{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  }{
\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field\flddirty{\*\fldinst {\b0\ulnone\cf1  macrobutton NextField }}{\fldrslt }}{\ulnone\cf0  }{\b0\ulnone\cf1  }Copy{\v  idx_copy}{\field\flddirty{\*\fldinst  macrobutton NextField }{\fldrslt }}
{\field\flddirty{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 6964785f636f7079}}}{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}
\par \cell \{bmc graphics\\i_quit.bmp\}{\v idx_quit}{\field{\*\fldinst {\b0  macrobutton NextField }}{\fldrslt }}{\field{\*\fldinst {\b0\cf1  }{\b0\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field\flddirty{\*\fldinst {\b0\ulnone\cf1  macrobutton NextField }
}{\fldrslt }}{\ulnone\cf0  }{\b0\ulnone\cf1  }Quit{\v  idx_quit}{\field\flddirty{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  ADDIN }{\cf1 
{\*\datafield 6964785f71756974}}}{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}
\par \pard \s44\li360\intbl \cell \pard\plain \intbl \f5\fs20 \row \pard\plain \s44\li360\intbl \b\f5\fs20\uldb\cf11 \{bmc graphics\\i_cutt.bmp\}{\v idx_cut}{\field\flddirty{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  }{
\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field\flddirty{\*\fldinst {\b0\ulnone\cf1  macrobutton NextField }}{\fldrslt }}{\ulnone\cf0  }{\b0\ulnone\cf1  }Cut{\v  idx_cut}{\field\flddirty{\*\fldinst  macrobutton NextField }{\fldrslt }}
{\field\flddirty{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 6964785f637574}}}{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}
\par \cell \{bmc graphics\\i_smob.bmp\}{\v idx_same_object}{\field{\*\fldinst {\b0  macrobutton NextField }}{\fldrslt }}{\field{\*\fldinst {\b0\cf1  }{\b0\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field\flddirty{\*\fldinst {\b0\ulnone\cf1 
 macrobutton NextField }}{\fldrslt }}{\ulnone\cf0  }{\b0\ulnone\cf1  }Same Object?{\v  idx_same_object}{\field\flddirty{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}
{\field\flddirty{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 6964785f73616d655f6f626a656374}}}{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}
\par \pard \s44\li360\intbl \cell \pard\plain \intbl \f5\fs20 \row \pard\plain \s44\li360\intbl \b\f5\fs20\uldb\cf11 \{bmc graphics\\i_dlay.bmp\}{\v\ulnone\cf0 idx_delay}{\field{\*\fldinst {\b0\ulnone  macrobutton NextField }}{\fldrslt }}{\field{\*\fldinst {
\b0\ulnone\cf1  }{\b0\ulnone\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field\flddirty{\*\fldinst {\b0\ulnone\cf1  macrobutton NextField }}{\fldrslt }}{\ulnone\cf0  }{\b0\ulnone\cf1  }Delay{\v  idx_delay}{\field\flddirty{\*\fldinst  macrobutton NextField 
}{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 6964785f64656c6179}}}{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  macrobutton NextField }
}{\fldrslt }}
\par {\ulnone\cf0 \cell }\{bmc graphics\\i_smot.bmp\}{\v\ulnone\cf0 idx_same_type}{\field{\*\fldinst {\b0\ulnone\cf0  macrobutton NextField }}{\fldrslt }}{\field{\*\fldinst {\b0\ulnone\cf1  }{\b0\ulnone\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}
{\field\flddirty{\*\fldinst {\b0\ulnone\cf1  macrobutton NextField }}{\fldrslt }}{\ulnone\cf0  }{\b0\ulnone\cf1  }Same Type?{\v  idx_same_type}{\field\flddirty{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  }{\cf6 
macrobutton DoJump2 <+>}}{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 6964785f73616d655f74797065}}}{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}
\par \pard \s44\li360\intbl \cell \pard\plain \intbl \f5\fs20 \row \pard\plain \s44\li360\intbl \b\f5\fs20\uldb\cf11 \{bmc graphics\\i_dialph.bmp\}{\v idx_dial_phone}{\field{\*\fldinst {\b0  macrobutton NextField }}{\fldrslt }}{\field{\*\fldinst {\b0\cf1  }{
\b0\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field\flddirty{\*\fldinst {\b0\ulnone\cf1  macrobutton NextField }}{\fldrslt }}{\ulnone\cf0  }{\b0\ulnone\cf1  }Dial Phone{\v  idx_dial_phone}{\field\flddirty{\*\fldinst  macrobutton NextField }{\fldrslt }}
{\field\flddirty{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 6964785f6469616c5f70686f6e65}}}{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}

\par \cell \{bmc graphics\\i_undo.bmp\}{\v idx_undo}{\field{\*\fldinst {\b0  macrobutton NextField }}{\fldrslt }}{\field{\*\fldinst {\b0\cf1  }{\b0\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field\flddirty{\*\fldinst {\b0\ulnone\cf1  macrobutton NextField }
}{\fldrslt }}{\ulnone\cf0  }{\b0\ulnone\cf1  }Undo{\v  idx_undo}{\field\flddirty{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  ADDIN }{\cf1 
{\*\datafield 6964785f756e646f}}}{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}
\par \pard \s44\li360\intbl \cell \pard\plain \intbl \f5\fs20 \row \trowd \trqc \cellx2880\cellx5760 \pard\plain \s44\li360\intbl \b\f5\fs20\uldb\cf11 \{bmc graphics\\i_frem.bmp\}{\v idx_free_memory}{\field\flddirty{\*\fldinst  macrobutton NextField 
}{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field\flddirty{\*\fldinst {\b0\ulnone\cf1  macrobutton NextField }}{\fldrslt }}{\ulnone\cf0  }{\b0\ulnone\cf1  }Free Memory{\v  idx_free_memory}
{\field\flddirty{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 6964785f667265655f6d656d6f7279}}}{\fldrslt }}
{\field\flddirty{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}
\par \cell \{bmc graphics\\i_ysnc.bmp\}{\v idx_yes_no_cancel}{\field{\*\fldinst {\b0  macrobutton NextField }}{\fldrslt }}{\field{\*\fldinst {\b0\cf1  }{\b0\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field\flddirty{\*\fldinst {\b0\ulnone\cf1 
 macrobutton NextField }}{\fldrslt }}{\ulnone\cf0  }{\b0\ulnone\cf1  }Yes No Cancel{\v  idx_yes_no_cancel}{\field\flddirty{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}
{\field\flddirty{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 6964785f7965735f6e6f5f63616e63656c}}}{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}
\par \pard \s44\li360\intbl \cell \pard\plain \intbl \f5\fs20 \row \pard\plain \s24\sb20\sa40\keepn \b\f5 \page {\cs26\fs16\up6 {\*\bkmkstart idx_assign}{\*\bkmkend idx_assign}#{\footnote \pard\plain \s27 \f5\fs20 {\cs26\fs16\up6 #} idx_assign}} {
\cs26\fs16\up6 ${\footnote \pard\plain \s27 \f5\fs20 {\cs26\fs16\up6 $} Parameters & Flows}} {\cs26\fs16\up6 +{\footnote \pard\plain \s27 \f5\fs20 {\cs26\fs16\up6 +} brws3:0005}} {\cs26\fs16\up6 K{\footnote \pard\plain \s27 \f5\fs20 {\cs26\fs16\up6 K}
 Assign}} {\cs26\fs16\up6 !{\footnote \pard\plain \s27 \f5\fs20 {\cs26\fs16\up6 !} EB(`btn_up'); CBB(`btn_up', `JI(`', `idx_general_alm_functions')')}} Assign
\par \pard\plain \s36\li360\sa100\keepn \b\f5\fs20 General ALM\tab {\uldb\cf11 Usage}{\v  idx_usage_assign}{\field\flddirty{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}
{\field\flddirty{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 6964785f75736167655f61737369676e}}}{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}
\par \pard\plain \s54 \f5\fs10 
\par \pard\plain \s15\li360\sa60\nowidctlpar \f5\fs20\cf1 {\cchs256 Transfers the value of one object to another of compatible or identical type.
\par }\pard \s15\li360\sa60\nowidctlpar 
\par \pard\plain \s36\li360\sa100 \b\f5\fs20 {\cf5 \{bmc graphics\\f_asin.bmp\}}{\cf1  }
\par \pard\plain \s15\li360\sa60\nowidctlpar \f5\fs20\cf1 {\cchs256 
\par }\pard\plain \s46\sb40\sa40 \b\f5\fs20 {\cchs256 Input Parameters
\par }\pard\plain \s45\li360\sb40\sa20\nowidctlpar \f5\fs20\cf1 {\cchs256 Source}\tab (Required){\cchs256 
\par }\pard\plain \s47\li720\sa60\nowidctlpar \f5\fs20\cf1 {\cchs256 Identifies }the object whose value is to be transfered. {\cchs256 See }{\uldb\cf11 Usage}{\v\cf0 idx_usage_assign}{\field{\*\fldinst {\cf0  macrobutton NextField }}{\fldrslt }}
{\field{\*\fldinst  {\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst  ADDIN {{\*\datafield 6964785f75736167655f61737369676e}}}{\fldrslt }}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\cf0  }{\cchs256 
for a partial list of assignable object types. 
\par }\pard\plain \s45\li360\sb40\sa20\nowidctlpar \f5\fs20\cf1 {\cchs256 Destination}\tab \tab (Required){\cchs256 
\par }\pard\plain \s47\li720\sa60\nowidctlpar \f5\fs20\cf1 {\cchs256 Identifies }the{\cchs256  object} to recieve the transfered value{\cchs256 . }The value, not the attributes, of the Source object is transfered. {\cchs256 Temporary objects are invalid. See }
{\uldb\cf11 Usage}{\v\cf0 idx_usage_assign}{\field{\*\fldinst {\cf0  macrobutton NextField }}{\fldrslt }}{\field{\*\fldinst  {\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst  ADDIN {{\*\datafield 6964785f75736167655f61737369676e}}
}{\fldrslt }}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\cf0  }{\cchs256 for a partial list of assignable object types.
\par }\pard\plain \s43\ri432\sb40\sa40 \b\f5\fs20 {\cchs256 Flows
\par }\pard\plain \s41\li360\sb40\sa20\nowidctlpar \f5\fs20\cf1 {\cchs256 Done
\par }\pard\plain \s42\li720\sa60\nowidctlpar \f5\fs20\cf1 {\cchs256 Followed after the }source object is assigned to the Destination object{\cchs256 .}
\par \pard\plain \s24\sb20\sa40\keepn \b\f5 \page {\cs26\fs16\up6 {\*\bkmkstart idx_usage_assign}{\*\bkmkend idx_usage_assign}#{\footnote \pard\plain \s27 \f5\fs20 {\cs26\fs16\up6 #} idx_usage_assign}} {\cs26\fs16\up6 +{\footnote \pard\plain \s27 \f5\fs20 {
\cs26\fs16\up6 +} func1:0010}} {\cs26\fs16\up6 ${\footnote \pard\plain \s27 \f5\fs20 {\cs26\fs16\up6 $} Usage}} {\cs26\fs16\up6 K{\footnote \pard\plain \s27 \f5\fs20 {\cs26\fs16\up6 K} Assign}} {\cs26\fs16\up6 !{\footnote \pard\plain \s27 \f5\fs20 {
\cs26\fs16\up6 !} EB(`btn_up'); CBB(`btn_up', `JI(`', `idx_assign')')}} Usage
\par \pard\plain \s36\li360\sa100\keepn \b\f5\fs20 Assign
\par \pard\plain \s54 \f5\fs10 {\cchs256 
\par }\pard\plain \s15\li360\sa60\nowidctlpar \f5\fs20\cf1 {\cchs256 Assignable objects include Bundle, Button, Date, Flag, Group, List, Menu, Menu Item, Number, Picture, Table, Text, and Time.
\par }\pard \s15\li360\sa60\nowidctlpar {\cchs256 The source and destination objects should be of the same type. For some objects, such as Text, Number, Date, and Time, }the {\cchs256 Assign }function {\cchs256 can "coerce" the }value{\cchs256 
 so that it matches that of the destination, allowing you to assign a Number object to a Text object, a Text object to a Date object, and so on.
\par }NOTE:{\cchs256 
 When assigning a Text to a Number object, remember that Numbers do not accept alpha characters other than period (.) and comma (,). If the Number is of the floating point (real) type, it can display alpha characters that are part of the predefined format
, but you can not enter these using the keyboard. Similar restrictions apply to Date and Time objects}.{\cchs256 
\par }\pard\plain \s24\sb20\sa40\keepn \b\f5 \page {\cs26\fs16\up6 {\*\bkmkstart idx_beep}{\*\bkmkend idx_beep}#{\footnote \pard\plain \s27 \f5\fs20 {\cs26\fs16\up6 #} idx_beep}} {\cs26\fs16\up6 ${\footnote \pard\plain \s27 \f5\fs20 {\cs26\fs16\up6 $}
 Parameters & Flows}} {\cs26\fs16\up6 +{\footnote \pard\plain \s27 \f5\fs20 {\cs26\fs16\up6 +} brws3:0010}} {\cs26\fs16\up6 K{\footnote \pard\plain \s27 \f5\fs20 {\cs26\fs16\up6 K} Beep}} {\cs26\fs16\up6 !{\footnote \pard\plain \s27 \f5\fs20 {
\cs26\fs16\up6 !} EB(`btn_up'); CBB(`btn_up', `JI(`', `idx_general_alm_functions')')}} Beep
\par \pard\plain \s36\li360\sa100\keepn \b\f5\fs20 General ALM\tab {\uldb\cf11 Usage}{\v  idx_usage_beep}{\field\flddirty{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}
{\field\flddirty{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 6964785f75736167655f62656570}}}{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}
\par \pard\plain \s54 \f5\fs10 
\par \pard\plain \s15\li360\sa60\nowidctlpar \f5\fs20\cf1 {\cchs256 Generates the system beep.
\par }\pard \s15\li360\sa60\nowidctlpar 
\par \pard\plain \s36\li360\sa100 \b\f5\fs20 {\cf5 \{bmc graphics\\f_beep.bmp\}}{\cf1  }
\par \pard\plain \s15\li360\sa60\nowidctlpar \f5\fs20\cf1 {\cchs256 
\par }\pard\plain \s46\sb40\sa40 \b\f5\fs20 Parameters
\par \pard\plain \s47\li720\sa60\nowidctlpar \f5\fs20\cf1 {\cchs256 The Beep function has no parameters.
\par }\pard\plain \s43\ri432\sb40\sa40 \b\f5\fs20 {\cchs256 Flows
\par }\pard\plain \s41\li360\sb40\sa20\nowidctlpar \f5\fs20\cf1 {\cchs256 Done
\par }\pard\plain \s42\li720\sa60\nowidctlpar \f5\fs20\cf1 {\cchs256 Followed after beeping.}
\par \pard\plain \s24\sb20\sa40\keepn \b\f5 \page {\cs26\fs16\up6 {\*\bkmkstart idx_usage_beep}{\*\bkmkend idx_usage_beep}#{\footnote \pard\plain \s27 \f5\fs20 {\cs26\fs16\up6 #} idx_usage_beep}} {\cs26\fs16\up6 +{\footnote \pard\plain \s27 \f5\fs20 {
\cs26\fs16\up6 +} func2:0010}} {\cs26\fs16\up6 ${\footnote \pard\plain \s27 \f5\fs20 {\cs26\fs16\up6 $} Usage}} {\cs26\fs16\up6 K{\footnote \pard\plain \s27 \f5\fs20 {\cs26\fs16\up6 K} Beep}} {\cs26\fs16\up6 !{\footnote \pard\plain \s27 \f5\fs20 {
\cs26\fs16\up6 !} EB(`btn_up'); CBB(`btn_up', `JI(`', `idx_beep')')}} Usage
\par \pard\plain \s36\li360\sa100\keepn \b\f5\fs20 Beep
\par \pard\plain \s54 \f5\fs10 {\cchs256 
\par }\pard\plain \s15\li360\sa60\nowidctlpar \f5\fs20\cf1 A typical use of this function is {\cchs256 to alert the user of your program when an error occurs or when an action taken by the user is not allowed.
\par }NOTE:{\cchs256  You do not need to call Beep when using the }{\uldb\cf11 Alert Notify}{\v\cf0 idx_alert_notify@awusntfy.hlp}{\field{\*\fldinst {\cf0  macrobutton NextField }}{\fldrslt }}{\field{\*\fldinst  {\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}
{\field{\*\fldinst  ADDIN {{\*\datafield 6964785f616c6572745f6e6f746966795f616c6d5f6e7466795f686c70}}}{\fldrslt }}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\cf0  }{\cchs256 function; it automatically generates a beep.
\par On faster machines running }Windows{\cchs256 , multiple Beep functions in succession may sound like a single beep. If you wish to distinguish between individual beeps, call the }{\uldb\cf11 Delay}{\v\cf0 idx_delay}{\field{\*\fldinst {\cf0 
 macrobutton NextField }}{\fldrslt }}{\field{\*\fldinst  {\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst  ADDIN {{\*\datafield 6964785f64656c6179}}}{\fldrslt }}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\cf0  }{\cchs256 
function after each use of Beep.
\par }\pard\plain \s24\sb20\sa40\keepn \b\f5 \page {\cs26\fs16\up6 {\*\bkmkstart idx_color_on}{\*\bkmkend idx_color_on}#{\footnote \pard\plain \s27 \f5\fs20 {\cs26\fs16\up6 #} idx_color_on}} {\cs26\fs16\up6 ${\footnote \pard\plain \s27 \f5\fs20 {
\cs26\fs16\up6 $} Parameters & Flows}} {\cs26\fs16\up6 +{\footnote \pard\plain \s27 \f5\fs20 {\cs26\fs16\up6 +} brws3:0015}} {\cs26\fs16\up6 K{\footnote \pard\plain \s27 \f5\fs20 {\cs26\fs16\up6 K} Color On?}} {\cs26\fs16\up6 !{\footnote \pard\plain \s27 
\f5\fs20 {\cs26\fs16\up6 !} EB(`btn_up'); CBB(`btn_up', `JI(`', `idx_general_alm_functions')')}} Color On?
\par \pard\plain \s36\li360\sa100\keepn \b\f5\fs20 General ALM\tab {\uldb\cf11 Usage}{\v  idx_usage_color_on}{\field\flddirty{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}
{\field\flddirty{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 6964785f75736167655f636f6c6f725f6f6e}}}{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}
\par \pard\plain \s54 \f5\fs10 
\par \pard\plain \s15\li360\sa60\nowidctlpar \f5\fs20\cf1 {\cchs256 Tests whether color is on }or off{\cchs256 .
\par }\pard \s15\li360\sa60\nowidctlpar 
\par \pard\plain \s36\li360\sa100 \b\f5\fs20 {\cf5 \{bmc graphics\\f_clrn.bmp\}}{\cf1  }
\par \pard\plain \s15\li360\sa60\nowidctlpar \f5\fs20\cf1 
\par \pard\plain \s46\sb40\sa40 \b\f5\fs20 Parameters{\cchs256 
\par }\pard\plain \s47\li720\sa60\nowidctlpar \f5\fs20\cf1 {\cchs256 The Color On? function has no parameters.
\par }\pard\plain \s43\ri432\sb40\sa40 \b\f5\fs20 {\cchs256 Flows
\par }\pard\plain \s41\li360\sb40\sa20\nowidctlpar \f5\fs20\cf1 {\cchs256 On
\par }\pard\plain \s42\li720\sa60\nowidctlpar \f5\fs20\cf1 {\cchs256 Followed if color is on.
\par }\pard\plain \s41\li360\sb40\sa20\nowidctlpar \f5\fs20\cf1 {\cchs256 Off
\par }\pard\plain \s42\li720\sa60\nowidctlpar \f5\fs20\cf1 {\cchs256 Followed if color is off or unavailable.}
\par \pard\plain \s24\sb20\sa40\keepn \b\f5 \page {\cs26\fs16\up6 {\*\bkmkstart idx_usage_color_on}{\*\bkmkend idx_usage_color_on}#{\footnote \pard\plain \s27 \f5\fs20 {\cs26\fs16\up6 #} idx_usage_color_on}} {\cs26\fs16\up6 +{\footnote \pard\plain \s27 
\f5\fs20 {\cs26\fs16\up6 +} func3:0010}} {\cs26\fs16\up6 ${\footnote \pard\plain \s27 \f5\fs20 {\cs26\fs16\up6 $} Usage}} {\cs26\fs16\up6 K{\footnote \pard\plain \s27 \f5\fs20 {\cs26\fs16\up6 K} Color On?}} {\cs26\fs16\up6 !{\footnote \pard\plain \s27 
\f5\fs20 {\cs26\fs16\up6 !} EB(`btn_up'); CBB(`btn_up', `JI(`', `idx_color_on')')}} Usage
\par \pard\plain \s36\li360\sa100\keepn \b\f5\fs20 Color On?
\par \pard\plain \s54 \f5\fs10 {\cchs256 
\par }\pard\plain \s15\li360\sa60\nowidctlpar \f5\fs20\cf1 {\cchs256 Color is "on" if the machine running the application supports color and if the current color depth is 2-bit or higher (in other words, }4{\cchs256  or }more{\cchs256  color}s{\cchs256 
). Grayscale is treated as color.
\par }\pard\plain \s24\sb20\sa40\keepn \b\f5 \page {\cs26\fs16\up6 {\*\bkmkstart idx_copy}{\*\bkmkend idx_copy}#{\footnote \pard\plain \s27 \f5\fs20 {\cs26\fs16\up6 #} idx_copy}} {\cs26\fs16\up6 ${\footnote \pard\plain \s27 \f5\fs20 {\cs26\fs16\up6 $}
 Parameters & Flows}} {\cs26\fs16\up6 +{\footnote \pard\plain \s27 \f5\fs20 {\cs26\fs16\up6 +} brws3:0020}} {\cs26\fs16\up6 K{\footnote \pard\plain \s27 \f5\fs20 {\cs26\fs16\up6 K} Copy}} {\cs26\fs16\up6 !{\footnote \pard\plain \s27 \f5\fs20 {
\cs26\fs16\up6 !} EB(`btn_up'); CBB(`btn_up', `JI(`', `idx_general_alm_functions')')}} Copy
\par \pard\plain \s36\li360\sa100\keepn \b\f5\fs20 General ALM\tab {\uldb\cf11 Usage}{\v  idx_usage_copy}{\field\flddirty{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}
{\field\flddirty{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 6964785f75736167655f636f7079}}}{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}
\par \pard\plain \s54 \f5\fs10 
\par \pard\plain \s15\li360\sa60\nowidctlpar \f5\fs20\cf1 {\cchs256 Copies the current selection from the active field of the front window to the Clipboard.
\par }\pard \s15\li360\sa60\nowidctlpar 
\par \pard\plain \s36\li360\sa100 \b\f5\fs20 {\cf5 \{bmc graphics\\f_copy.bmp\}}{\cf1  }
\par \pard\plain \s15\li360\sa60\nowidctlpar \f5\fs20\cf1 {\cchs256 
\par }\pard\plain \s46\sb40\sa40 \b\f5\fs20 Parameters
\par \pard\plain \s47\li720\sa60\nowidctlpar \f5\fs20\cf1 {\cchs256 The Copy function has no parameters.
\par }\pard\plain \s43\ri432\sb40\sa40 \b\f5\fs20 {\cchs256 Flows
\par }\pard\plain \s41\li360\sb40\sa20\nowidctlpar \f5\fs20\cf1 {\cchs256 Done
\par }\pard\plain \s42\li720\sa60\nowidctlpar \f5\fs20\cf1 {\cchs256 Followed after the }current selection{\cchs256  has been }copied{\cchs256 .}
\par \pard\plain \s24\sb20\sa40\keepn \b\f5 \page {\cs26\fs16\up6 {\*\bkmkstart idx_usage_copy}{\*\bkmkend idx_usage_copy}#{\footnote \pard\plain \s27 \f5\fs20 {\cs26\fs16\up6 #} idx_usage_copy}} {\cs26\fs16\up6 +{\footnote \pard\plain \s27 \f5\fs20 {
\cs26\fs16\up6 +} func4:0010}} {\cs26\fs16\up6 ${\footnote \pard\plain \s27 \f5\fs20 {\cs26\fs16\up6 $} Usage}} {\cs26\fs16\up6 K{\footnote \pard\plain \s27 \f5\fs20 {\cs26\fs16\up6 K} Copy}} {\cs26\fs16\up6 !{\footnote \pard\plain \s27 \f5\fs20 {
\cs26\fs16\up6 !} EB(`btn_up'); CBB(`btn_up', `JI(`', `idx_copy')')}} Usage
\par \pard\plain \s36\li360\sa100\keepn \b\f5\fs20 Copy
\par \pard\plain \s54 \f5\fs10 {\cchs256 
\par }\pard\plain \s15\li360\sa60\nowidctlpar \f5\fs20\cf1 {\cchs256 Copy works with Date, Number, Picture, Text, and Time objects. You typically connect this function to a Copy menu item.
\par }\pard\plain \s24\sb20\sa40\keepn \b\f5 \page {\cs26\fs16\up6 {\*\bkmkstart idx_cut}{\*\bkmkend idx_cut}#{\footnote \pard\plain \s27 \f5\fs20 {\cs26\fs16\up6 #} idx_cut}} {\cs26\fs16\up6 ${\footnote \pard\plain \s27 \f5\fs20 {\cs26\fs16\up6 $}
 Parameters & Flows}} {\cs26\fs16\up6 +{\footnote \pard\plain \s27 \f5\fs20 {\cs26\fs16\up6 +} brws3:0025}} {\cs26\fs16\up6 K{\footnote \pard\plain \s27 \f5\fs20 {\cs26\fs16\up6 K} Cut}} {\cs26\fs16\up6 !{\footnote \pard\plain \s27 \f5\fs20 {
\cs26\fs16\up6 !} EB(`btn_up'); CBB(`btn_up', `JI(`', `idx_general_alm_functions')')}} Cut
\par \pard\plain \s36\li360\sa100\keepn \b\f5\fs20 General ALM\tab {\uldb\cf11 Usage}{\v  idx_usage_cut}{\field\flddirty{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}
{\field\flddirty{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 6964785f75736167655f637574}}}{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}
\par \pard\plain \s54 \f5\fs10 
\par \pard\plain \s15\li360\sa60\nowidctlpar \f5\fs20\cf1 {\cchs256 Removes the current selection from the active field of the front window and }places it on{\cchs256  the Clipboard.
\par }\pard \s15\li360\sa60\nowidctlpar 
\par \pard\plain \s36\li360\sa100 \b\f5\fs20 {\cf5 \{bmc graphics\\f_cutt.bmp\}}{\cf1  }
\par \pard\plain \s15\li360\sa60\nowidctlpar \f5\fs20\cf1 
\par \pard\plain \s46\sb40\sa40 \b\f5\fs20 Parameters{\cchs256 
\par }\pard\plain \s47\li720\sa60\nowidctlpar \f5\fs20\cf1 {\cchs256 The Cut function has no parameters.
\par }\pard\plain \s43\ri432\sb40\sa40 \b\f5\fs20 {\cchs256 Flows
\par }\pard\plain \s41\li360\sb40\sa20\nowidctlpar \f5\fs20\cf1 {\cchs256 Done
\par }\pard\plain \s42\li720\sa60\nowidctlpar \f5\fs20\cf1 {\cchs256 Followed after the selection }has been{\cchs256  cut.}
\par \pard\plain \s24\sb20\sa40\keepn \b\f5 \page {\cs26\fs16\up6 {\*\bkmkstart idx_usage_cut}{\*\bkmkend idx_usage_cut}#{\footnote \pard\plain \s27 \f5\fs20 {\cs26\fs16\up6 #} idx_usage_cut}} {\cs26\fs16\up6 ${\footnote \pard\plain \s27 \f5\fs20 {
\cs26\fs16\up6 $} Usage}} {\cs26\fs16\up6 +{\footnote \pard\plain \s27 \f5\fs20 {\cs26\fs16\up6 +} func5:0010}} {\cs26\fs16\up6 K{\footnote \pard\plain \s27 \f5\fs20 {\cs26\fs16\up6 K} Cut}} {\cs26\fs16\up6 !{\footnote \pard\plain \s27 \f5\fs20 {
\cs26\fs16\up6 !}  EB(`btn_up'); CBB(`btn_up', `JI(`', `idx_cut')')}} Usage
\par \pard\plain \s36\li360\sa100\keepn \b\f5\fs20 Cut
\par \pard\plain \s54 \f5\fs10 {\cchs256 
\par }\pard\plain \s15\li360\sa60\nowidctlpar \f5\fs20\cf1 Cut{\cchs256  works with Date, Number, Picture, Text, and Time objects. You typically connect this function to a }Cut{\cchs256  menu item.
\par }\pard\plain \s24\sb20\sa40\keepn \b\f5 \page {\cs26\fs16\up6 {\*\bkmkstart idx_delay}{\*\bkmkend idx_delay}#{\footnote \pard\plain \s27 \f5\fs20 {\cs26\fs16\up6 #} idx_delay}} {\cs26\fs16\up6 ${\footnote \pard\plain \s27 \f5\fs20 {\cs26\fs16\up6 $}
 Parameters & Flows}} {\cs26\fs16\up6 +{\footnote \pard\plain \s27 \f5\fs20 {\cs26\fs16\up6 +} brws3:0030}} {\cs26\fs16\up6 K{\footnote \pard\plain \s27 \f5\fs20 {\cs26\fs16\up6 K} Delay}} {\cs26\fs16\up6 !{\footnote \pard\plain \s27 \f5\fs20 {
\cs26\fs16\up6 !} EB(`btn_up'); CBB(`btn_up', `JI(`', `idx_general_alm_functions')')}} Delay
\par \pard\plain \s36\li360\sa100\keepn \b\f5\fs20 General ALM\tab {\uldb\cf11 Usage}{\v  idx_usage_delay}{\field\flddirty{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}
{\field\flddirty{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 6964785f75736167655f64656c6179}}}{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}
\par \pard\plain \s54 \f5\fs10 
\par \pard\plain \s15\li360\sa60\nowidctlpar \f5\fs20\cf1 {\cchs256 Suspends all CPU activity for a specified time period. You specify the length of the delay period in "ticks", or }1/60{\cchs256  of a second.
\par }\pard \s15\li360\sa60\nowidctlpar 
\par \pard\plain \s36\li360\sa100 \b\f5\fs20 {\cf5 \{bmc graphics\\f_dlay.bmp\}}{\cf1  }
\par \pard\plain \s15\li360\sa60\nowidctlpar \f5\fs20\cf1 {\cchs256 
\par }\pard\plain \s46\sb40\sa40 \b\f5\fs20 {\cchs256 Input Parameters
\par }\pard\plain \s45\li360\sb40\sa20\nowidctlpar \f5\fs20\cf1 {\cchs256 Ticks}\tab (Number/Required){\cchs256 
\par }\pard\plain \s47\li720\sa60\nowidctlpar \f5\fs20\cf1 {\cchs256 Specifies the duration of the delay in units of 1/60 of a second ("ticks").
\par }\pard\plain \s43\ri432\sb40\sa40 \b\f5\fs20 {\cchs256 Flows
\par }\pard\plain \s41\li360\sb40\sa20\nowidctlpar \f5\fs20\cf1 {\cchs256 Done
\par }\pard\plain \s42\li720\sa60\nowidctlpar \f5\fs20\cf1 {\cchs256 Followed after the delay }is finished{\cchs256 .}
\par \pard\plain \s24\sb20\sa40\keepn \b\f5 \page {\cs26\fs16\up6 {\*\bkmkstart idx_usage_delay}{\*\bkmkend idx_usage_delay}#{\footnote \pard\plain \s27 \f5\fs20 {\cs26\fs16\up6 #} idx_usage_delay}} {\cs26\fs16\up6 +{\footnote \pard\plain \s27 \f5\fs20 {
\cs26\fs16\up6 +} func6:0010}} {\cs26\fs16\up6 ${\footnote \pard\plain \s27 \f5\fs20 {\cs26\fs16\up6 $} Usage}} {\cs26\fs16\up6 K{\footnote \pard\plain \s27 \f5\fs20 {\cs26\fs16\up6 K} Delay}} {\cs26\fs16\up6 !{\footnote \pard\plain \s27 \f5\fs20 {
\cs26\fs16\up6 !} EB(`btn_up'); CBB(`btn_up', `JI(`', `idx_delay')')}} Usage
\par \pard\plain \s36\li360\sa100\keepn \b\f5\fs20 Delay
\par \pard\plain \s54 \f5\fs10 {\cchs256 
\par }\pard\plain \s15\li360\sa60\nowidctlpar \f5\fs20\cf1 A typical use of this function is to temporarily display a window containing information, such as an About screen, that does not require a user reponse. {\cchs256 
The delay gives the user time to read the }information in the {\cchs256 window before it }is closed{\cchs256 .
\par }\pard \s15\li360\sa60\nowidctlpar {\cchs256 Since all processing is suspended for the duration of the delay, you can't use the Delay function to pause while waiting }for {\cchs256 a programmatic or user event to occur.
\par }\pard\plain \s24\sb20\sa40\keepn \b\f5 \page {\cs26\fs16\up6 {\*\bkmkstart idx_dial_phone}{\*\bkmkend idx_dial_phone}#{\footnote \pard\plain \s27 \f5\fs20 {\cs26\fs16\up6 #} idx_dial_phone}} {\cs26\fs16\up6 ${\footnote \pard\plain \s27 \f5\fs20 {
\cs26\fs16\up6 $} Parameters & Flows}} {\cs26\fs16\up6 +{\footnote \pard\plain \s27 \f5\fs20 {\cs26\fs16\up6 +} brws3:0035}} {\cs26\fs16\up6 K{\footnote \pard\plain \s27 \f5\fs20 {\cs26\fs16\up6 K} Dial Phone}} {\cs26\fs16\up6 !{\footnote \pard\plain 
\s27 \f5\fs20 {\cs26\fs16\up6 !} EB(`btn_up'); CBB(`btn_up', `JI(`', `idx_general_alm_functions')')}} Dial Phone - Macintosh
\par \pard\plain \s36\li360\sa100\keepn \b\f5\fs20 General ALM\tab {\uldb\cf11 Usage}{\v  idx_usage_dial_phone}{\field\flddirty{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}
{\field\flddirty{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 6964785f75736167655f6469616c5f70686f6e65}}}{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}
\par \pard\plain \s54 \f5\fs10 
\par \pard\plain \s15\li360\sa60\nowidctlpar \f5\fs20\cf1 Simulates the dial tones produced{\cchs256  by a touch-tone telephone.
\par }\pard \s15\li360\sa60\nowidctlpar 
\par \pard\plain \s36\li360\sa100 \b\f5\fs20 {\cf5 \{bmc graphics\\f_dialph.bmp\}}{\cf1  }
\par \pard\plain \s15\li360\sa60\nowidctlpar \f5\fs20\cf1 {\cchs256 
\par }\pard\plain \s46\sb40\sa40 \b\f5\fs20 {\cchs256 Input Parameters
\par }\pard\plain \s45\li360\sb40\sa20\nowidctlpar \f5\fs20\cf1 {\cchs256 Phone Number}\tab (Text/Required){\cchs256 
\par }\pard\plain \s47\li720\sa60\nowidctlpar \f5\fs20\cf1 {\cchs256 Specifies the number to dial (in alpha or numeric characters).
\par }\pard\plain \s43\ri432\sb40\sa40 \b\f5\fs20 {\cchs256 Flows
\par }\pard\plain \s41\li360\sb40\sa20\nowidctlpar \f5\fs20\cf1 {\cchs256 Done
\par }\pard\plain \s42\li720\sa60\nowidctlpar \f5\fs20\cf1 {\cchs256 Followed after the number is dialed.}
\par \pard\plain \s24\sb20\sa40\keepn \b\f5 \page {\cs26\fs16\up6 {\*\bkmkstart idx_usage_dial_phone}{\*\bkmkend idx_usage_dial_phone}#{\footnote \pard\plain \s27 \f5\fs20 {\cs26\fs16\up6 #} idx_usage_dial_phone}} {\cs26\fs16\up6 +{\footnote \pard\plain \s27 
\f5\fs20 {\cs26\fs16\up6 +} func7:0010}} {\cs26\fs16\up6 ${\footnote \pard\plain \s27 \f5\fs20 {\cs26\fs16\up6 $} Usage}} {\cs26\fs16\up6 K{\footnote \pard\plain \s27 \f5\fs20 {\cs26\fs16\up6 K} Dial Phone}} {\cs26\fs16\up6 !{\footnote \pard\plain \s27 
\f5\fs20 {\cs26\fs16\up6 !} EB(`btn_up'); CBB(`btn_up', `JI(`', `idx_dial_phone')')}} Usage
\par \pard\plain \s36\li360\sa100\keepn \b\f5\fs20 Dial Phone
\par \pard\plain \s54 \f5\fs10 {\cchs256 
\par }\pard\plain \s15\li360\sa60\nowidctlpar \f5\fs20\cf1 To dial a touch-tone phone, h{\cchs256 old }the{\cchs256  phone near the computer's speaker, }then call the Dial Phone function. {\cchs256 
The receiver picks up the tones generated by the function and dials the corresponding number. The pho
ne number you pass to this function may be expressed in numbers or letters (such as 582-CALL). If dialing from your phone involves the use of a special prefix (7, 9, etc.), enter this value first, followed by a comma and the phone number (for example 9, 8
00-555-8888). The comma }produces{\cchs256  a one second pause in the dialing process.
\par }\pard\plain \s24\sb20\sa40\keepn \b\f5 \page {\cs26\fs16\up6 {\*\bkmkstart idx_free_memory}{\*\bkmkend idx_free_memory}#{\footnote \pard\plain \s27 \f5\fs20 {\cs26\fs16\up6 #} idx_free_memory}} {\cs26\fs16\up6 ${\footnote \pard\plain \s27 \f5\fs20 {
\cs26\fs16\up6 $} Parameters & Flows}} {\cs26\fs16\up6 +{\footnote \pard\plain \s27 \f5\fs20 {\cs26\fs16\up6 +} brws3:0040}} {\cs26\fs16\up6 K{\footnote \pard\plain \s27 \f5\fs20 {\cs26\fs16\up6 K} Free Memory}} {\cs26\fs16\up6 !{\footnote \pard\plain 
\s27 \f5\fs20 {\cs26\fs16\up6 !} EB(`btn_up'); CBB(`btn_up', `JI(`', `idx_general_alm_functions')')}} Free Memory
\par \pard\plain \s36\li360\sa100\keepn \b\f5\fs20 General ALM{\field\flddirty{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 6964785f616374696f6e5f667265655f6d656d6f7279}}}{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}

\par \pard\plain \s54 \f5\fs10 
\par \pard\plain \s15\li360\sa60\nowidctlpar \f5\fs20\cf1 {\cchs256 Reports the amount of free }memory{\cchs256 , in bytes, in the memory partition }of the {\cchs256 application.
\par }NOTE: {\cchs256 Free memory is not the same as the amount of free RAM in the system (that is, RAM available for other applications), nor is it the }total {\cchs256 amount of RAM present in your computer.
\par }\pard \s15\li360\sa60\nowidctlpar 
\par \pard\plain \s36\li360\sa100 \b\f5\fs20 {\cf5 \{bmc graphics\\f_frem.bmp\}}{\cf1  }
\par \pard\plain \s15\li360\sa60\nowidctlpar \f5\fs20\cf1 {\cchs256 
\par }\pard\plain \s49\ri432\sb40\sa40 \b\f5\fs20 {\cchs256 Output Parameters
\par }\pard\plain \s48\li360\sb40\sa20\nowidctlpar \f5\fs20\cf1 {\cchs256 Free Memory}\tab (Number/Required){\cchs256 
\par }\pard\plain \s50\li720\sa60\nowidctlpar \f5\fs20\cf1 {\cchs256 Reports the amount of free space in the memory partition }of the {\cchs256 application.
\par }\pard\plain \s43\ri432\sb40\sa40 \b\f5\fs20 {\cchs256 Flows
\par }\pard\plain \s41\li360\sb40\sa20\nowidctlpar \f5\fs20\cf1 {\cchs256 Done
\par }\pard\plain \s42\li720\sa60\nowidctlpar \f5\fs20\cf1 {\cchs256 Followed after the free memory is reported.}
\par \pard\plain \s24\sb20\sa40\keepn \b\f5 \page {\cs26\fs16\up6 {\*\bkmkstart idx_get_screen_size}{\*\bkmkend idx_get_screen_size}#{\footnote \pard\plain \s27 \f5\fs20 {\cs26\fs16\up6 #} idx_get_screen_size}} {\cs26\fs16\up6 ${\footnote \pard\plain \s27 
\f5\fs20 {\cs26\fs16\up6 $} Parameters & Flows}} {\cs26\fs16\up6 +{\footnote \pard\plain \s27 \f5\fs20 {\cs26\fs16\up6 +} brws3:0045}} {\cs26\fs16\up6 K{\footnote \pard\plain \s27 \f5\fs20 {\cs26\fs16\up6 K} Get Screen Size}} {\cs26\fs16\up6 !{\footnote 
\pard\plain \s27 \f5\fs20 {\cs26\fs16\up6 !} EB(`btn_up'); CBB(`btn_up', `JI(`', `idx_general_alm_functions')')}} Get Screen Size
\par \pard\plain \s36\li360\sa100\keepn \b\f5\fs20 General ALM{\field\flddirty{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 6964785f616374696f6e5f6765745f73637265656e5f73697a65}}}{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  macrobutton NextField }
}{\fldrslt }}
\par \pard\plain \s54 \f5\fs10 
\par \pard\plain \s15\li360\sa60\nowidctlpar \f5\fs20\cf1 {\cchs256 Returns the width and height of the screen in pixels.} For the Macintosh platform, this function also returns the top, left coordinate of the screen.{\cchs256 
\par }\pard \s15\li360\sa60\nowidctlpar 
\par \pard\plain \s36\li360\sa100 \b\f5\fs20 {\cf5 \{bmc graphics\\f_getssi.bmp\}}{\cf1  }
\par \pard\plain \s15\li360\sa60\nowidctlpar \f5\fs20\cf1 {\cchs256 
\par }\pard\plain \s46\sb40\sa40 \b\f5\fs20 {\cchs256 Input Parameters
\par }\pard\plain \s45\li360\sb40\sa20\nowidctlpar \f5\fs20\cf1 {\cchs256 Screen}\tab (Number/Optional)
\par \pard\plain \s47\li720\sa60\nowidctlpar \f5\fs20\cf1 Indicates which monitor's size to be retrieved (Macintosh only). In most cases, this value will be 1 (most users only use one monitor). {\cchs256 
The number for a monitor can be found in the Monitors Control Panel. A value of 0 retrieves information about all of the monitors as a whole.
\par }\pard\plain \s49\ri432\sb40\sa40 \b\f5\fs20 {\cchs256 Output Parameters
\par }\pard\plain \s48\li360\sb40\sa20\nowidctlpar \f5\fs20\cf1 {\cchs256 Width}\tab (Number/Optional){\cchs256 
\par }\pard\plain \s50\li720\sa60\nowidctlpar \f5\fs20\cf1 {\cchs256 Reports the width of the screen in pixels.
\par }\pard\plain \s48\li360\sb40\sa20\nowidctlpar \f5\fs20\cf1 {\cchs256 Height}\tab (Number/Optional){\cchs256 
\par }\pard\plain \s50\li720\sa60\nowidctlpar \f5\fs20\cf1 {\cchs256 Reports the height of the screen in pixels.
\par }\pard\plain \s48\li360\sb40\sa20\nowidctlpar \f5\fs20\cf1 {\cchs256 Top}\tab \tab (Number/Optional){\cchs256 
\par }\pard\plain \s50\li720\sa60\nowidctlpar \f5\fs20\cf1 {\cchs256 Reports the pixel coordinate for the top edge of the screen (Macintosh only).
\par }\pard\plain \s48\li360\sb40\sa20\nowidctlpar \f5\fs20\cf1 {\cchs256 Left}\tab \tab (Number/Optional){\cchs256 
\par }\pard\plain \s50\li720\sa60\nowidctlpar \f5\fs20\cf1 {\cchs256 Reports the pixel coordinate for the left edge of the screen (Macintosh only).
\par }\pard\plain \s43\ri432\sb40\sa40 \b\f5\fs20 {\cchs256 Flows
\par }\pard\plain \s41\li360\sb40\sa20\nowidctlpar \f5\fs20\cf1 {\cchs256 Done
\par }\pard\plain \s42\li720\sa60\nowidctlpar \f5\fs20\cf1 {\cchs256 Followed after the screen size is returned (}Windows{\cchs256  only).
\par }\pard\plain \s41\li360\sb40\sa20\nowidctlpar \f5\fs20\cf1 {\cchs256 Retrieved
\par }\pard\plain \s42\li720\sa60\nowidctlpar \f5\fs20\cf1 {\cchs256 Followed after the screen size is returned (Macintosh only)
\par }\pard\plain \s41\li360\sb40\sa20\nowidctlpar \f5\fs20\cf1 {\cchs256 Out of Range
\par }\pard\plain \s42\li720\sa60\nowidctlpar \f5\fs20\cf1 {\cchs256 Followed if the Screen input parameter is out of range} (Macintosh only){\cchs256 .}
\par \pard\plain \s24\sb20\sa40\keepn \b\f5 \page {\cs26\fs16\up6 {\*\bkmkstart idx_get_ticks}{\*\bkmkend idx_get_ticks}#{\footnote \pard\plain \s27 \f5\fs20 {\cs26\fs16\up6 #} idx_get_ticks}} {\cs26\fs16\up6 ${\footnote \pard\plain \s27 \f5\fs20 {
\cs26\fs16\up6 $} Parameters & Flows}} {\cs26\fs16\up6 +{\footnote \pard\plain \s27 \f5\fs20 {\cs26\fs16\up6 +} brws3:0050}} {\cs26\fs16\up6 K{\footnote \pard\plain \s27 \f5\fs20 {\cs26\fs16\up6 K} Get Ticks}} {\cs26\fs16\up6 !{\footnote \pard\plain \s27 
\f5\fs20 {\cs26\fs16\up6 !} EB(`btn_up'); CBB(`btn_up', `JI(`', `idx_general_alm_functions')')}} Get Ticks
\par \pard\plain \s36\li360\sa100\keepn \b\f5\fs20 General ALM{\field\flddirty{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 6964785f616374696f6e5f6765745f7469636b73}}}{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}
\par \pard\plain \s54 \f5\fs10 
\par \pard\plain \s15\li360\sa60\nowidctlpar \f5\fs20\cf1 R{\cchs256 eturns the number of ticks (1/60 of a second) elapsed since the machine was last booted} (Macintosh){\cchs256 , or since }the environment {\cchs256 was launched} ({\cchs256 Windows}).{
\cchs256 
\par }\pard \s15\li360\sa60\nowidctlpar 
\par \pard\plain \s36\li360\sa100 \b\f5\fs20 {\cf5 \{bmc graphics\\f_gtks.bmp\}}{\cf1  }
\par \pard\plain \s15\li360\sa60\nowidctlpar \f5\fs20\cf1 {\cchs256 
\par }\pard\plain \s49\ri432\sb40\sa40 \b\f5\fs20 {\cchs256 Output Parameters
\par }\pard\plain \s48\li360\sb40\sa20\nowidctlpar \f5\fs20\cf1 {\cchs256 Ticks}\tab (Number/Required){\cchs256 
\par }\pard\plain \s50\li720\sa60\nowidctlpar \f5\fs20\cf1 R{\cchs256 eturns the number of ticks (1/60 of a second) elapsed since the machine was last booted} (Macintosh){\cchs256 , or since }the environment {\cchs256 was launched} ({\cchs256 Windows}).{
\cchs256 
\par }\pard\plain \s43\ri432\sb40\sa40 \b\f5\fs20 {\cchs256 Flows
\par }\pard\plain \s41\li360\sb40\sa20\nowidctlpar \f5\fs20\cf1 {\cchs256 Done
\par }\pard\plain \s42\li720\sa60\nowidctlpar \f5\fs20\cf1 {\cchs256 Followed after the }number of {\cchs256 tick}s{\cchs256  is reported.}
\par \pard\plain \s24\sb20\sa40\keepn \b\f5 \page {\cs26\fs16\up6 {\*\bkmkstart idx_paste}{\*\bkmkend idx_paste}#{\footnote \pard\plain \s27 \f5\fs20 {\cs26\fs16\up6 #} idx_paste}} {\cs26\fs16\up6 ${\footnote \pard\plain \s27 \f5\fs20 {\cs26\fs16\up6 $}
 Parameters & Flows}} {\cs26\fs16\up6 +{\footnote \pard\plain \s27 \f5\fs20 {\cs26\fs16\up6 +} brws3:0055}} {\cs26\fs16\up6 K{\footnote \pard\plain \s27 \f5\fs20 {\cs26\fs16\up6 K} Paste}} {\cs26\fs16\up6 !{\footnote \pard\plain \s27 \f5\fs20 {
\cs26\fs16\up6 !} EB(`btn_up'); CBB(`btn_up', `JI(`', `idx_general_alm_functions')')}} Paste
\par \pard\plain \s36\li360\sa100\keepn \b\f5\fs20 General ALM\tab {\uldb\cf11 Usage}{\v  idx_usage_paste}{\field\flddirty{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}
{\field\flddirty{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 6964785f75736167655f7061737465}}}{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}
\par \pard\plain \s54 \f5\fs10 
\par \pard\plain \s15\li360\sa60\nowidctlpar \f5\fs20\cf1 {\cchs256 Copies the contents of the Clipboard to the active, editable field in the front window.
\par }\pard \s15\li360\sa60\nowidctlpar 
\par \pard\plain \s36\li360\sa100 \b\f5\fs20 {\cf5 \{bmc graphics\\f_past.bmp\}}{\cf1  }
\par \pard\plain \s15\li360\sa60\nowidctlpar \f5\fs20\cf1 
\par \pard\plain \s46\sb40\sa40 \b\f5\fs20 Parameters{\cchs256 
\par }\pard\plain \s47\li720\sa60\nowidctlpar \f5\fs20\cf1 {\cchs256 The Paste function has no parameters.
\par }\pard\plain \s43\ri432\sb40\sa40 \b\f5\fs20 {\cchs256 Flows
\par }\pard\plain \s41\li360\sb40\sa20\nowidctlpar \f5\fs20\cf1 {\cchs256 Done
\par }\pard\plain \s42\li720\sa60\nowidctlpar \f5\fs20\cf1 {\cchs256 Followed after the contents of the Clipboard are pasted in the active field} of the front window{\cchs256 .}
\par \pard\plain \s24\sb20\sa40\keepn \b\f5 \page {\cs26\fs16\up6 {\*\bkmkstart idx_usage_paste}{\*\bkmkend idx_usage_paste}#{\footnote \pard\plain \s27 \f5\fs20 {\cs26\fs16\up6 #} idx_usage_paste}} {\cs26\fs16\up6 +{\footnote \pard\plain \s27 \f5\fs20 {
\cs26\fs16\up6 +} func11:0010}} {\cs26\fs16\up6 ${\footnote \pard\plain \s27 \f5\fs20 {\cs26\fs16\up6 $} Usage}} {\cs26\fs16\up6 K{\footnote \pard\plain \s27 \f5\fs20 {\cs26\fs16\up6 K} Paste}} {\cs26\fs16\up6 !{\footnote \pard\plain \s27 \f5\fs20 {
\cs26\fs16\up6 !} EB(`btn_up'); CBB(`btn_up', `JI(`', `idx_paste')')}} Usage
\par \pard\plain \s36\li360\sa100\keepn \b\f5\fs20 Paste
\par \pard\plain \s54 \f5\fs10 {\cchs256 
\par }\pard\plain \s15\li360\sa60\nowidctlpar \f5\fs20\cf1 Paste{\cchs256  works with Date, Number, Picture, Text, and Time objects. You typically connect this function to a }Paste{\cchs256  menu item.
\par }\pard\plain \s24\sb20\sa40\keepn \b\f5 \page {\cs26\fs16\up6 {\*\bkmkstart idx_quit}{\*\bkmkend idx_quit}#{\footnote \pard\plain \s27 \f5\fs20 {\cs26\fs16\up6 #} idx_quit}} {\cs26\fs16\up6 ${\footnote \pard\plain \s27 \f5\fs20 {\cs26\fs16\up6 $}
 Parameters & Flows}} {\cs26\fs16\up6 +{\footnote \pard\plain \s27 \f5\fs20 {\cs26\fs16\up6 +} brws3:0060}} {\cs26\fs16\up6 K{\footnote \pard\plain \s27 \f5\fs20 {\cs26\fs16\up6 K} Quit}} {\cs26\fs16\up6 !{\footnote \pard\plain \s27 \f5\fs20 {
\cs26\fs16\up6 !} EB(`btn_up'); CBB(`btn_up', `JI(`', `idx_general_alm_functions')')}} Quit
\par \pard\plain \s36\li360\sa100\keepn \b\f5\fs20 General ALM{\field\flddirty{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 6964785f616374696f6e5f71756974}}}{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}
\par \pard\plain \s54 \f5\fs10 
\par \pard\plain \s15\li360\sa60\nowidctlpar \f5\fs20\cf1 {\cchs256 Terminates your application.} {\cchs256 Since your program }is {\cchs256 terminated after the Quit function is called, the Quit function issues no flows}, therefore, n{\cchs256 
o function can follow }Quit{\cchs256  in a function chain.
\par }NOTES:{\cchs256 
\par Windows users can }also {\cchs256 exit }an application {\cchs256 by pressing Ctrl-Esc }then{\cchs256  }selecting{\cchs256  End Task from the Task List dialog.
\par Macintosh user}s{\cchs256  can }also{\cchs256  exit }an{\cchs256  application by pressing Command-Esc. This }shortcut {\cchs256 works in the debugger as well as in }the{\cchs256  stand-alone application.
\par }\pard \s15\li360\sa60\nowidctlpar 
\par \pard\plain \s36\li360\sa100 \b\f5\fs20 {\cf5 \{bmc graphics\\f_quit.bmp\}}{\cf1  }
\par \pard\plain \s15\li360\sa60\nowidctlpar \f5\fs20\cf1 
\par \pard\plain \s46\sb40\sa40 \b\f5\fs20 Parameters{\cchs256 
\par }\pard\plain \s47\li720\sa60\nowidctlpar \f5\fs20\cf1 {\cchs256 The Quit function has no parameters.}
\par \pard\plain \s43\ri432\sb40\sa40 \b\f5\fs20 Flows
\par \pard\plain \s42\li720\sa60\nowidctlpar \f5\fs20\cf1 The Quit function doesn't issue any flows.
\par \pard\plain \s24\sb20\sa40\keepn \b\f5 \page {\cs26\fs16\up6 {\*\bkmkstart idx_same_object}{\*\bkmkend idx_same_object}#{\footnote \pard\plain \s27 \f5\fs20 {\cs26\fs16\up6 #} idx_same_object}} {\cs26\fs16\up6 ${\footnote \pard\plain \s27 \f5\fs20 {
\cs26\fs16\up6 $} Parameters & Flows}} {\cs26\fs16\up6 +{\footnote \pard\plain \s27 \f5\fs20 {\cs26\fs16\up6 +} brws3:0065}} {\cs26\fs16\up6 K{\footnote \pard\plain \s27 \f5\fs20 {\cs26\fs16\up6 K} Same Object?}} {\cs26\fs16\up6 !{\footnote \pard\plain 
\s27 \f5\fs20 {\cs26\fs16\up6 !} EB(`btn_up'); CBB(`btn_up', `JI(`', `idx_general_alm_functions')')}} Same Object?
\par \pard\plain \s36\li360\sa100\keepn \b\f5\fs20 General ALM\tab {\uldb\cf11 Usage}{\v  idx_usage_same_object}{\field\flddirty{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}
{\field\flddirty{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 6964785f75736167655f73616d655f6f626a656374}}}{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}
\par \pard\plain \s54 \f5\fs10 
\par \pard\plain \s15\li360\sa60\nowidctlpar \f5\fs20\cf1 {\cchs256 Reports whether two }objects{\cchs256  are the same physical object.
\par }\pard \s15\li360\sa60\nowidctlpar 
\par \pard\plain \s36\li360\sa100 \b\f5\fs20 {\cf5 \{bmc graphics\\f_smob.bmp\}}{\cf1  }
\par \pard\plain \s15\li360\sa60\nowidctlpar \f5\fs20\cf1 {\cchs256 
\par }\pard\plain \s46\sb40\sa40 \b\f5\fs20 {\cchs256 Input Parameters
\par }\pard\plain \s45\li360\sb40\sa20\nowidctlpar \f5\fs20\cf1 {\cchs256 Object 1}\tab (Required){\cchs256 
\par }\pard\plain \s47\li720\sa60\nowidctlpar \f5\fs20\cf1 {\cchs256 Identifies the first of two objects to }be {\cchs256 compare}d{\cchs256 . The parameter accepts objects of all types.
\par }\pard\plain \s45\li360\sb40\sa20\nowidctlpar \f5\fs20\cf1 {\cchs256 Object 2}\tab (Required){\cchs256 
\par }\pard\plain \s47\li720\sa60\nowidctlpar \f5\fs20\cf1 {\cchs256 Identifies the second of two objects to }be {\cchs256 compare}d{\cchs256 . The parameter accepts objects of all types.
\par }\pard\plain \s43\ri432\sb40\sa40 \b\f5\fs20 {\cchs256 Flows
\par }\pard\plain \s41\li360\sb40\sa20\nowidctlpar \f5\fs20\cf1 {\cchs256 Same
\par }\pard\plain \s42\li720\sa60\nowidctlpar \f5\fs20\cf1 {\cchs256 Followed if the identity of the two objects is the same.
\par }\pard\plain \s41\li360\sb40\sa20\nowidctlpar \f5\fs20\cf1 {\cchs256 Not Same
\par }\pard\plain \s42\li720\sa60\nowidctlpar \f5\fs20\cf1 {\cchs256 Followed if the identity of two objects is not the same}.
\par \pard\plain \s24\sb20\sa40\keepn \b\f5 \page {\cs26\fs16\up6 {\*\bkmkstart idx_usage_same_object}{\*\bkmkend idx_usage_same_object}#{\footnote \pard\plain \s27 \f5\fs20 {\cs26\fs16\up6 #} idx_usage_same_object}} {\cs26\fs16\up6 +{\footnote \pard\plain 
\s27 \f5\fs20 {\cs26\fs16\up6 +} func13:0010}} {\cs26\fs16\up6 ${\footnote \pard\plain \s27 \f5\fs20 {\cs26\fs16\up6 $} Usage}} {\cs26\fs16\up6 K{\footnote \pard\plain \s27 \f5\fs20 {\cs26\fs16\up6 K} Same Object?}} {\cs26\fs16\up6 !{\footnote 
\pard\plain \s27 \f5\fs20 {\cs26\fs16\up6 !} EB(`btn_up'); CBB(`btn_up', `JI(`', `idx_same_object')')}} Usage
\par \pard\plain \s36\li360\sa100\keepn \b\f5\fs20 Same Object?
\par \pard\plain \s54 \f5\fs10 {\cchs256 
\par }\pard\plain \s15\li360\sa60\nowidctlpar \f5\fs20\cf1 {\cchs256 Each object instance in your application has a unique ID number}t. T{\cchs256 he Same Object? function }only {\cchs256 compares} the IDs of two objects, not their contents. For example,{
\cchs256  if you pass two different Text objects containing the same text characters, the function indicates that the objects are not the same, even though they have the same }contents{\cchs256 
. You would use this function to compare the output of a function},{\cchs256  such as }{\uldb\cf11 Front Window}{\v\cf0 idx_front_window@awuswnd.hlp}{\field{\*\fldinst {\cf0  macrobutton NextField }}{\fldrslt }}{\field{\*\fldinst  {\cf6 
macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst  ADDIN {{\*\datafield 6964785f66726f6e745f77696e646f775f616c6d5f776e645f686c70}}}{\fldrslt }}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\cf0  },{\cchs256  with another, known object.

\par }NOTE:{\cchs256  To compare }the contents of two {\cchs256 object}s{\cchs256 , use comparison functions, such as }{\uldb\cf11 Compare Numbers}{\v\cf0 idx_compare_numbers@awusnmbr.hlp}{\field{\*\fldinst {\cf0  macrobutton NextField }}{\fldrslt }}
{\field{\*\fldinst  {\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst  ADDIN {{\*\datafield 6964785f636f6d706172655f6e756d626572735f616c6d5f6e6d62725f686c70}}}{\fldrslt }}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\cf0  }or{
\cchs256  }{\uldb\cf11 Compare Text}{\v\cf0 idx_compare_text@awustext.hlp}{\field{\*\fldinst {\cf0  macrobutton NextField }}{\fldrslt }}{\field{\*\fldinst  {\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst  ADDIN {{\*\datafield 
6964785f636f6d706172655f746578745f616c6d5f746578745f686c70}}}{\fldrslt }}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\cchs256 .
\par }\pard\plain \s24\sb20\sa40\keepn \b\f5 \page {\cs26\fs16\up6 {\*\bkmkstart idx_same_type}{\*\bkmkend idx_same_type}#{\footnote \pard\plain \s27 \f5\fs20 {\cs26\fs16\up6 #} idx_same_type}} {\cs26\fs16\up6 ${\footnote \pard\plain \s27 \f5\fs20 {
\cs26\fs16\up6 $} Parameters & Flows}} {\cs26\fs16\up6 +{\footnote \pard\plain \s27 \f5\fs20 {\cs26\fs16\up6 +} brws3:0070}} {\cs26\fs16\up6 K{\footnote \pard\plain \s27 \f5\fs20 {\cs26\fs16\up6 K} Same Type?}} {\cs26\fs16\up6 !{\footnote \pard\plain 
\s27 \f5\fs20 {\cs26\fs16\up6 !} EB(`btn_up'); CBB(`btn_up', `JI(`', `idx_general_alm_functions')')}} Same Type?
\par \pard\plain \s36\li360\sa100\keepn \b\f5\fs20 General ALM\tab {\uldb\cf11 Usage}{\v  idx_usage_same_type}{\field\flddirty{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}
{\field\flddirty{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 6964785f75736167655f73616d655f74797065}}}{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}
\par \pard\plain \s54 \f5\fs10 
\par \pard\plain \s15\li360\sa60\nowidctlpar \f5\fs20\cf1 Reports{\cchs256  whether two }objects{\cchs256  are of the same type.
\par }\pard \s15\li360\sa60\nowidctlpar 
\par \pard\plain \s36\li360\sa100 \b\f5\fs20 {\cf5 \{bmc graphics\\f_smot.bmp\}}{\cf1  }
\par \pard\plain \s15\li360\sa60\nowidctlpar \f5\fs20\cf1 {\cchs256 
\par }\pard\plain \s46\sb40\sa40 \b\f5\fs20 {\cchs256 Input Parameters
\par }\pard\plain \s45\li360\sb40\sa20\nowidctlpar \f5\fs20\cf1 {\cchs256 Object 1}\tab (Required){\cchs256 
\par }\pard\plain \s47\li720\sa60\nowidctlpar \f5\fs20\cf1 {\cchs256 Identifies the first of two objects to }be {\cchs256 compare}d{\cchs256 . The parameter accepts objects of all types.
\par }\pard\plain \s45\li360\sb40\sa20\nowidctlpar \f5\fs20\cf1 {\cchs256 Object 2}\tab (Required){\cchs256 
\par }\pard\plain \s47\li720\sa60\nowidctlpar \f5\fs20\cf1 {\cchs256 Identifies the second of two objects to }be {\cchs256 compare}d{\cchs256 . The parameter accepts objects of all types.
\par }\pard\plain \s43\ri432\sb40\sa40 \b\f5\fs20 {\cchs256 Flows
\par }\pard\plain \s41\li360\sb40\sa20\nowidctlpar \f5\fs20\cf1 {\cchs256 Same
\par }\pard\plain \s42\li720\sa60\nowidctlpar \f5\fs20\cf1 {\cchs256 Followed if the two objects are of the same type.
\par }\pard\plain \s41\li360\sb40\sa20\nowidctlpar \f5\fs20\cf1 {\cchs256 Not Same
\par }\pard\plain \s42\li720\sa60\nowidctlpar \f5\fs20\cf1 {\cchs256 Followed if the two objects are not of the same type.}
\par \pard\plain \s24\sb20\sa40\keepn \b\f5 \page {\cs26\fs16\up6 {\*\bkmkstart idx_usage_same_type}{\*\bkmkend idx_usage_same_type}#{\footnote \pard\plain \s27 \f5\fs20 {\cs26\fs16\up6 #} idx_usage_same_type}} {\cs26\fs16\up6 +{\footnote \pard\plain \s27 
\f5\fs20 {\cs26\fs16\up6 +} func14:0010}} {\cs26\fs16\up6 ${\footnote \pard\plain \s27 \f5\fs20 {\cs26\fs16\up6 $} Usage}} {\cs26\fs16\up6 K{\footnote \pard\plain \s27 \f5\fs20 {\cs26\fs16\up6 K} Same Type?}} {\cs26\fs16\up6 !{\footnote \pard\plain \s27 
\f5\fs20 {\cs26\fs16\up6 !} EB(`btn_up'); CBB(`btn_up', `JI(`', `idx_same_type')')}} Usage
\par \pard\plain \s36\li360\sa100\keepn \b\f5\fs20 Same Type?
\par \pard\plain \s54 \f5\fs10 
\par \pard\plain \s15\li360\sa60\nowidctlpar \f5\fs20\cf1 This{\cchs256  function only looks for equivalent }object {\cchs256 types. For example, if you pass two Text objects to this function, it }indicates{\cchs256 
 that they are of the same type, even though they are }two, seperate objects{\cchs256  }with possibly different contents{\cchs256 . If a Number and a Text object are passed, the function }indicates{\cchs256  that they are not of the same type.
\par }NOTE:{\cchs256  To compare }the contents of two {\cchs256 object}s{\cchs256 , use comparison functions, such as }{\uldb\cf11 Compare Numbers}{\v\cf0 idx_compare_numbers@awusnmbr.hlp}{\field{\*\fldinst {\cf0  macrobutton NextField }}{\fldrslt }}
{\field{\*\fldinst  {\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst  ADDIN {{\*\datafield 6964785f636f6d706172655f6e756d626572735f616c6d5f6e6d62725f686c70}}}{\fldrslt }}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\cf0  }or{
\cchs256  }{\uldb\cf11 Compare Text}{\v\cf0 idx_compare_text@awustext.hlp}{\field{\*\fldinst {\cf0  macrobutton NextField }}{\fldrslt }}{\field{\*\fldinst  {\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst  ADDIN {{\*\datafield 
6964785f636f6d706172655f746578745f616c6d5f746578745f686c70}}}{\fldrslt }}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\cchs256 .
\par }\pard\plain \s24\sb20\sa40\keepn \b\f5 \page {\cs26\fs16\up6 {\*\bkmkstart idx_undo}{\*\bkmkend idx_undo}#{\footnote \pard\plain \s27 \f5\fs20 {\cs26\fs16\up6 #} idx_undo}} {\cs26\fs16\up6 ${\footnote \pard\plain \s27 \f5\fs20 {\cs26\fs16\up6 $}
 Parameters & Flows}} {\cs26\fs16\up6 +{\footnote \pard\plain \s27 \f5\fs20 {\cs26\fs16\up6 +} brws3:0075}} {\cs26\fs16\up6 K{\footnote \pard\plain \s27 \f5\fs20 {\cs26\fs16\up6 K} Undo}} {\cs26\fs16\up6 !{\footnote \pard\plain \s27 \f5\fs20 {
\cs26\fs16\up6 !} EB(`btn_up'); CBB(`btn_up', `JI(`', `idx_general_alm_functions')')}} Undo
\par \pard\plain \s36\li360\sa100\keepn \b\f5\fs20 General ALM
\par \pard\plain \s54 \f5\fs10 
\par \pard\plain \s15\li360\sa60\nowidctlpar \f5\fs20\cf1 Reverts{\cchs256  the last operation performed in the application. This function }only {\cchs256 works with the Movie object.
\par }
\par \pard\plain \s36\li360\sa100 \b\f5\fs20 {\cf5 \{bmc graphics\\f_undo.bmp\}}{\cf1  }
\par \pard\plain \s15\li360\sa60\nowidctlpar \f5\fs20\cf1 
\par \pard\plain \s46\sb40\sa40 \b\f5\fs20 Parameters{\cchs256 
\par }\pard\plain \s47\li720\sa60\nowidctlpar \f5\fs20\cf1 {\cchs256 The Undo function has no parameters.
\par }\pard\plain \s43\ri432\sb40\sa40 \b\f5\fs20 {\cchs256 Flows
\par }\pard\plain \s41\li360\sb40\sa20\nowidctlpar \f5\fs20\cf1 {\cchs256 Done
\par }\pard\plain \s42\li720\sa60\nowidctlpar \f5\fs20\cf1 {\cchs256 Followed after the last operation is }reverted{\cchs256 .}
\par \pard\plain \s24\sb20\sa40\keepn \b\f5 \page {\cs26\fs16\up6 {\*\bkmkstart idx_yes_no_cancel}{\*\bkmkend idx_yes_no_cancel}#{\footnote \pard\plain \s27 \f5\fs20 {\cs26\fs16\up6 #} idx_yes_no_cancel}} {\cs26\fs16\up6 ${\footnote \pard\plain \s27 \f5\fs20 {
\cs26\fs16\up6 $} Parameters & Flows}} {\cs26\fs16\up6 +{\footnote \pard\plain \s27 \f5\fs20 {\cs26\fs16\up6 +} brws3:0080}} {\cs26\fs16\up6 K{\footnote \pard\plain \s27 \f5\fs20 {\cs26\fs16\up6 K} Yes No Cancel}} {\cs26\fs16\up6 !{\footnote \pard\plain 
\s27 \f5\fs20 {\cs26\fs16\up6 !} EB(`btn_up'); CBB(`btn_up', `JI(`', `idx_general_alm_functions')')}} Yes No Cancel
\par \pard\plain \s36\li360\sa100\keepn \b\f5\fs20 General ALM
\par \pard\plain \s54 \f5\fs10 
\par \pard\plain \s15\li360\sa60\nowidctlpar \f5\fs20\cf1 {\cchs256 Displays a }window{\cchs256  containing a message }and Yes, No, and Cancel buttons. {\cchs256 The }window{\cchs256  is automatically closed when the user clicks any of the buttons.
\par }
\par \pard\plain \s36\li360\sa100 \b\f5\fs20 {\cf5 \{bmc graphics\\f_ysnc.bmp\}}{\cf1  }
\par \pard\plain \s15\li360\sa60\nowidctlpar \f5\fs20\cf1 {\cchs256 
\par }\pard\plain \s46\sb40\sa40 \b\f5\fs20 {\cchs256 Input Parameters
\par }\pard\plain \s45\li360\sb40\sa20\nowidctlpar \f5\fs20\cf1 {\cchs256 Question}\tab (Text/Required){\cchs256 
\par }\pard\plain \s47\li720\sa60\nowidctlpar \f5\fs20\cf1 {\cchs256 Specifies the message displayed in the Yes No Cancel dialog. In the Macintosh environment, this text can not exceed more than 54 characters. In the }Windows{\cchs256 
 environment, the dialog resizes to accommodate }the message{\cchs256 .
\par }\pard\plain \s45\li360\sb40\sa20\nowidctlpar \f5\fs20\cf1 {\cchs256 Title}\tab (Text/Optional){\cchs256 
\par }\pard\plain \s47\li720\sa60\nowidctlpar \f5\fs20\cf1 {\cchs256 Specifies the title of the alert dialog (}Windows{\cchs256  only).
\par }\pard\plain \s43\ri432\sb40\sa40 \b\f5\fs20 {\cchs256 Flows
\par }\pard\plain \s41\li360\sb40\sa20\nowidctlpar \f5\fs20\cf1 {\cchs256 Yes
\par }\pard\plain \s42\li720\sa60\nowidctlpar \f5\fs20\cf1 {\cchs256 Followed if the user of your application clicks the Yes button.
\par }\pard\plain \s41\li360\sb40\sa20\nowidctlpar \f5\fs20\cf1 {\cchs256 No
\par }\pard\plain \s42\li720\sa60\nowidctlpar \f5\fs20\cf1 {\cchs256 Followed if the user of your application clicks the No button.
\par }\pard\plain \s41\li360\sb40\sa20\nowidctlpar \f5\fs20\cf1 {\cchs256 Cancel
\par }\pard\plain \s42\li720\sa60\nowidctlpar \f5\fs20\cf1 {\cchs256 Followed if the user of your application clicks the Cancel button.}
\par }