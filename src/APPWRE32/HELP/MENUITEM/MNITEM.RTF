{\rtf1\ansi \deff5\deflang1033{\fonttbl{\f1\froman\fcharset2\fprq2 Symbol;}{\f5\fswiss\fcharset0\fprq2 Arial;}{\f8\froman\fcharset0\fprq2 Times;}{\f11\fmodern\fcharset0\fprq1 Courier New;}
{\f82\fswiss\fcharset0\fprq0 BI Helvetica BoldOblique;}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;
\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{\f5\fs20 \snext0 Normal;}{\s1\sb240\sa60\keepn 
\b\f5\fs28\kerning28 \sbasedon0\snext15 heading 1;}{\s2\sb240\sa60\keepn \b\f5 \sbasedon0\snext15 heading 2;}{\s3\sb240\sa60\keepn \b\f5 \sbasedon0\snext15 heading 3;}{\s4\sb240\sa60\keepn \b\f5 \sbasedon0\snext15 heading 4;}{\*\cs10 \additive 
Default Paragraph Font;}{\s15\li360\sa60\nowidctlpar \f5\fs20\cf1 \snext15 Body;}{\s16\tqc\tx4320\tqr\tx8640 \f5\fs20 \sbasedon0\snext16 header;}{\s17\li360\sb120\sa40\nowidctlpar \f5\fs20\cf1 \sbasedon28\snext0 Signal Name;}{
\s18\fi-360\li720\sa60\nowidctlpar \f5\fs20\cf1 \sbasedon15\snext18 Body - Bullet;}{\s19\li720\sa60\nowidctlpar \f5\fs20\cf1 \sbasedon29\snext17 Signal Text;}{\s20\fi-360\li720\sa60\nowidctlpar{\*\pn \pnlvl12\pnf1\pnstart1\pnindent360\pnhang
{\pntxtb \'b7}}\f5\fs20\cf1 \sbasedon15\snext20 Body - Indent;}{\s21\fi-360\li720\sa60\nowidctlpar{\*\pn \pnlvl10\pndec\pnstart1\pnindent360\pnhang{\pntxta .}}\f5\fs20\cf1 \sbasedon20\snext21 Instructions;}{\s22\tqc\tx4320\tqr\tx8640 \f5\fs20 
\sbasedon0\snext22 footer;}{\*\cs23 \additive\f5 \sbasedon10 page number;}{\s24\sa144\keep \f82\fs36\cf1 \sbasedon0\snext0 Header 2;}{\s25\fi-360\li720\sa60\nowidctlpar\tx360\tx1224\tx1440 \f5\fs20\cf1 \sbasedon18\snext25 Body - Left;}{
\s26\ri432\sb40\sa40 \b\f5\fs20 \sbasedon27\snext26 Platform;}{\s27\ri432\sb40\sa40 \b\f5\fs20 \sbasedon0\snext15 Action;}{\s28\li360\sb40\sa20\nowidctlpar \f5\fs20\cf1 \sbasedon15\snext0 Flow Name;}{\s29\li720\sa60\nowidctlpar \f5\fs20\cf1 
\sbasedon15\snext28 Flow Text;}{\s30\li360\sb40\sa20\nowidctlpar \f5\fs20\cf1 \sbasedon28\snext0 Input Name;}{\s31\li720\sa60\nowidctlpar \f5\fs20\cf1 \sbasedon29\snext30 Input Text;}{\s32\li360\sb40\sa20\nowidctlpar \f5\fs20\cf1 \sbasedon28\snext0 
Output Name;}{\s33\li720\sa60\nowidctlpar \f5\fs20\cf1 \sbasedon29\snext32 Output Text;}{\s34\sb40\sa40 \b\f5\fs20 \sbasedon27\snext34 Usage;}{\*\cs35 \additive\f5\super \sbasedon10 endnote reference;}{\s36\ri432\sb40\sa40 \b\f5\fs20 \sbasedon27\snext36 
Flows;}{\*\cs37 \additive\f5\fs16\up6 \sbasedon10 footnote reference;}{\s38 \f5\fs20 \sbasedon0\snext38 footnote text;}{\s39\sb80 \f11 \sbasedon0\snext0 Function Syntax;}{\s40 \b\f5 \sbasedon0\snext0 Help Popup Heading;}{\s41 \b\f5 \sbasedon0\snext41 
Help See Also;}{\s42\sb20\sa40 \b\f5 \sbasedon0\snext0 Help Topic Heading;}{\s43\li360\sa100 \b\f5\fs20 \sbasedon0\snext43 HelpBreeze TOC;}{\s44\li360\ri20 \f5\fs20 \sbasedon0\snext0 hlpbrz_toc;}{\s45\sb40\sa40 \b\f5\fs20 \sbasedon27\snext45 
Input Parameters;}{\s46\ri432\sb40\sa40 \b\f5\fs20 \sbasedon27\snext46 Output Parameters;}{\s47\li720\ri720\tldot\tx8280\tqr\tx8640 \f5\fs20\cf8 \sbasedon0\snext0 toc 2;}{\s48\li1400\tqr\tldot\tx8640 \f5\fs20 \sbasedon0\snext0 toc 8;}{
\s49\sa60\tx720\tx1260 \b\f5\fs20 \sbasedon0\snext0 Topic Section;}{\s50\sa120\tx2880 \f5\fs16 \sbasedon0\snext50 Topic Wizard Line 2;}{\s51\li360 \b\f5\fs20\uldb\cf11 \sbasedon43\snext51 Function Table;}{\s52 \f5\fs10 \sbasedon0\snext52 Space After;}{
\s53\sb20\sa40\tx720\tx1260 \b\f5\fs32 \sbasedon42\snext53 new 2;}}{\info{\title Introduction to the XXX ALM:}{\author Kathy Schofield}{\doccomm <project = o:\\help\\menuitem\\awusmeni.hpj>}{\operator Kathy Schofield}{\creatim\yr1995\mo8\dy10\hr13\min39}
{\revtim\yr1995\mo8\dy10\hr13\min39}{\version3}{\edmins1}{\nofpages17}{\nofwords1654}{\nofchars9433}{\vern49203}}\widowctrl\ftnbj\aenddoc\linkstyles\formshade \fet0{\*\template C:\\WINWORD\\TEMPLATE\\hlpbrz6.dot}\sectd \linex0\endnhere {\header 
\pard\plain \s16\tqc\tx4320\tqr\tx8640 \f5\fs20 {\field{\*\fldinst {\cs23  DATE  \\l }}{\fldrslt {\cs23 4/18/95}}}{\cs23 \tab \tab }{\field{\*\fldinst {\cs23  TIME }}{\fldrslt {\cs23 11:50 AM}}}
\par }{\footer \pard\plain \s22\qc\tqc\tx4320\tqr\tx8640 \f5\fs20 {\field{\*\fldinst {\cs23  PAGE }}{\fldrslt {\cs23 2}}}
\par }{\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang{\pntxta )}}{\*\pnseclvl5
\pndec\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang
{\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}\pard\plain \s42\sb20\sa40\keepn \b\f5 {\cs37\fs16\up6 #{\footnote \pard\plain \s38 \f5\fs20 {\cs37\fs16\up6 #} idx_contents}}{\*\bkmkstart idx_contents}
{\*\bkmkend idx_contents} {\cs37\fs16\up6 ${\footnote \pard\plain \s38 \f5\fs20 {\cs37\fs16\up6 $} Menu Item ALM Contents}} {\cs37\fs16\up6 K{\footnote \pard\plain \s38 \f5\fs20 {\cs37\fs16\up6 K} Contents}} {\cs37\fs16\up6 !{\footnote \pard\plain \s38 
\f5\fs20 {\cs37\fs16\up6 !}  DB(`btn_up')}} Contents
\par \pard\plain \s43\li360\sa100 \b\f5\fs20 
\par {\uldb\cf11 Introduction to the Menu Item ALM}{\v idx_introduction_to_the_menu_item_alm}{\field\flddirty{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}
{\field\flddirty{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 6964785f696e74726f64756374696f6e5f746f5f7468655f6d656e755f6974656d5f616c6d}}}{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}
\par {\uldb\cf11 Editing the Menu Item Object}{\v idx_editing_the_menu_item_object}{\field\flddirty{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1 
 ADDIN }{\cf1 {\*\datafield 6964785f65646974696e675f7468655f6d656e755f6974656d5f6f626a656374}}}{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}
\par {\uldb\cf11 Menu Item Object Signals}{\v idx_menu_item_object_signals}{\field\flddirty{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  ADDIN }
{\cf1 {\*\datafield 6964785f6d656e755f6974656d5f6f626a6563745f7369676e616c73}}}{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}
\par {\uldb\cf11 Menu Item Functions}{\v idx_menu_item_alm_functions}{\field\flddirty{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  ADDIN }{\cf1 
{\*\datafield 6964785f6d656e755f6974656d5f616c6d5f66756e6374696f6e73}}}{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}
\par \pard\plain \s42\sb20\sa40\keepn \b\f5 \page {\cs37\fs16\up6 {\*\bkmkstart idx_introduction_to_the_menu_item_alm}{\*\bkmkend idx_introduction_to_the_menu_item_alm}#{\footnote \pard\plain \s38 \f5\fs20 {\cs37\fs16\up6 #}
 idx_introduction_to_the_menu_item_alm}} {\cs37\fs16\up6 +{\footnote \pard\plain \s38 \f5\fs20 {\cs37\fs16\up6 +} top1:0005}} {\cs37\fs16\up6 ${\footnote \pard\plain \s38 \f5\fs20 {\cs37\fs16\up6 $} Introduction to the Menu Item ALM}} {\cs37\fs16\up6 K
{\footnote \pard\plain \s38 \f5\fs20 {\cs37\fs16\up6 K} Introduction to the Menu Item ALM}} {\cs37\fs16\up6 !{\footnote \pard\plain \s38 \f5\fs20 {\cs37\fs16\up6 !}   EB(`btn_up'); CBB(`btn_up', `JI(`', `idx_contents')')}} Introduction
\par \pard\plain \s43\li360\sa100\keepn \b\f5\fs20 {\uldb\cf11 Object Editing}{\v  idx_editing_the_menu_item_object}{\field\flddirty{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}
{\field\flddirty{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 6964785f65646974696e675f7468655f6d656e755f6974656d5f6f626a656374}}}{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}\tab \tab {\uldb\cf11 Signals}{\v 
 idx_menu_item_object_signals}{\field\flddirty{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 
6964785f6d656e755f6974656d5f6f626a6563745f7369676e616c73}}}{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}\tab \tab {\uldb\cf11 Functions}{\v  idx_menu_item_alm_functions}{\field\flddirty{\*\fldinst 
 macrobutton NextField }{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 6964785f6d656e755f6974656d5f616c6d5f66756e6374696f6e73}}}{\fldrslt }}
{\field\flddirty{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}
\par \pard\plain \s52 \f5\fs10 
\par \pard\plain \s43\li360\sa100 \b\f5\fs20 {\uldb\cf11 Menu Components}{\v idx_menu_components}{\field\flddirty{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}
{\field\flddirty{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 6964785f6d656e755f636f6d706f6e656e7473}}}{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}
\par {\uldb\cf11 Menu Assignments}{\v idx_menu_assignments}{\field\flddirty{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  ADDIN }{\cf1 
{\*\datafield 6964785f6d656e755f61737369676e6d656e7473}}}{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}
\par \pard \s43\li360\sa100 
\par \pard\plain \s15\li360\sa60\nowidctlpar \f5\fs20\cf1 AppWare menu bars, menus, and menu items are created by separate objects.
\par \pard\plain \s42\sb20\sa40\keepn \b\f5 \page {\cs37\fs16\up6 {\*\bkmkstart idx_menu_components}{\*\bkmkend idx_menu_components}#{\footnote \pard\plain \s38 \f5\fs20 {\cs37\fs16\up6 #} idx_menu_components}} {\cs37\fs16\up6 ${\footnote \pard\plain \s38 
\f5\fs20 {\cs37\fs16\up6 $} Menu Components}} {\cs37\fs16\up6 +{\footnote \pard\plain \s38 \f5\fs20 {\cs37\fs16\up6 +} brws3:0000}} {\cs37\fs16\up6 K{\footnote \pard\plain \s38 \f5\fs20 {\cs37\fs16\up6 K} Introduction to the Menu Item ALM}} {
\cs37\fs16\up6 !{\footnote \pard\plain \s38 \f5\fs20 {\cs37\fs16\up6 !}  EB(`btn_up'); CBB(`btn_up', `JI(`', `idx_introduction_to_the_menu_item_alm')')}} Menu Components
\par \pard\plain \s52 \f5\fs10 
\par \pard\plain \s15\li360\sa60\nowidctlpar \f5\fs20\cf1 A menu system has three basic parts: the menu bar, menus in the menu bar, and individual menu items in each menu. 
\par Most windows display a {\i menu bar }across the top of the window. The menu bar is a list of {\i menus}. By convention, the first two menus are usually named File and Edit. 
\par \pard \s15\li360\sa60\nowidctlpar {\i Menus }contain {\i menu items, }and each menu item has a command or operation associated with it. For example, the File menu usually contains commands and operations such as New, Open, Close, Save, and Exit, an
d the Edit menu usually contains Cut, Copy, and Paste. You might want to observe these conventions when you organize your menu. 
\par \pard\plain \s42\sb20\sa40\keepn \b\f5 \page {\cs37\fs16\up6 {\*\bkmkstart idx_menu_assignments}{\*\bkmkend idx_menu_assignments}#{\footnote \pard\plain \s38 \f5\fs20 {\cs37\fs16\up6 #} idx_menu_assignments}} {\cs37\fs16\up6 ${\footnote \pard\plain \s38 
\f5\fs20 {\cs37\fs16\up6 $} Menu Assignments}} {\cs37\fs16\up6 +{\footnote \pard\plain \s38 \f5\fs20 {\cs37\fs16\up6 +} brws3:0005}} {\cs37\fs16\up6 K{\footnote \pard\plain \s38 \f5\fs20 {\cs37\fs16\up6 K} Introduction to the Menu Item ALM}} {
\cs37\fs16\up6 !{\footnote \pard\plain \s38 \f5\fs20 {\cs37\fs16\up6 !}  EB(`btn_up'); CBB(`btn_up', `JI(`', `idx_introduction_to_the_menu_item_alm')')}} Menu Assignments
\par \pard\plain \s52 \f5\fs10 
\par \pard\plain \s15\li360\sa60\nowidctlpar \f5\fs20\cf1 You can assign Menu Item objects to other objects. For example, you can store menu items in files created by Database or File objects. You can also package menu items in a Bundle object and use the {
\uldb\cf11 Assign}{\v\cf0 idx_assign@awusgnrl.hlp}{\field{\*\fldinst {\cf0  macrobutton NextField }}{\fldrslt }}{\field{\*\fldinst  {\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst  ADDIN {{\*\datafield 
6964785f61737369676e5f616c6d5f676e726c5f686c70}}}{\fldrslt }}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\cf0  }function to replace one set of menu items with another. 
\par \pard \s15\li360\sa60\nowidctlpar The following characteristics are transferred when a menu item is assigned to another item, or when it is saved to either a database record or a File object: 
\par \pard\plain \s20\fi-360\li720\sa60\nowidctlpar\tx360 \f5\fs20\cf1 \tab The item's name
\par \tab The toggle state, if applicable
\par \pard \s20\fi-360\li720\sa60\nowidctlpar\tx360 \tab The status (enabled or disabled)
\par \pard\plain \s15\li360\sa60\nowidctlpar \f5\fs20\cf1 For pop-up menus, the identity of the currently chosen item is also saved.
\par NOTES:
\par \pard \s15\li360\sa60\nowidctlpar If you make a menu assignment, the transferred item's function won't change the function of the item it is assigned to. For example, suppose the following:
\par \pard\plain \s20\fi-360\li720\sa60\nowidctlpar\tx360 \f5\fs20\cf1 \tab A menu item named Cut was connected to the Cut function.  
\par \tab A menu item named Exit was connected to the Exit function.
\par \pard \s20\fi-360\li720\sa60\nowidctlpar\tx360 \tab You assigned the Cut menu item to the Exit menu item. 
\par \pard\plain \s15\li360\sa60\nowidctlpar \f5\fs20\cf1 In this case, the Exit item's text would change from Exit to Cut. If a user were to select it, however, the renamed Exit item would still exit the application.
\par \pard\plain \s42\sb20\sa40\keepn \b\f5 \page {\cs37\fs16\up6 {\*\bkmkstart idx_editing_the_menu_item_object}{\*\bkmkend idx_editing_the_menu_item_object}#{\footnote \pard\plain \s38 \f5\fs20 {\cs37\fs16\up6 #} idx_editing_the_menu_item_object}} {
\cs37\fs16\up6 +{\footnote \pard\plain \s38 \f5\fs20 {\cs37\fs16\up6 +} top1:0010}} {\cs37\fs16\up6 ${\footnote \pard\plain \s38 \f5\fs20 {\cs37\fs16\up6 $} List of,}} {\cs37\fs16\up6 K{\footnote \pard\plain \s38 \f5\fs20 {\cs37\fs16\up6 K}
 Editing the Menu Item Object}} {\cs37\fs16\up6 !{\footnote \pard\plain \s38 \f5\fs20 {\cs37\fs16\up6 !}   EB(`btn_up'); CBB(`btn_up', `JI(`', `idx_contents')')}} Editing the Menu Item Object
\par \pard\plain \s43\li360\sa100 \b\f5\fs20 
\par {\uldb\cf11 Naming the Menu Item}{\v idx_naming_the_menu_item}{\field\flddirty{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  ADDIN }{\cf1 
{\*\datafield 6964785f6e616d696e675f7468655f6d656e755f6974656d}}}{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}
\par {\uldb\cf11 Specifying Keyboard Access Characters (Windows)}{\v idx_specifying_keyboard_access_characters}{\field\flddirty{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}
{\field\flddirty{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 6964785f73706563696679696e675f6b6579626f6172645f6163636573735f636861726163746572}}}{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}
\par {\uldb\cf11 Creating Accelerator Keys}{\v idx_creating_accelerator_keys}{\field\flddirty{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1 
 ADDIN }{\cf1 {\*\datafield 6964785f6372656174696e675f616363656c657261746f725f6b657973}}}{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}
\par {\uldb\cf11 Specifying the Type and Toggle Status}{\v idx_specifying_the_type_and_toggle_status}{\field\flddirty{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}
{\field\flddirty{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 6964785f73706563696679696e675f7468655f747970655f616e645f746f67676c655f7374617475}}}{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}
\par {\uldb\cf11 Specifying Startup Status}{\v idx_specifying_startup_status}{\field\flddirty{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1 
 ADDIN }{\cf1 {\*\datafield 6964785f73706563696679696e675f737461727475705f737461747573}}}{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}
\par {\uldb\cf11 Specifying Item Style (Macintosh)}{\v idx_specifying_item_style__macintosh}{\field\flddirty{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}
{\field\flddirty{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 6964785f73706563696679696e675f6974656d5f7374796c655f5f6d6163696e746f7368}}}{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}
\par \pard\plain \s42\sb20\sa40\keepn \b\f5 \page {\cs37\fs16\up6 {\*\bkmkstart idx_naming_the_menu_item}{\*\bkmkend idx_naming_the_menu_item}#{\footnote \pard\plain \s38 \f5\fs20 {\cs37\fs16\up6 #} idx_naming_the_menu_item}} {\cs37\fs16\up6 ${\footnote 
\pard\plain \s38 \f5\fs20 {\cs37\fs16\up6 $} Naming the Menu Item}} {\cs37\fs16\up6 +{\footnote \pard\plain \s38 \f5\fs20 {\cs37\fs16\up6 +} brws4:0000}} {\cs37\fs16\up6 K{\footnote \pard\plain \s38 \f5\fs20 {\cs37\fs16\up6 K} Editing the Menu Item Object
}} {\cs37\fs16\up6 !{\footnote \pard\plain \s38 \f5\fs20 {\cs37\fs16\up6 !}  EB(`btn_up'); CBB(`btn_up', `JI(`', `idx_editing_the_menu_item_object')')}} Naming the Menu Item
\par \pard\plain \s52 \f5\fs10 
\par \pard\plain \s26\ri432\sb40\sa40 \b\f5\fs20 Windows
\par \pard\plain \s15\li360\sa60\nowidctlpar \f5\fs20\cf1 The name of a menu item appears in a menu at run time. To specify it, enter the text in the Startup Text field.
\par \pard\plain \s26\ri432\sb40\sa40 \b\f5\fs20 Macintosh
\par \pard\plain \s15\li360\sa60\nowidctlpar \f5\fs20\cf1 For Macintosh, Startup Text is named Item Title. 
\par \pard \s15\li360\sa60\nowidctlpar If you enter a hyphen in the Item Title field, the 
menu will display the dotted line that usually divides menu-item categories. The dotted line is a menu item. A user can't choose it, but the line is included if your application counts items or retrieves a menu item's index. 
\par \pard\plain \s42\sb20\sa40\keepn \b\f5 \page {\cs37\fs16\up6 {\*\bkmkstart idx_specifying_keyboard_access_character}{\*\bkmkend idx_specifying_keyboard_access_character}#{\footnote \pard\plain \s38 \f5\fs20 {\cs37\fs16\up6 #}
 idx_specifying_keyboard_access_characters}} {\cs37\fs16\up6 ${\footnote \pard\plain \s38 \f5\fs20 {\cs37\fs16\up6 $} Specifying Keyboard Access Characters (Windows)}} {\cs37\fs16\up6 +{\footnote \pard\plain \s38 \f5\fs20 {\cs37\fs16\up6 +} brws4:0005}} {
\cs37\fs16\up6 K{\footnote \pard\plain \s38 \f5\fs20 {\cs37\fs16\up6 K} Editing the Menu Item Object}} {\cs37\fs16\up6 !{\footnote \pard\plain \s38 \f5\fs20 {\cs37\fs16\up6 !}  EB(`btn_up'); CBB(`btn_up', `JI(`', `idx_editing_the_menu_item_object')')}}
 Specifying Keyboard Access Characters (Windows)
\par \pard\plain \s52 \f5\fs10 
\par \pard\plain \s15\li360\sa60\nowidctlpar \f5\fs20\cf1 
Keyboard access characters are a feature of the operating system and are shown as underlined letters in the names of menus and menu items. They allow a user to work from the keyboard without a mouse. For example, you would pre
ss the Alt key and the underlined character shown in a menu if you wanted to pull the menu down. To select a menu item, you would press its underlined character. 
\par \pard \s15\li360\sa60\nowidctlpar 
To specify a keyboard access character in the Startup Text field, type an ampersand (&) character immediately before the character you want to use for keyboard access. For example, if you type &Print, the menu's runtime name is {\ul P}
rint. If you type E&xit, the name is E{\ul x}it.
\par \pard\plain \s42\sb20\sa40\keepn \b\f5 \page {\cs37\fs16\up6 {\*\bkmkstart idx_creating_accelerator_keys}{\*\bkmkend idx_creating_accelerator_keys}#{\footnote \pard\plain \s38 \f5\fs20 {\cs37\fs16\up6 #} idx_creating_accelerator_keys}} {\cs37\fs16\up6 $
{\footnote \pard\plain \s38 \f5\fs20 {\cs37\fs16\up6 $} Creating Accelerator Keys}} {\cs37\fs16\up6 +{\footnote \pard\plain \s38 \f5\fs20 {\cs37\fs16\up6 +} brws4:0010}} {\cs37\fs16\up6 K{\footnote \pard\plain \s38 \f5\fs20 {\cs37\fs16\up6 K}
 Editing the Menu Item Object}} {\cs37\fs16\up6 !{\footnote \pard\plain \s38 \f5\fs20 {\cs37\fs16\up6 !}  EB(`btn_up'); CBB(`btn_up', `JI(`', `idx_editing_the_menu_item_object')')}} Creating Accelerator Keys
\par \pard\plain \s52 \f5\fs10 
\par \pard\plain \s26\ri432\sb40\sa40 \b\f5\fs20 Windows
\par \pard\plain \s15\li360\sa60\nowidctlpar \f5\fs20\cf1 Accelerator keys allow a user t
o select menu commands from the keyboard without using the mouse. Accelerator keys are also called command keys. Normal and toggle menu items can both have accelerator keys. The Command Key field in the Options box allows you to create an accelerator key 
by typing the keystroke combination. You have the following command-key choices: 
\par \pard\plain \s20\fi-360\li720\sa60\nowidctlpar\tx360 \f5\fs20\cf1 \tab Ctrl and an alphabetical key
\par \tab Any function key
\par \tab Ctrl and a function key
\par \pard \s20\fi-360\li720\sa60\nowidctlpar\tx360 \tab Shift and a function key
\par \pard\plain \s26\ri432\sb40\sa40 \b\f5\fs20 Macintosh
\par \pard\plain \s15\li360\sa60\nowidctlpar \f5\fs20\cf1 For Macintosh, you can create Command-key equivalents for normal a
nd toggle menu items by entering a character in the Command Key field. To use a Command-key equivalent, press the Command key and the character at the same time. 
\par \pard\plain \s42\sb20\sa40\keepn \b\f5 \page {\cs37\fs16\up6 {\*\bkmkstart idx_specifying_the_type_and_toggle_statu}{\*\bkmkend idx_specifying_the_type_and_toggle_statu}#{\footnote \pard\plain \s38 \f5\fs20 {\cs37\fs16\up6 #}
 idx_specifying_the_type_and_toggle_status}} {\cs37\fs16\up6 ${\footnote \pard\plain \s38 \f5\fs20 {\cs37\fs16\up6 $} Specifying the Type and Toggle Status}} {\cs37\fs16\up6 +{\footnote \pard\plain \s38 \f5\fs20 {\cs37\fs16\up6 +} brws4:0015}} {
\cs37\fs16\up6 K{\footnote \pard\plain \s38 \f5\fs20 {\cs37\fs16\up6 K} Editing the Menu Item Object}} {\cs37\fs16\up6 !{\footnote \pard\plain \s38 \f5\fs20 {\cs37\fs16\up6 !}  EB(`btn_up'); CBB(`btn_up', `JI(`', `idx_editing_the_menu_item_object')')}}
 Specifying the Type and Toggle Status
\par \pard\plain \s52 \f5\fs10 
\par \pard\plain \s26\ri432\sb40\sa40 \b\f5\fs20 Windows
\par \pard\plain \s15\li360\sa60\nowidctlpar \f5\fs20\cf1 There are two kinds of menu items: 
\par \pard\plain \s18\fi-360\li720\sa60\nowidctlpar \f5\fs20\cf1 {\cf0 Normal
\par }\pard\plain \s20\fi-360\li720\sa60\nowidctlpar\tx360 \f5\fs20\cf1 \tab Menu items have one state and one name. 
\par \pard\plain \s18\fi-360\li720\sa60\nowidctlpar \f5\fs20\cf1 {\cf0 Toggle
\par }\pard\plain \s20\fi-360\li720\sa60\nowidctlpar\tx360 \f5\fs20\cf1 \tab Menu items have two possible states, on or off. Each state can have its own name. 
\par \pard\plain \s15\li360\sa60\nowidctlpar \f5\fs20\cf1 If you choose a toggle menu item or press its accelerator key equivalent, the item toggles to the other state. To s
pecifiy the item type, select Normal or Toggle in the Type box. Toggle enables the Toggled Text field. If you want to name the on state, use this field for the name. If you select the Check When Toggle On checkbox, you can display a checkmark next to a me
nu item that is toggled on during run time. 
\par \pard\plain \s26\ri432\sb40\sa40 \b\f5\fs20 Macintosh
\par \pard\plain \s15\li360\sa60\nowidctlpar \f5\fs20\cf1 The Macintosh allows you to select the following menu item types and marks:
\par \pard\plain \s18\fi-360\li720\sa60\nowidctlpar \f5\fs20\cf1 Normal
\par \pard\plain \s20\fi-360\li720\sa60\nowidctlpar\tx360 \f5\fs20\cf1 \tab Items have one item mark; the item mark is a character such as the check mark, which you can create by pressing Control-R in Key Caps.
\par \pard\plain \s18\fi-360\li720\sa60\nowidctlpar \f5\fs20\cf1 Toggle
\par \pard\plain \s20\fi-360\li720\sa60\nowidctlpar\tx360 \f5\fs20\cf1 \tab Menu items use a startup mark and a toggled mark. They can have one mark for each title.
\par \pard\plain \s18\fi-360\li720\sa60\nowidctlpar \f5\fs20\cf1 Hierarchical
\par \pard\plain \s20\fi-360\li720\sa60\nowidctlpar\tx360 \f5\fs20\cf1 \tab 
Menu items are submenus that are attached to a menu item in a normal or a pop-up menu. If a user chooses a hierarchical menu item, the application displays a submenu that might have a title, but that doesn't have a mark or a command-key equivalent. Also,
 the submenu doesn't issue a signal. 
\par \pard\plain \s15\li360\sa60\nowidctlpar \f5\fs20\cf1 To display a mark next to a selected menu item, enter the mark in the Startup Mark or the It
em Mark field. To display a mark next to a menu item when the menu item is toggled on, enter the mark in the Toggled Mark field.
\par \pard \s15\li360\sa60\nowidctlpar 
When you select a hierarchical type in the editing dialog, the Toggle Item box is replaced by a pop-up menu. The pop-up menu lists all of the available hierarchical menus in the subject. To link a submenu object and a hierarchical menu item, select an obj
ect from the list.
\par \pard\plain \s42\sb20\sa40\keepn \b\f5 \page {\cs37\fs16\up6 {\*\bkmkstart idx_specifying_startup_status}{\*\bkmkend idx_specifying_startup_status}#{\footnote \pard\plain \s38 \f5\fs20 {\cs37\fs16\up6 #} idx_specifying_startup_status}} {\cs37\fs16\up6 $
{\footnote \pard\plain \s38 \f5\fs20 {\cs37\fs16\up6 $} Specifying Startup Status}} {\cs37\fs16\up6 +{\footnote \pard\plain \s38 \f5\fs20 {\cs37\fs16\up6 +} brws4:0020}} {\cs37\fs16\up6 K{\footnote \pard\plain \s38 \f5\fs20 {\cs37\fs16\up6 K}
 Editing the Menu Item Object}} {\cs37\fs16\up6 !{\footnote \pard\plain \s38 \f5\fs20 {\cs37\fs16\up6 !}  EB(`btn_up'); CBB(`btn_up', `JI(`', `idx_editing_the_menu_item_object')')}} Specifying Startup Status
\par \pard\plain \s52 \f5\fs10 
\par \pard\plain \s15\li360\sa60\nowidctlpar \f5\fs20\cf1 Menu items are active by default. To specify the startup status of a menu item, select a radio button in the Startup Status box.
\par \pard \s15\li360\sa60\nowidctlpar NOTE: All of the menu items on a disabled menu are disabled until the menu has been enabled again. However, enabling the menu of a disabled menu item does not enable the menu item.
\par \pard\plain \s42\sb20\sa40\keepn \b\f5 \page {\cs37\fs16\up6 {\*\bkmkstart idx_specifying_item_style__macintosh}{\*\bkmkend idx_specifying_item_style__macintosh}#{\footnote \pard\plain \s38 \f5\fs20 {\cs37\fs16\up6 #} idx_specifying_item_style__macintosh}
} {\cs37\fs16\up6 ${\footnote \pard\plain \s38 \f5\fs20 {\cs37\fs16\up6 $} Specifying Item Style (Macintosh)}} {\cs37\fs16\up6 +{\footnote \pard\plain \s38 \f5\fs20 {\cs37\fs16\up6 +} brws4:0025}} {\cs37\fs16\up6 K{\footnote \pard\plain \s38 \f5\fs20 {
\cs37\fs16\up6 K} Editing the Menu Item Object}} {\cs37\fs16\up6 !{\footnote \pard\plain \s38 \f5\fs20 {\cs37\fs16\up6 !}  EB(`btn_up'); CBB(`btn_up', `JI(`', `idx_editing_the_menu_item_object')')}} Specifying Item Style (Macintosh)
\par \pard\plain \s52 \f5\fs10 
\par \pard\plain \s15\li360\sa60\nowidctlpar \f5\fs20\cf1 Use the checkboxes in the Style box to select the text style for a menu item.
\par \pard\plain \s42\sb20\sa40\keepn \b\f5 \page {\cs37\fs16\up6 {\*\bkmkstart idx_menu_item_object_signals}{\*\bkmkend idx_menu_item_object_signals}#{\footnote \pard\plain \s38 \f5\fs20 {\cs37\fs16\up6 #} idx_menu_item_object_signals}} {\cs37\fs16\up6 +
{\footnote \pard\plain \s38 \f5\fs20 {\cs37\fs16\up6 +} top1:0015}} {\cs37\fs16\up6 ${\footnote \pard\plain \s38 \f5\fs20 {\cs37\fs16\up6 $} Menu Item Object Signals}} {\cs37\fs16\up6 K{\footnote \pard\plain \s38 \f5\fs20 {\cs37\fs16\up6 K}
 Menu Item Object Signals}} {\cs37\fs16\up6 !{\footnote \pard\plain \s38 \f5\fs20 {\cs37\fs16\up6 !}  EB(`btn_up'); CBB(`btn_up', `JI(`', `idx_contents')')}} Menu Item Object Signals
\par \pard\plain \s17\li360\sb120\sa40\nowidctlpar \f5\fs20\cf1 Chosen
\par \pard\plain \s19\li720\sa60\nowidctlpar \f5\fs20\cf1 Issued when the user chooses a normal or toggle menu item.
\par \pard\plain \s17\li360\sb120\sa40\nowidctlpar \f5\fs20\cf1 Toggled On
\par \pard\plain \s19\li720\sa60\nowidctlpar \f5\fs20\cf1 Issued when the menu item is toggled on. This signal is only displayed in the signal pop-up menu for toggle menu items. 
\par \pard\plain \s17\li360\sb120\sa40\nowidctlpar \f5\fs20\cf1 Toggled Off 
\par \pard\plain \s19\li720\sa60\nowidctlpar \f5\fs20\cf1 Issued when the menu item is toggled off. This signal is only displayed in the signal pop-up menu for toggle menu items.
\par \pard\plain \s42\sb20\sa40\keepn \b\f5 \page {\cs37\fs16\up6 {\*\bkmkstart idx_menu_item_alm_functions}{\*\bkmkend idx_menu_item_alm_functions}#{\footnote \pard\plain \s38 \f5\fs20 {\cs37\fs16\up6 #} idx_menu_item_alm_functions}} {\cs37\fs16\up6 +
{\footnote \pard\plain \s38 \f5\fs20 {\cs37\fs16\up6 +} top1:0020}} {\cs37\fs16\up6 ${\footnote \pard\plain \s38 \f5\fs20 {\cs37\fs16\up6 $} List of,}} {\cs37\fs16\up6 K{\footnote \pard\plain \s38 \f5\fs20 {\cs37\fs16\up6 K} Menu Item Functions}} {
\cs37\fs16\up6 !{\footnote \pard\plain \s38 \f5\fs20 {\cs37\fs16\up6 !}  EB(`btn_up'); CBB(`btn_up', `JI(`', `idx_contents')')}} Menu Item Functions
\par \pard\plain \s43\li360\sa100 \b\f5\fs20 
\par {\uldb\cf11 \{bmc graphics\\i_mids.bmp\}}{\v idx_disable_menu_item}{\field{\*\fldinst {\b0  macrobutton NextField }}{\fldrslt }}{\field{\*\fldinst {\b0\cf1  }{\b0\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\b0\cf1  ADDIN }{\b0\cf1 
{\*\datafield 6964785f64697361626c655f6d656e755f6974656d}}}{\fldrslt }}{\field{\*\fldinst {\b0\cf1  macrobutton NextField }}{\fldrslt }}{\b0\cf1   }{\uldb\cf11 Disable Menu Item}{\v idx_disable_menu_item}{\field\flddirty{\*\fldinst  macrobutton NextField 
}{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 6964785f64697361626c655f6d656e755f6974656d}}}{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1 
 macrobutton NextField }}{\fldrslt }}
\par {\uldb\cf11 \{bmc graphics\\i_mien.bmp\}}{\v idx_enable_menu_item}{\field{\*\fldinst {\b0  macrobutton NextField }}{\fldrslt }}{\field{\*\fldinst {\b0\cf1  }{\b0\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\b0\cf1  ADDIN }{\b0\cf1 
{\*\datafield 6964785f656e61626c655f6d656e755f6974656d}}}{\fldrslt }}{\field{\*\fldinst {\b0\cf1  macrobutton NextField }}{\fldrslt }}{\b0\cf1   }{\uldb\cf11 Enable Menu Item}{\v idx_enable_menu_item}{\field\flddirty{\*\fldinst  macrobutton NextField 
}{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 6964785f656e61626c655f6d656e755f6974656d}}}{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1 
 macrobutton NextField }}{\fldrslt }}
\par {\uldb\cf11 \{bmc graphics\\i_mitf.bmp\}}{\v idx_toggle_item_off}{\field{\*\fldinst {\b0  macrobutton NextField }}{\fldrslt }}{\field{\*\fldinst {\b0\cf1  }{\b0\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\b0\cf1  ADDIN }{\b0\cf1 
{\*\datafield 6964785f746f67676c655f6974656d5f6f6666}}}{\fldrslt }}{\field{\*\fldinst {\b0\cf1  macrobutton NextField }}{\fldrslt }}{\b0\cf1   }{\uldb\cf11 Toggle Item Off}{\v idx_toggle_item_off}{\field\flddirty{\*\fldinst  macrobutton NextField 
}{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 6964785f746f67676c655f6974656d5f6f6666}}}{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1 
 macrobutton NextField }}{\fldrslt }}
\par {\uldb\cf11 \{bmc graphics\\i_mitn.bmp\}}{\v idx_toggle_item_on}{\field{\*\fldinst {\b0  macrobutton NextField }}{\fldrslt }}{\field{\*\fldinst {\b0\cf1  }{\b0\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\b0\cf1  ADDIN }{\b0\cf1 
{\*\datafield 6964785f746f67676c655f6974656d5f6f6e}}}{\fldrslt }}{\field{\*\fldinst {\b0\cf1  macrobutton NextField }}{\fldrslt }}{\b0\cf1   }{\uldb\cf11 Toggle Item On}{\v idx_toggle_item_on}{\field\flddirty{\*\fldinst  macrobutton NextField 
}{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 6964785f746f67676c655f6974656d5f6f6e}}}{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1 
 macrobutton NextField }}{\fldrslt }}
\par \pard\plain \s42\sb20\sa40\keepn \b\f5 \page {\cs37\fs16\up6 {\*\bkmkstart idx_disable_menu_item}{\*\bkmkend idx_disable_menu_item}#{\footnote \pard\plain \s38 \f5\fs20 {\cs37\fs16\up6 #} idx_disable_menu_item}} {\cs37\fs16\up6 +{\footnote \pard\plain 
\s38 \f5\fs20 {\cs37\fs16\up6 +} brws5:0005}} {\cs37\fs16\up6 ${\footnote \pard\plain \s38 \f5\fs20 {\cs37\fs16\up6 $} Parameters & Flows}} {\cs37\fs16\up6 K{\footnote \pard\plain \s38 \f5\fs20 {\cs37\fs16\up6 K} Disable Menu Item}} {\cs37\fs16\up6 !
{\footnote \pard\plain \s38 \f5\fs20 {\cs37\fs16\up6 !}  EB(`btn_up'); CBB(`btn_up', `JI(`', `idx_menu_item_alm_functions')')}} Disable Menu Item
\par \pard\plain \s43\li360\sa100\keepn \b\f5\fs20 {\cchs256 Menu Item ALM}
\par \pard\plain \s52 \f5\fs10 
\par \pard\plain \s15\li360\sa60\nowidctlpar \f5\fs20\cf1 {\cchs256 Disables a menu item.
\par }\pard \s15\li360\sa60\nowidctlpar 
\par \pard\plain \s43\li360\sa100 \b\f5\fs20 {\cf5 \{bmc graphics\\f_mids.bmp\}}{\cf1  }
\par \pard\plain \s15\li360\sa60\nowidctlpar \f5\fs20\cf1 {\cchs256 
\par }\pard\plain \s45\sb40\sa40 \b\f5\fs20 {\cchs256 Input Parameters
\par }\pard\plain \s30\li360\sb40\sa20\nowidctlpar \f5\fs20\cf1 {\cchs256 Menu Item}\tab \tab (Menu Item/Required){\cchs256 
\par }\pard\plain \s31\li720\sa60\nowidctlpar \f5\fs20\cf1 {\cchs256 Identifies the Menu Item to }be {\cchs256 disable}d{\cchs256 .
\par }\pard\plain \s36\ri432\sb40\sa40 \b\f5\fs20 {\cchs256 Flows
\par }\pard\plain \s28\li360\sb40\sa20\nowidctlpar \f5\fs20\cf1 {\cchs256 Done
\par }\pard\plain \s29\li720\sa60\nowidctlpar \f5\fs20\cf1 {\cchs256 Followed after the menu item is disabled.}
\par \pard\plain \s42\sb20\sa40\keepn \b\f5 \page {\cs37\fs16\up6 {\*\bkmkstart idx_enable_menu_item}{\*\bkmkend idx_enable_menu_item}#{\footnote \pard\plain \s38 \f5\fs20 {\cs37\fs16\up6 #} idx_enable_menu_item}} {\cs37\fs16\up6 +{\footnote \pard\plain \s38 
\f5\fs20 {\cs37\fs16\up6 +} brws5:0010}} {\cs37\fs16\up6 ${\footnote \pard\plain \s38 \f5\fs20 {\cs37\fs16\up6 $} Parameters & Flows}} {\cs37\fs16\up6 K{\footnote \pard\plain \s38 \f5\fs20 {\cs37\fs16\up6 K} Enable Menu Item}} {\cs37\fs16\up6 !{\footnote 
\pard\plain \s38 \f5\fs20 {\cs37\fs16\up6 !}  EB(`btn_up'); CBB(`btn_up', `JI(`', `idx_menu_item_alm_functions')')}} Enable Menu Item
\par \pard\plain \s43\li360\sa100\keepn \b\f5\fs20 {\cchs256 Menu Item ALM}
\par \pard\plain \s52 \f5\fs10 
\par \pard\plain \s15\li360\sa60\nowidctlpar \f5\fs20\cf1 {\cchs256 Enables a menu item.
\par }\pard \s15\li360\sa60\nowidctlpar 
\par \pard\plain \s43\li360\sa100 \b\f5\fs20 {\cf5 \{bmc graphics\\f_mien.bmp\}}{\cf1  }
\par \pard\plain \s15\li360\sa60\nowidctlpar \f5\fs20\cf1 {\cchs256 
\par }\pard\plain \s45\sb40\sa40 \b\f5\fs20 {\cchs256 Input Parameters
\par }\pard\plain \s30\li360\sb40\sa20\nowidctlpar \f5\fs20\cf1 {\cchs256 Menu Item}\tab \tab (Menu Item/Required){\cchs256 
\par }\pard\plain \s31\li720\sa60\nowidctlpar \f5\fs20\cf1 {\cchs256 Identifies the Menu Item to }be {\cchs256 enable}d{\cchs256 .
\par }\pard\plain \s36\ri432\sb40\sa40 \b\f5\fs20 {\cchs256 Flows
\par }\pard\plain \s28\li360\sb40\sa20\nowidctlpar \f5\fs20\cf1 {\cchs256 Done
\par }\pard\plain \s29\li720\sa60\nowidctlpar \f5\fs20\cf1 {\cchs256 Followed after the item is enabled.}
\par \pard\plain \s42\sb20\sa40\keepn \b\f5 \page {\cs37\fs16\up6 {\*\bkmkstart idx_toggle_item_off}{\*\bkmkend idx_toggle_item_off}#{\footnote \pard\plain \s38 \f5\fs20 {\cs37\fs16\up6 #} idx_toggle_item_off}} {\cs37\fs16\up6 +{\footnote \pard\plain \s38 
\f5\fs20 {\cs37\fs16\up6 +} brws5:0015}} {\cs37\fs16\up6 ${\footnote \pard\plain \s38 \f5\fs20 {\cs37\fs16\up6 $} Parameters & Flows}} {\cs37\fs16\up6 K{\footnote \pard\plain \s38 \f5\fs20 {\cs37\fs16\up6 K} Toggle Item Off}} {\cs37\fs16\up6 !{\footnote 
\pard\plain \s38 \f5\fs20 {\cs37\fs16\up6 !}  EB(`btn_up'); CBB(`btn_up', `JI(`', `idx_menu_item_alm_functions')')}} Toggle Item Off
\par \pard\plain \s43\li360\sa100\keepn \b\f5\fs20 {\cchs256 Menu Item ALM}
\par \pard\plain \s52 \f5\fs10 
\par \pard\plain \s15\li360\sa60\nowidctlpar \f5\fs20\cf1 {\cchs256 Returns a toggle item to its off state (startup title). If the toggled item was checked (Windows }and {\cchs256 Macintosh) or otherwise marked (Macintosh only), the mark is also removed.

\par }\pard \s15\li360\sa60\nowidctlpar 
\par \pard\plain \s43\li360\sa100 \b\f5\fs20 {\cf5 \{bmc graphics\\f_mitf.bmp\}}{\cf1  }
\par \pard\plain \s15\li360\sa60\nowidctlpar \f5\fs20\cf1 {\cchs256 
\par }\pard\plain \s45\sb40\sa40 \b\f5\fs20 {\cchs256 Input Parameters
\par }\pard\plain \s30\li360\sb40\sa20\nowidctlpar \f5\fs20\cf1 {\cchs256 Toggle Item}\tab \tab (Menu Item/Required){\cchs256 
\par }\pard\plain \s31\li720\sa60\nowidctlpar \f5\fs20\cf1 {\cchs256 Identifies the Menu Item to }be {\cchs256 toggle}d{\cchs256 . The item must be identified as a toggle item in the }{\uldb\cf11 Menu Item editing dialog}{\v\cf0 
idx_specifying_the_type_and_toggle_status}{\field{\*\fldinst {\cf0  macrobutton NextField }}{\fldrslt }}{\field{\*\fldinst  {\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst  ADDIN {{\*\datafield 
6964785f73706563696679696e675f7468655f747970655f616e645f746f67676c655f7374617475}}}{\fldrslt }}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\cchs256 .
\par }\pard\plain \s36\ri432\sb40\sa40 \b\f5\fs20 {\cchs256 Flows}{\f8\cchs256 
\par }\pard\plain \s28\li360\sb40\sa20\nowidctlpar \f5\fs20\cf1 {\cchs256 Done
\par }\pard\plain \s29\li720\sa60\nowidctlpar \f5\fs20\cf1 {\cchs256 Followed after the item is toggled} off{\cchs256 .}
\par \pard\plain \s42\sb20\sa40\keepn \b\f5 \page {\cs37\fs16\up6 {\*\bkmkstart idx_toggle_item_on}{\*\bkmkend idx_toggle_item_on}#{\footnote \pard\plain \s38 \f5\fs20 {\cs37\fs16\up6 #} idx_toggle_item_on}} {\cs37\fs16\up6 +{\footnote \pard\plain \s38 
\f5\fs20 {\cs37\fs16\up6 +} brws5:0020}} {\cs37\fs16\up6 ${\footnote \pard\plain \s38 \f5\fs20 {\cs37\fs16\up6 $} Parameters & Flows}} {\cs37\fs16\up6 K{\footnote \pard\plain \s38 \f5\fs20 {\cs37\fs16\up6 K} Toggle Item On}} {\cs37\fs16\up6 !{\footnote 
\pard\plain \s38 \f5\fs20 {\cs37\fs16\up6 !}  EB(`btn_up'); CBB(`btn_up', `JI(`', `idx_menu_item_alm_functions')')}} Toggle Item On
\par \pard\plain \s43\li360\sa100\keepn \b\f5\fs20 {\cchs256 Menu Item ALM}
\par \pard\plain \s52 \f5\fs10 
\par \pard\plain \s15\li360\sa60\nowidctlpar \f5\fs20\cf1 {\cchs256 Switches a toggle item to its on state (toggle title and item mark). If the item in its toggle state is to be checked (Windows }and {\cchs256 
Macintosh) or otherwise marked (Macintosh only), the mark is also inserted.
\par }\pard \s15\li360\sa60\nowidctlpar 
\par \pard\plain \s43\li360\sa100 \b\f5\fs20 {\cf5 \{bmc graphics\\f_mitn.bmp\}}{\cf1  }
\par \pard\plain \s15\li360\sa60\nowidctlpar \f5\fs20\cf1 {\cchs256 
\par }\pard\plain \s45\sb40\sa40 \b\f5\fs20 {\cchs256 Input Parameters
\par }\pard\plain \s30\li360\sb40\sa20\nowidctlpar \f5\fs20\cf1 {\cchs256 Toggle Item}\tab \tab (Menu Item/Required){\cchs256 
\par }\pard\plain \s31\li720\sa60\nowidctlpar \f5\fs20\cf1 {\cchs256 Identifies the Menu Item to }be {\cchs256 toggle}d{\cchs256 . The }item{\cchs256  must be identified as a toggle item in the }{\uldb\cf11 Menu Item editing dialog}{\v\cf0 
idx_specifying_the_type_and_toggle_status}{\field{\*\fldinst {\cf0  macrobutton NextField }}{\fldrslt }}{\field{\*\fldinst  {\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst  ADDIN {{\*\datafield 
6964785f73706563696679696e675f7468655f747970655f616e645f746f67676c655f7374617475}}}{\fldrslt }}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\cchs256 .
\par }\pard\plain \s36\ri432\sb40\sa40 \b\f5\fs20 {\cchs256 Flows
\par }\pard\plain \s28\li360\sb40\sa20\nowidctlpar \f5\fs20\cf1 {\cchs256 Done
\par }\pard\plain \s29\li720\sa60\nowidctlpar \f5\fs20\cf1 {\cchs256 Followed after the item is toggled on.}
\par }