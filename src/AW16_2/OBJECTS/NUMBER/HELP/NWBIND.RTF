{\rtf1\ansi \deff5\deflang1033{\fonttbl{\f0\froman\fcharset0\fprq2 Tms Rmn;}{\f1\froman\fcharset2\fprq2 Symbol;}{\f2\fswiss\fcharset0\fprq2 Helv;}{\f3\fmodern\fcharset0\fprq1 Courier;}
{\f4\froman\fcharset0\fprq2 Times New Roman;}{\f5\fswiss\fcharset0\fprq2 Arial;}{\f6\froman\fcharset0\fprq2 MS Serif;}{\f7\fswiss\fcharset0\fprq2 MS Sans Serif;}{\f8\froman\fcharset0\fprq2 Times;}{\f9\fswiss\fcharset0\fprq2 Helvetica;}
{\f10\fswiss\fcharset0\fprq2 System;}{\f11\fmodern\fcharset0\fprq1 Courier New;}{\f12\fnil\fcharset2\fprq2 Wingdings;}{\f13\froman\fcharset2\fprq2 MT Extra;}{\f14\fmodern\fcharset2\fprq1 MS LineDraw;}{\f15\fdecor\fcharset0\fprq2 Algerian;}
{\f16\fswiss\fcharset0\fprq2 Arial Rounded MT Bold;}{\f17\froman\fcharset0\fprq2 Bookman Old Style;}{\f18\fdecor\fcharset0\fprq2 Braggadocio;}{\f19\fswiss\fcharset0\fprq2 Britannic Bold;}{\f20\fscript\fcharset0\fprq2 Brush Script MT;}
{\f21\fswiss\fcharset0\fprq2 Century Gothic;}{\f22\fdecor\fcharset0\fprq2 Colonna MT;}{\f23\fdecor\fcharset0\fprq2 Desdemona;}{\f24\froman\fcharset0\fprq2 Footlight MT Light;}{\f25\fswiss\fcharset0\fprq2 Impact;}{\f26\fdecor\fcharset0\fprq2 Kino MT;}
{\f27\froman\fcharset0\fprq2 Wide Latin;}{\f28\fscript\fcharset0\fprq2 Matura MT Script Capitals;}{\f29\fdecor\fcharset0\fprq2 Playbill;}{\f30\fswiss\fcharset0\fprq2 WP Phonetic;}{\f31\fnil\fcharset0\fprq2 WP MathExtendedB;}
{\f32\fmodern\fcharset0\fprq1 WP BoxDrawing;}{\f33\fnil\fcharset0\fprq2 WP IconicSymbolsB;}{\f34\fnil\fcharset0\fprq2 WP Greek Helve;}{\f35\fnil\fcharset0\fprq2 WP MathExtendedA;}{\f36\froman\fcharset0\fprq2 WP CyrillicA;}
{\f37\fnil\fcharset0\fprq2 WP OverflowSet;}{\f38\fnil\fcharset0\fprq2 WP Japanese;}{\f39\fnil\fcharset0\fprq2 WP MathB;}{\f40\fnil\fcharset0\fprq2 WP IconicSymbolsA;}{\f41\fnil\fcharset0\fprq2 WP Arabic Sihafa;}
{\f42\fnil\fcharset2\fprq2 WP MultinationalA Roman;}{\f43\fnil\fcharset0\fprq2 WP CyrillicB;}{\f44\fnil\fcharset0\fprq2 WP MultinationalB Roman;}{\f45\fnil\fcharset0\fprq2 WP Greek Courier;}{\f46\fnil\fcharset0\fprq2 WP MathA;}
{\f47\fnil\fcharset0\fprq2 WP ArabicScript Sihafa;}{\f48\fnil\fcharset0\fprq2 WP Greek Century;}{\f49\fnil\fcharset2\fprq2 WP TypographicSymbols;}{\f50\fnil\fcharset0\fprq2 WP Hebrew David;}{\f51\fscript\fcharset0\fprq2 Ribbon131 Bd BT;}
{\f52\froman\fcharset0\fprq2 Humanst521 Lt BT;}{\f53\froman\fcharset0\fprq2 GeoSlab703 Lt BT;}{\f54\fswiss\fcharset0\fprq2 Swis721 BlkEx BT;}{\f55\fswiss\fcharset0\fprq2 Humanst521 Cn BT;}{\f56\fdecor\fcharset0\fprq2 Onyx BT;}
{\f57\fdecor\fcharset0\fprq2 CaslonOpnface BT;}{\f58\fswiss\fcharset0\fprq2 EngraversGothic BT;}{\f59\fscript\fcharset0\fprq2 ShelleyVolante BT;}{\f60\froman\fcharset0\fprq2 BernhardMod BT;}{\f61\fscript\fcharset0\fprq2 Brush738 BT;}
{\f62\fscript\fcharset0\fprq2 Blackletter686 BT;}{\f63\froman\fcharset0\fprq2 Arrus BT;}{\f64\froman\fcharset0\fprq2 Arrus Blk BT;}{\f65\fscript\fcharset0\fprq2 OzHandicraft BT;}{\f66\fswiss\fcharset0\fprq2 Arial Super;}
{\f67\fswiss\fcharset0\fprq2 AvantGarde;}{\f68\froman\fcharset0\fprq2 Bookman;}{\f69\fswiss\fcharset0\fprq2 Helvetica-Narrow;}{\f70\froman\fcharset0\fprq2 NewCenturySchlbk;}{\f71\froman\fcharset0\fprq2 Palatino;}
{\f72\fscript\fcharset0\fprq2 ZapfChancery;}{\f73\fdecor\fcharset2\fprq2 ZapfDingbats;}{\f74\froman\fcharset255\fprq2 Roman;}{\f75\fscript\fcharset255\fprq2 Script;}{\f76\fmodern\fcharset255\fprq2 Modern;}{\f77\fswiss\fcharset0\fprq1 MS Dialog;}}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;
\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{\ri20 \f5\fs20 \snext0 Normal;}{\s4\li360\ri20 \f4\ul \sbasedon0\snext0 heading 4;}{\*\cs10 \additive 
Default Paragraph Font;}{\s15\li720\ri720\tldot\tx8280\tqr\tx8640 \f5\fs20\cf8 \sbasedon0\snext0 toc 2;}{\*\cs16 \additive\fs16\up6 \sbasedon10 footnote reference;}{\s17\ri20 \f5\fs20 \sbasedon0\snext17 footnote text;}{\s18\ri14\keepn \b\f5\cf6 
\sbasedon0\snext0 Help Topic Heading;}{\s19\ri20 \b\i\f5 \sbasedon0\snext19 Help See Also;}{\*\cs20 \additive\super \sbasedon10 endnote reference;}{\s21\ri20 \b\f5 \sbasedon0\snext0 Help Popup Heading;}{\s22\ri20\sa60\tx720\tx1260 \b\f5\fs20 
\sbasedon0\snext0 Topic Section;}{\s23\ri20\sb80 \f11 \sbasedon0\snext0 Function Syntax;}{\s24\ri20\sa120\tx2880 \f5\fs16 \sbasedon0\snext24 Topic Wizard Line 2;}{\s25\ri14\keepn\tx720\tx1260 \b\f5\fs32\cf6 \sbasedon18\snext25 new 2;}{\s26\li360\ri20 
\f5\fs20 \sbasedon0\snext0 hlpbrz_toc;}{\s27\li360\sa100 \f5\fs20 \sbasedon0\snext27 HelpBreeze TOC;}{\s28\ri20\tqc\tx4320\tqr\tx8640 \f4\fs20 \sbasedon0\snext28 footer;}{\s29\li720\ri20 \f4\fs20 \sbasedon0\snext29 Normal Indent;}{
\s30\li360\ri20\sb120\sa120 \f5\fs20 \sbasedon0\snext30 Topic Text;}{\s31\li360\ri20\sb120 \b\f5 \sbasedon0\snext30 Topic Heading;}{\s32\li180\ri20 \b\f5\fs28 \sbasedon0\snext31 Topic Caption;}{\s33\fi-360\li900\ri20\sb120\sa120\tx900 \f5\fs20 
\sbasedon30\snext33 Indent List;}{\s34\fi-3067\li3614\ri14\sb60\sa60\tx990\tx3600 \f5\fs20 \sbasedon33\snext34 Return Flow;}{\s35\fi-360\li720\ri360\sb120\sa120 \f5\fs20 \sbasedon30\snext35 Topic Text Item;}{\s36\li720\ri720\sb120\sa120 \f5\fs20 
\sbasedon30\snext36 Topic Text Indent;}{\s37\fi-274\li446\ri20\sa120 \f4\fs20 \sbasedon0\snext37 Bullet;}{\s38\fi-540\li1080\ri20\sb120\sa120\tx1080 \f5\fs20 \sbasedon33\snext38 Return Values;}{\s39\fi-360\li900\ri20\sb120\sa120\tx900 \f11\fs18 
\sbasedon33\snext39 API Syntax;}{\s40\fi-2707\li3240\ri20\sa60\tx3240 \f5\fs20 \sbasedon33\snext40 API Param;}{\s41\fi-540\li1080\ri20\sb120\sa120\tx1080 \f5\fs20 \sbasedon38\snext41 API Return;}{\s42\fi-2880\li3600\ri20\sb120\sa120\tx3600 \f5\fs18 
\sbasedon30\snext42 Define Tbl;}{\s43\li540\ri20\sb120\sa120 \f5\fs20 \sbasedon33\snext43 Indent Text;}{\s44\fi-450\li990\ri14\sb60\sa60\tx990\tx3060 \f5\fs20 \sbasedon34\snext44 Test Case;}{\s45\ri20\tqc\tx4320\tqr\tx8640 \f5\fs20 \sbasedon0\snext45 
header;}}{\info{\title # $ K ! Contents}{\author AppWare Systems Group}{\doccomm <project = e:\\appware\\bin\\alm_bind\\help\\nwbind.hpj>}{\operator AppWare Systems Group}{\creatim\yr1994\mo9\dy22\hr10\min36}{\revtim\yr1994\mo9\dy22\hr10\min36}{\version2}
{\edmins2}{\nofpages64}{\nofwords13063}{\nofchars74463}{\vern49197}}\margl1008\margr1008\margt720\margb720 \widowctrl\ftnbj\aenddoc\noextrasprl\prcolbl\cvmme\sprsspbf\brkfrm\swpbdr\hyphcaps0 \fet0{\*\template D:\\MSWORD6\\TEMPLATE\\HLPBRZ6.DOT}\sectd 
\linex0\endnhere {\footer \pard\plain \s28\ri20\tqc\tx5040\tqr\tx10260 \f4\fs20 
\par }{\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang{\pntxta )}}{\*\pnseclvl5
\pndec\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang
{\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}\pard\plain \s18\ri14\keepn \b\f5\cf6 {\cs16\fs16 #{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 #} idh_contents}}{\fs16 {\*\bkmkstart idx_contents}
{\*\bkmkend idx_contents} }{\cs16\fs16 ${\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 $} Contents}}{\fs16  }{\cs16\fs16 K{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 K} Contents}}{\fs16  }{\cs16\fs16 !{\footnote \pard\plain 
\s17\ri20 \f5\fs20 {\cs16\fs16\up6 !} DB(`btn_up')}} NW Bindery ALM Help Contents
\par \pard\plain \ri20 \f5\fs20 {\b 
\par Dialog Help}
\par \pard \li360\ri20 {\uldb\cf11 Object Editing Dialog}{\v idh_obj_edit_dlg_help}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 
{\*\datafield 6964685f6f626a5f656469745f646c675f68656c70}}}{\fldrslt }}{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}{\cf1 
\par }\pard \ri20 
\par {\b Name Translation Information}
\par \pard\plain \s27\li360\sa100 \f5\fs20 {\uldb\cf11 Object Types}{\v idh_object_types_xlat}{\field\flddirty{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}
{\field\flddirty{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 6964685f6f626a6563745f74797065735f786c6174}}}{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}
\par {\uldb\cf11 Object Properties}{\v idh_object_prop_xlat}{\field\flddirty{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  ADDIN }{\cf1 
{\*\datafield 6964685f6f626a6563745f70726f705f786c6174}}}{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}
\par \pard\plain \ri20 \f5\fs20 
\par {\b Functions
\par }\trowd \trqc\trgaph108\trleft-108 \cellx2772\cellx5652 \pard \sa144\intbl {\uldb\cf11 \{bml bitmaps\\i_bndb.bmp\}Archive Bindery}{\v idh_archive_bindery}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 
macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 6964685f6368616e67655f6f626a5f7365637572697479}}}{\fldrslt }}{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}\cell {\uldb\cf11 \{bml bitmaps\\
i_bnda.bmp\}Is Emulation ?}{\v idh_is_emulation}{\field\flddirty{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 
6964685f69735f656d756c6174696f6e}}}{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}\cell \pard \intbl \row \trowd \trqc\trgaph108\trleft-108 \cellx2772\cellx5652 \pard \sa144\intbl {\uldb\cf11 \{bml bitmaps\\i_bndy.bmp\}
Change Object Security}{\v idh_change_obj_security}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 
6964685f6368616e67655f6f626a5f7365637572697479}}}{\fldrslt }}{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}\cell {\uldb\cf11 \{bml bitmaps\\i_bnde.bmp\}List Object Types}{\v idh_list_obj_types}{\field{\*\fldinst  macrobutton NextField 
}{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 6964685f6c6973745f6f626a5f7479706573}}}{\fldrslt }}{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}\cell 
\pard \intbl \row \pard \sa144\intbl {\uldb\cf11 \{bml bitmaps\\i_CPas.bmp\}Change Password}{\v idh_change_password}{\field\flddirty{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}
}{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 6964785f6368616e67655f70617373776f7264}}}{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}\cell {\uldb\cf11 \{bml bitmaps\\i_liob.bmp\}
List Objects}{\v idh_list_objects}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 6964785f6c6973745f6f626a65637473}}
}{\fldrslt }}{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}\cell \pard \intbl \row \pard \sa144\intbl {\uldb\cf11 \{bml bitmaps\\i_bndx.bmp\}Change Property Security}{\v idh_change_prop_security}{\field\flddirty{\*\fldinst 
 macrobutton NextField }{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 6964685f6368616e67655f70726f705f7365637572697479}}}{\fldrslt }}
{\field\flddirty{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}\cell {\uldb\cf11 \{bml bitmaps\\i_lipr.bmp\}List Properties}{\v idh_list_properties}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 
macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 6964785f6c6973745f70726f70657274696573}}}{\fldrslt }}{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}\cell \pard \intbl \row \pard \sa144\intbl {
\uldb\cf11 \{bml bitmaps\\i_bndd.bmp\}Clear Property}{\v idh_clear_property}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}\cell {\uldb\cf11 \{bml bitmaps\\i_bndf.bmp\}
Object Exists ?}{\v idh_object_exists}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 6964685f6f626a6563745f657869737473}}
}{\fldrslt }}{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}\cell \pard \intbl \row \pard \sa144\intbl {\uldb\cf11 \{bml bitmaps\\i_crob.bmp\}Create Object}{\v idh_create_object}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}
{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 6964785f6372656174655f6f626a656374}}}{\fldrslt }}{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}\cell {\uldb\cf11 \{
bml bitmaps\\i_bndv.bmp\}Property Supports Type ?}{\v idh_property_supports_type}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 
{\*\datafield 6964685f70726f70657274795f737570706f7274735f74797065}}}{\fldrslt }}{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}\cell \pard \intbl \row \pard \sa144\intbl {\uldb\cf11 \{bml bitmaps\\i_crpr.bmp\}Create Property}{\v 
idh_create_property}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}\cell {\uldb\cf11 \{bml bitmaps\\i_reob.bmp\}Rename Object}{\v idh_rename_object}{\field{\*\fldinst 
 macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 6964785f72656e616d655f6f626a656374}}}{\fldrslt }}{\field{\*\fldinst {\cf1 
 macrobutton NextField }}{\fldrslt }}\cell \pard \intbl \row \pard \sa144\intbl {\uldb\cf11 \{bml bitmaps\\i_deob.bmp\}Delete Object}{\v idh_delete_object}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 
macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 6964785f64656c6574655f6f626a656374}}}{\fldrslt }}{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}\cell {\uldb\cf11 \{bml bitmaps\\i_bndc.bmp\}
Restore Bindery}{\v idh_restore_bindery}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 6964785f72656e616d655f6f626a656374}}
}{\fldrslt }}{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}\cell \pard \intbl \row \pard \sa144\intbl {\uldb\cf11 \{bml bitmaps\\i_depr.bmp\}Delete Property}{\v idh_delete_property}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}
{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 6964785f64656c6574655f70726f7065727479}}}{\fldrslt }}{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}\cell {
\uldb\cf11 \{bml bitmaps\\i_bndp.bmp\}Set Date / Time Property}{\v idh_set_date_time_property}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{
\cf1 {\*\datafield 6964685f7365745f646174655f74696d655f70726f7065727479}}}{\fldrslt }}{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}\cell \pard \intbl \row \pard \sa144\intbl {\uldb\cf11 \{bml bitmaps\\i_bndj.bmp\}Get Date / Time Property}
{\v idh_get_date_time_property}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 
6964685f6765745f646174655f74696d655f70726f7065727479}}}{\fldrslt }}{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}\cell {\uldb\cf11 \{bml bitmaps\\i_bndq.bmp\}Set Net Address Property}{\v idh_set_net_addr_property}{\field{\*\fldinst 
 macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 6964685f7365745f6e65745f616464725f70726f7065727479}}}{\fldrslt }}{\field{\*\fldinst {\cf1 
 macrobutton NextField }}{\fldrslt }}\cell \pard \intbl \row \pard \sa144\intbl {\uldb\cf11 \{bml bitmaps\\i_bndk.bmp\}Get Net Address Property}{\v idh_get_net_addr_property}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  
}{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 6964685f6765745f6e65745f616464725f70726f7065727479}}}{\fldrslt }}{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}\cell {\uldb\cf11 \{bml bitmaps
\\i_bndr.bmp\}Set Number Property}{\v idh_set_number_property}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 
6964685f7365745f6e756d6265725f70726f7065727479}}}{\fldrslt }}{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}\cell \pard \intbl \row \pard \sa144\intbl {\uldb\cf11 \{bml bitmaps\\i_bndl.bmp\}Get Number Property}{\v idh_get_number_property}
{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 6964685f6765745f6e756d6265725f70726f7065727479}}}{\fldrslt }}
{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}\cell {\uldb\cf11 \{bml bitmaps\\i_bnds.bmp\}Set Table Property}{\v idh_set_table_property}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 
macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 6964685f7365745f7461626c655f70726f7065727479}}}{\fldrslt }}{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}\cell \pard \intbl \row \pard \sa144\intbl {
\uldb\cf11 \{bml bitmaps\\i_bndg.bmp\}Get Object Info}{\v idh_get_object_info}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 
{\*\datafield 6964685f6765745f6f626a6563745f696e666f}}}{\fldrslt }}{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}\cell {\uldb\cf11 \{bml bitmaps\\i_bndt.bmp\}Set Text Property}{\v idh_set_text_property}{\field{\*\fldinst 
 macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 6964685f7365745f746578745f70726f7065727479}}}{\fldrslt }}{\field{\*\fldinst {\cf1 
 macrobutton NextField }}{\fldrslt }}\cell \pard \intbl \row \pard \sa144\intbl {\uldb\cf11 \{bml bitmaps\\i_bndi.bmp\}Get Primary Server}{\v idh_get_primary_server}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 
macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 6964685f6765745f7072696d6172795f736572766572}}}{\fldrslt }}{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}\cell {\uldb\cf11 \{bml bitmaps\\i_bndu.bmp
\}Set Time Property}{\v idh_set_time_property}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 
6964685f7365745f74696d655f70726f7065727479}}}{\fldrslt }}{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}\cell \pard \intbl \row \pard \sa144\intbl {\uldb\cf11 \{bml bitmaps\\i_bndh.bmp\}Get Property Info}{\v idh_get_property_info}
{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 6964685f6765745f70726f70657274795f696e666f}}}{\fldrslt }}{\field{\*\fldinst {
\cf1  macrobutton NextField }}{\fldrslt }}\cell {\uldb\cf11 \{bml bitmaps\\i_vpas.bmp\}Verify Password}{\v idh_verify_password}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}
{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 6964785f7665726966795f70617373776f7264}}}{\fldrslt }}{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}\cell \pard \intbl \row \pard \sa144\intbl {\uldb\cf11 \{bml bitmaps\\i_bndm.bmp\}
Get Table Property}{\v idh_get_table_property}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 
6964685f6765745f7461626c655f70726f7065727479}}}{\fldrslt }}{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}\cell {\uldb\cf11 \{bml bitmaps\\i_bndz.bmp\}Who Am I ?}{\v idh_who_am_i}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}
{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 6964685f77686f5f616d5f69}}}{\fldrslt }}{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}\cell \pard \intbl \row \pard 
\sa144\intbl {\uldb\cf11 \{bml bitmaps\\i_bndn.bmp\}Get Text Property}{\v idh_get_text_property}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{
\cf1 {\*\datafield 6964685f6765745f746578745f70726f7065727479}}}{\fldrslt }}{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}\cell \cell \pard \intbl \row \trowd \trqc\trgaph108\trleft-108 \cellx2772\cellx5652 \pard \sa144\intbl {\uldb\cf11 
\{bml bitmaps\\i_bndo.bmp\}Get Time Property}{\v idh_get_time_property}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 
6964685f6765745f74696d655f70726f7065727479}}}{\fldrslt }}{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}\cell \cell \pard \intbl \row \pard \ri20 
\par \pard\plain \s27\li360\sa100 \f5\fs20 {\uldb\cf11 Archive Bindery}{\v idh_archive_bindery}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\uldb\cf11 
\par Change Object Security}{\v idh_change_obj_security}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 
6964685f6368616e67655f6f626a5f7365637572697479}}}{\fldrslt }}{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}{\cf1 
\par }{\uldb\cf11 Change Password}{\v idh_change_password}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 
6964785f6368616e67655f70617373776f7264}}}{\fldrslt }}{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}{\cf1 
\par }{\uldb\cf11 Change Property Security}{\v idh_change_prop_security}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 
6964685f6368616e67655f70726f705f7365637572697479}}}{\fldrslt }}{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}{\cf1 
\par }{\uldb\cf11 Clear Property}{\v idh_clear_property}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 
6964685f636c6561725f70726f7065727479}}}{\fldrslt }}{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}
\par {\uldb\cf11 Close Bindery}{\v idh_close_bindery}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 
6964785f636c6f73655f62696e64657279}}}{\fldrslt }}{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}
\par {\uldb\cf11 Create Object}{\v idh_create_object}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 
6964785f6372656174655f6f626a656374}}}{\fldrslt }}{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}
\par {\uldb\cf11 Create Property}{\v idh_create_property}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 
6964785f6372656174655f70726f7065727479}}}{\fldrslt }}{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}
\par {\uldb\cf11 Delete Object}{\v idh_delete_object}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 
6964785f64656c6574655f6f626a656374}}}{\fldrslt }}{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}
\par {\uldb\cf11 Delete Property}{\v idh_delete_property}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 
6964785f64656c6574655f70726f7065727479}}}{\fldrslt }}{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}{\cf1 
\par }{\uldb\cf11 Get Date / Time Property}{\v idh_get_date_time_property}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 
6964685f6765745f646174655f74696d655f70726f7065727479}}}{\fldrslt }}{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}{\cf1 
\par }{\uldb\cf11 Get Net Address Property}{\v idh_get_net_addr_property}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 
6964685f6765745f6e65745f616464725f70726f7065727479}}}{\fldrslt }}{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}{\cf1 
\par }{\uldb\cf11 Get Number Property}{\v idh_get_number_property}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 
6964685f6765745f6e756d6265725f70726f7065727479}}}{\fldrslt }}{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}{\cf1 
\par }{\uldb\cf11 Get Object Info}{\v idh_get_object_info}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 
6964685f6765745f6f626a6563745f696e666f}}}{\fldrslt }}{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}{\cf1 
\par }{\uldb\cf11 Get Primary Server}{\v idh_get_primary_server}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 
6964685f6765745f7072696d6172795f736572766572}}}{\fldrslt }}{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}{\cf1 
\par }{\uldb\cf11 Get Property Info}{\v idh_get_property_info}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 
6964685f6765745f70726f70657274795f696e666f}}}{\fldrslt }}{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}{\cf1 
\par }{\uldb\cf11 Get Table Property}{\v idh_get_table_property}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 
6964685f6765745f7461626c655f70726f7065727479}}}{\fldrslt }}{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}{\cf1 
\par }{\uldb\cf11 Get Text Property}{\v idh_get_text_property}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 
6964685f6765745f746578745f70726f7065727479}}}{\fldrslt }}{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}{\cf1 
\par }{\uldb\cf11 Get Time Property}{\v idh_get_time_property}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 
6964685f6765745f74696d655f70726f7065727479}}}{\fldrslt }}{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}{\cf1 
\par }{\uldb\cf11 Is Emulation ?}{\v idh_is_emulation}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 
6964685f69735f656d756c6174696f6e}}}{\fldrslt }}{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}{\cf1 
\par }{\uldb\cf11 List Object Types}{\v idh_list_obj_types}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 
6964685f6c6973745f6f626a5f7479706573}}}{\fldrslt }}{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}
\par {\uldb\cf11 List Objects}{\v idh_list_objects}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 
6964785f6c6973745f6f626a65637473}}}{\fldrslt }}{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}
\par {\uldb\cf11 List Properties}{\v idh_list_properties}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 
6964785f6c6973745f70726f70657274696573}}}{\fldrslt }}{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}{\cf1 
\par }{\uldb\cf11 Object Exists ?}{\v idh_object_exists}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 
6964685f6f626a6563745f657869737473}}}{\fldrslt }}{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}
\par {\uldb\cf11 Open Bindery}{\v idh_open_bindery}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 
6964785f6f70656e5f62696e64657279}}}{\fldrslt }}{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}{\cf1 
\par }{\uldb\cf11 Property Supports Type ?}{\v idh_property_supports_type}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 
6964685f70726f70657274795f737570706f7274735f74797065}}}{\fldrslt }}{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}{\cf1 
\par }{\uldb\cf11 Rename Object}{\v idh_rename_object}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 
6964785f72656e616d655f6f626a656374}}}{\fldrslt }}{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}{\cf1 
\par }{\uldb\cf11 Restore Bindery}{\v idh_restore_bindery}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\uldb\cf11 
\par Set Date / Time Property}{\v idh_set_date_time_property}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 
6964685f7365745f646174655f74696d655f70726f7065727479}}}{\fldrslt }}{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}{\cf1 
\par }{\uldb\cf11 Set Net Address Property}{\v idh_set_net_addr_property}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 
6964685f7365745f6e65745f616464725f70726f7065727479}}}{\fldrslt }}{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}{\cf1 
\par }{\uldb\cf11 Set Number Property}{\v idh_set_number_property}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 
6964685f7365745f6e756d6265725f70726f7065727479}}}{\fldrslt }}{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}{\cf1 
\par }{\uldb\cf11 Set Table Property}{\v idh_set_table_property}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 
6964685f7365745f7461626c655f70726f7065727479}}}{\fldrslt }}{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}{\cf1 
\par }{\uldb\cf11 Set Text Property}{\v idh_set_text_property}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 
6964685f7365745f746578745f70726f7065727479}}}{\fldrslt }}{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}{\cf1 
\par }{\uldb\cf11 Set Time Property}{\v idh_set_time_property}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 
6964685f7365745f74696d655f70726f7065727479}}}{\fldrslt }}{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}{\cf1 
\par }{\uldb\cf11 Verify Password}{\v idh_verify_password}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 
6964785f7665726966795f70617373776f7264}}}{\fldrslt }}{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}{\cf1 
\par }{\uldb\cf11 Who Am I ?}{\v idh_who_am_i}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 6964685f77686f5f616d5f69}}
}{\fldrslt }}{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}
\par \pard\plain \s18\ri14\keepn \b\f5\cf6 \page {\cs16\fs16\up6 {\*\bkmkstart idh_change_obj_security}{\*\bkmkstart idh_archive_bindery}{\*\bkmkend idh_change_obj_security}{\*\bkmkend idh_archive_bindery}#{\footnote \pard\plain \s17\ri20 \f5\fs20 {
\cs16\fs16\up6 #} idh_archive_bindery}} {\cs16\fs16\up6 ${\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 $} Archive Bindery}} {\cs16\fs16\up6 +{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 +} brws3:0000}} {\cs16\fs16\up6 K{\footnote 
\pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 K} Archive Bindery}} {\cs16\fs16\up6 !{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 !} EB(`btn_up'); CBB(`btn_up', `JI(`', `idh_contents')')}} Archive Bindery
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 Archives the NetWare Bindery files to the specified directory.
\par {\cf5 \{bml bitmaps\\f_bndb.bmp\}}{\cf1  }
\par {\b Usage
\par }\pard\plain \s43\li540\ri20\sb120\sa120 \f5\fs20 The 'Server Name' field in the 'NW Bindery' {\uldb\cf11 object editing dialog}{\v idh_obj_edit_dlg_help}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 
macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 6964685f6f626a5f656469745f646c675f68656c70}}}{\fldrslt }}{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}
 must be specified for this function to succeed.  This function will not default to use the current primary server.
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Inputs
\par }\pard\plain \s33\fi-360\li900\ri20\sb120\sa120\tx900 \f5\fs20 1.\tab "Bindery"  An 'NW Bindery' object specifying the NetWare Bindery to manipulate. This input is MANDATORY.
\par 2.\tab "Dest Path "  A 'Text' object specifying the directory specification of where to store the NetWare Bindery system files. This input is MANDATORY.
\par 3.\tab "Confirm Flag"  A 'Flag' object which, if set, will result in a confirmation dialog to be displayed t the user before the archive operation occurs. This input is OPTIONAL.
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Outputs
\par }\pard\plain \s33\fi-360\li900\ri20\sb120\sa120\tx900 \f5\fs20 None
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Flows (Return Codes)
\par }\pard\plain \s34\fi-3067\li3614\ri14\sb60\sa60\tx990\tx3600 \f5\fs20 1.\tab Archived
\par 2.\tab Locked\tab The specified NetWare Bindery is currently locked and cannot be archived.
\par 3.\tab No rights\tab The current user must be Supervisor or equivalent for this operation to succeed.
\par 4.\tab Not supported\tab Archiving and restoring the NetWare Bindery system files are not supported for NetWare servers which use Bindery emulation.
\par 5.\tab No server\tab No specific NetWare server name was associated in the 'NW Bindery' ALM's object editing dialog.  This function will not default to use the current primary server.
\par 6.\tab Error
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Notes
\par }\pard\plain \s43\li540\ri20\sb120\sa120 \f5\fs20 The NetWare Bindery system files which are archived by this routine can be restored by calling the function {\uldb\cf11 Restore Bindery}{\v idh_restore_bindery}{\field{\*\fldinst  macrobutton NextField 
}{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 6964685f726573746f72655f62696e64657279}}}{\fldrslt }}{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}.

\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Test Cases
\par }\pard\plain \s44\fi-450\li990\ri14\sb60\sa60\tx990\tx3060 \f5\fs20 1.\tab Execute function when no NetWare DLLs are available.  The 'Error' flow should be returned.
\par 2.\tab Execute the function when the NetWare DLLs (NWCALLS.DLL especially) are available, but no network is present. The 'Error' flow should be returned.
\par 3.\tab Execute the function when the NetWare DLLs (NWCALLS.DLL especially) are available and a network is available, but no logged in connection exists. The 'Error' flow should be returned.
\par 4.\tab ???
\par \pard\plain \s18\ri14\keepn \b\f5\cf6 \page {\cs16\fs16\up6 #{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 #} idh_change_obj_security}} {\cs16\fs16\up6 ${\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 $} Change Object Security}} {
\cs16\fs16\up6 +{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 +} brws3:0010}} {\cs16\fs16\up6 K{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 K} Change Object Security}} {\cs16\fs16\up6 !{\footnote \pard\plain \s17\ri20 \f5\fs20 {
\cs16\fs16\up6 !} EB(`btn_up'); CBB(`btn_up', `JI(`', `idh_contents')')}} Change Object Security
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 Changes the security values associated with the specified NetWare Bindery object.
\par {\cf5 \{bml bitmaps\\f_bndy.bmp\}}{\cf1  }
\par {\b Usage
\par }\pard\plain \s43\li540\ri20\sb120\sa120 \f5\fs20 The 'Server Name' field in the 'NW Bindery' {\uldb\cf11 object editing dialog}{\v idh_obj_edit_dlg_help}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 
macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 6964685f6f626a5f656469745f646c675f68656c70}}}{\fldrslt }}{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }} must be 
specified for this function to succeed.  This function will not default to use the current primary server.
\par \pard\plain \s33\li540\ri20\sb120\sa120\tx540 \f5\fs20 The following are valid values for the "Rd Security" and "Wrt Security" input parameters, with case being insignificant:
\par \pard \s33\fi-1800\li2880\ri14\sb60\sa60\tx2880 {\b String\tab Meaning}
\par Anyone\tab Access is allowed to all clients, even if the client has not logged in to the server.
\par Logged\tab Access is allowed to all clients logged in to the server.
\par Object\tab Access is allowed only to clients who have logged in to the server with the object's name, type, and password.
\par Supervisor\tab Access is allowed only to clients who have logged in to the server as SUPERVISOR, or as a Bindery object that is security-equivalent to SUPERVISOR.
\par NetWare\tab Access is allowed only to NetWare.
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Inputs
\par }\pard\plain \s33\fi-360\li900\ri20\sb120\sa120\tx900 \f5\fs20 1.\tab "Bindery"  An 'NW Bindery' object specifying the NetWare Bindery to manipulate. This input is MANDATORY.
\par 2.\tab "Rd Security"  A 'Text' object which contains the new value for the read security object flags for the specified NetWare Bindery object.  This input is OPTIONAL.  If this parameter is n
ot specified, the existing read security value will be maintained, even if the write security value is changed.
\par 3.\tab 
"Wrt Security"  A 'Text' object which contains the new value for the write security object flags for the specified NetWare Bindery object.  This input is OPTIONAL. If this parameter is not specified, the existing write security value will be maintained
, even if the read security value is changed.
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Outputs
\par }\pard\plain \s33\fi-360\li900\ri20\sb120\sa120\tx900 \f5\fs20 None
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Flows (Return Codes)
\par }\pard\plain \s34\fi-3067\li3614\ri14\sb60\sa60\tx990\tx3600 \f5\fs20 1.\tab Changed
\par 2.\tab No privilege\tab The current user has insufficient rights to change the specified Bindery object property security flags.  The current user must be SUPERVISOR or equivalent for this function to be successful.
\par 3.\tab No such object
\par 4.\tab Error
\par ??? Invalid read security\tab An invalid value was specified for the read security parameter.
\par ??? Invalid write security \tab An invalid value was specified for the write security parameter.
\par ??? Invalid object name\tab A object name with an invalid format has been specified.  The object name may contain wildcard characters or other invalid characters.
\par ??? Invalid object type\tab An invalid object type name has been specified.  A possible cause is the use of the 'All' or '*' type name when wildcards are not allowed.
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Notes
\par }\pard\plain \s43\li540\ri20\sb120\sa120 \f5\fs20 TBD
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Test Cases
\par }\pard\plain \s44\fi-450\li990\ri14\sb60\sa60\tx990\tx3060 \f5\fs20 1.\tab Execute function when no NetWare DLLs are available.  The 'Error' flow should be returned.
\par 2.\tab Execute the function when the NetWare DLLs (NWCALLS.DLL especially) are available, but no network is present. The 'Error' flow should be returned.
\par 3.\tab Execute the function when the NetWare DLLs (NWCALLS.DLL especially) are available and a network is available, but no logged in connection exists. The 'Error' flow should be returned.
\par 4.\tab ???
\par \pard\plain \s18\ri14\keepn \b\f5\cf6 \page {\cs16\fs16\up6 {\*\bkmkstart idx_change_password}{\*\bkmkend idx_change_password}#{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 #} idh_change_password}} {\cs16\fs16\up6 ${\footnote \pard\plain 
\s17\ri20 \f5\fs20 {\cs16\fs16\up6 $} Change Password}} {\cs16\fs16\up6 +{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 +} brws3:0020}} {\cs16\fs16\up6 K{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 K} Change Password}} {
\cs16\fs16\up6 !{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 !} EB(`btn_up'); CBB(`btn_up', `JI(`', `idh_contents')')}} Change Password
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 Changes the password for the specified NetWare Bindery object.
\par {\cf5 \{bml bitmaps\\f_cpas.bmp\}}{\cf1  }
\par {\b Usage
\par }\pard\plain \s43\li540\ri20\sb120\sa120 \f5\fs20 TBD
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Inputs
\par }\pard\plain \s33\fi-360\li900\ri20\sb120\sa120\tx900 \f5\fs20 1.\tab "Bindery"  An 'NW Bindery' object specifying the NetWare Bindery to manipulate. The Object Name and Object Type values are obtained from this NW Bindery object. This input is MANDATORY.

\par 2.\tab "Old Pwd"  A 'Text' object containing the old password. This input is MANDATORY.  This parameter could be optional and have a specific flow displayed if the current user is not a Supervisor equivalent which makes this parameter required.
\par 3.\tab "New Pwd"  A 'Text' object containing the new password. This input is MANDATORY.
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Outputs
\par }\pard\plain \s33\fi-360\li900\ri20\sb120\sa120\tx900 \f5\fs20 None
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Flows (Return Codes)
\par }\pard\plain \s34\fi-3067\li3614\ri14\sb60\sa60\tx990\tx3600 \f5\fs20 1.\tab Changed
\par 2.\tab No such object
\par 3.\tab Invalid pwd fmt
\par 4.\tab Wrong current pwd
\par 5.\tab No rights\tab The current user has insufficient rights to change the specified Bindery object's password.
\par 6.\tab Error
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Notes
\par }\pard\plain \s43\li540\ri20\sb120\sa120 \f5\fs20 The underlying NetWare API used (N
WChangeObjectPassword( )) does not require the old password to be known.  For users without Supervisor equivalence, the Bindery ALM will first make a call to the NetWare API NWVerifyObjectPassword( ) to verify that the old password is correct before allow
ing the password to be changed.  For users with Supervisor equivalence, the value of 'Old Password' will be ignored.
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Test Cases
\par }\pard\plain \s44\fi-450\li990\ri14\sb60\sa60\tx990\tx3060 \f5\fs20 1.\tab Execute function when no NetWare DLLs are available.  The 'Error' flow should be returned.
\par 2.\tab Execute the function when the NetWare DLLs (NWCALLS.DLL especially) are available, but no network is present. The 'Error' flow should be returned.
\par 3.\tab Execute the function when the NetWare DLLs (NWCALLS.DLL especially) are available and a network is available, but no logged in connection exists. The 'Error' flow should be returned.
\par 4.\tab ???
\par \pard\plain \s18\ri14\keepn \b\f5\cf6 \page {\cs16\fs16\up6 {\*\bkmkstart idh_change_prop_security}{\*\bkmkend idh_change_prop_security}#{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 #} idh_change_prop_security}} {\cs16\fs16\up6 ${\footnote 
\pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 $} Change Property Security}} {\cs16\fs16\up6 +{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 +} brws3:0030}} {\cs16\fs16\up6 K{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 K}
 Change Property Security}} {\cs16\fs16\up6 !{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 !} EB(`btn_up'); CBB(`btn_up', `JI(`', `idh_contents')')}} Change Property Security
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 Changes the security values associated with the specified property of a NetWare Bindery object.
\par {\cf5 \{bml bitmaps\\f_bndx.bmp\}}{\cf1  }
\par {\b Usage
\par }\pard\plain \s33\li540\ri20\sb120\sa120\tx540 \f5\fs20 The following are valid values for the "Rd Security" and "Wrt Security" input parameters, with case being insignificant:
\par \pard \s33\fi-1800\li2880\ri14\sb60\sa60\tx2880 {\b String\tab Meaning}
\par Anyone\tab Access is allowed to all clients, even if the client has not logged in to the server.
\par Logged\tab Access is allowed to all clients logged in to the server.
\par Object\tab Access is allowed only to clients who have logged in to the server with the object's name, type, and password.
\par Supervisor\tab Access is allowed only to clients who have logged in to the server as SUPERVISOR, or as a Bindery object that is security-equivalent to SUPERVISOR.
\par NetWare\tab Access is allowed only to NetWare.
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Inputs
\par }\pard\plain \s33\fi-360\li900\ri20\sb120\sa120\tx900 \f5\fs20 1.\tab "Bindery"  An 'NW Bindery' object specifying the NetWare Bindery to manipulate. This input is MANDATORY.
\par 2.\tab "Property Name"  A 'Text' object which contains the NetWare Bindery property name to create.  The property name can be specified in either the Bindery name or local (translated) name.  Refer to the {\uldb\cf11 Object Properties}{\v 
idh_object_prop_xlat}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 6964685f6f626a6563745f70726f705f786c6174}}}{\fldrslt }}
{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }} section of this document for further information on the two naming formats. This input is MANDATORY.
\par 3.\tab 
"Rd Security"  A 'Text' object which contains the new value for the read security object property flags for the specified property of a NetWare Bindery object.  This input is OPTIONAL.  If this parameter is not specified, the existing read security val
ue will be maintained, even if the write security value is changed.
\par 4.\tab "Wrt Security"  A 'Text' object which contains the new value for the write security object prop
erty flags for the specified property of a NetWare Bindery object.  This input is OPTIONAL.  If this parameter is not specified, the existing write security value will be maintained, even if the read security value is changed.
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Outputs
\par }\pard\plain \s33\fi-360\li900\ri20\sb120\sa120\tx900 \f5\fs20 None
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Flows (Return Codes)
\par }\pard\plain \s34\fi-3067\li3614\ri14\sb60\sa60\tx990\tx3600 \f5\fs20 1.\tab Changed
\par 2.\tab No rights\tab The current user has insufficient rights to change the specified Bindery object property security flags.
\par 3.\tab No such object
\par 4.\tab No such property
\par 5.\tab Invalid property\tab The specified property name is invalid.  The property name contains wildcard characters or other invalid characters.
\par 6.\tab Error
\par ??? Invalid read security\tab An invalid value was specified for the read security parameter.
\par ??? Invalid write security \tab An invalid value was specified for the write security parameter.
\par ??? Invalid object name\tab A object name with an invalid format has been specified.  The object name may contain wildcard characters or other invalid characters.
\par ??? Invalid object type\tab An invalid object type name has been specified.  A possible cause is the use of the 'All' or '*' type name when wildcards are not allowed.
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Notes
\par }\pard\plain \s43\li540\ri20\sb120\sa120 \f5\fs20 TBD
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Test Cases
\par }\pard\plain \s44\fi-450\li990\ri14\sb60\sa60\tx990\tx3060 \f5\fs20 1.\tab Execute function when no NetWare DLLs are available.  The 'Error' flow should be returned.
\par 2.\tab Execute the function when the NetWare DLLs (NWCALLS.DLL especially) are available, but no network is present. The 'Error' flow should be returned.
\par 3.\tab Execute the function when the NetWare DLLs (NWCALLS.DLL especially) are available and a network is available, but no logged in connection exists. The 'Error' flow should be returned.
\par 4.\tab ???
\par \pard\plain \s18\ri14\keepn \b\f5\cf6 \page {\cs16\fs16\up6 {\*\bkmkstart idh_clear_property}{\*\bkmkend idh_clear_property}#{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 #} idh_clear_property}} {\cs16\fs16\up6 ${\footnote \pard\plain 
\s17\ri20 \f5\fs20 {\cs16\fs16\up6 $} Clear Property}} {\cs16\fs16\up6 +{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 +} brws3:0040}} {\cs16\fs16\up6 K{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 K} Clear Property}} {
\cs16\fs16\up6 !{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 !} EB(`btn_up'); CBB(`btn_up', `JI(`', `idh_contents')')}} Clear Property
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 Clears all values from the specified property of a NetWare Bindery object.
\par {\cf5 \{bml bitmaps\\f_bndd.bmp\}}{\cf1  }
\par {\b Usage
\par }\pard\plain \s43\li540\ri20\sb120\sa120 \f5\fs20 TBD
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Inputs
\par }\pard\plain \s33\fi-360\li900\ri20\sb120\sa120\tx900 \f5\fs20 1.\tab "Bindery"  An 'NW Bindery' object specifying the NetWare Bindery to manipulate. This input is MANDATORY.
\par 2.\tab "Property Name"  A 'Text' object which contains the NetWare Bindery property name to create.  The property name can be specified in either the Bindery name or local (translated) name.  Refer to the {\uldb\cf11 Object Properties}{\v 
idh_object_prop_xlat}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 6964685f6f626a6563745f70726f705f786c6174}}}{\fldrslt }}
{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }} section of this document for further information on the two naming formats. This input is MANDATORY.
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Outputs
\par }\pard\plain \s33\fi-360\li900\ri20\sb120\sa120\tx900 \f5\fs20 None
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Flows (Return Codes)
\par }\pard\plain \s34\fi-3067\li3614\ri14\sb60\sa60\tx990\tx3600 \f5\fs20 1.\tab Cleared
\par 2.\tab No rights\tab The current user must be Supervisor or equivalent for this operation to succeed.
\par 3.\tab No such object
\par 4.\tab No such property
\par 5.\tab Invalid property\tab 
\par 6.\tab Error
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Notes
\par }\pard\plain \s43\li540\ri20\sb120\sa120 \f5\fs20 The specified property is not deleted, only the value of the property is cleared.  To actually remove the property, call the {\uldb\cf11 Delete Property}{\v idh_delete_property}{\field{\*\fldinst 
 macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 6964685f64656c6574655f70726f7065727479}}}{\fldrslt }}{\field{\*\fldinst {\cf1 
 macrobutton NextField }}{\fldrslt }} function.
\par ??? should the property name input parameter allow the use of wildcard characters ???
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Test Cases
\par }\pard\plain \s44\fi-450\li990\ri14\sb60\sa60\tx990\tx3060 \f5\fs20 1.\tab Execute function when no NetWare DLLs are available.  The 'Error' flow should be returned.
\par 2.\tab Execute the function when the NetWare DLLs (NWCALLS.DLL especially) are available, but no network is present. The 'Error' flow should be returned.
\par 3.\tab Execute the function when the NetWare DLLs (NWCALLS.DLL especially) are available and a network is available, but no logged in connection exists. The 'Error' flow should be returned.
\par 4.\tab ???
\par \pard\plain \s18\ri14\keepn \b\f5\cf6 \page {\cs16\fs16\up6 {\*\bkmkstart idx_close_bindery}{\*\bkmkend idx_close_bindery}#{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 #} idh_close_bindery}} {\cs16\fs16\up6 ${\footnote \pard\plain \s17\ri20 
\f5\fs20 {\cs16\fs16\up6 $} Close Bindery}} {\cs16\fs16\up6 +{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 +} brws3:0050}} {\cs16\fs16\up6 K{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 K} Close Bindery}} {\cs16\fs16\up6 !
{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 !} EB(`btn_up'); CBB(`btn_up', `JI(`', `idh_contents')')}} Close Bindery
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 Closes the NetWare Bindery so that the Bindery data files can be archived.
\par {\cf5 \{bml bitmaps\\f_clse.bmp\}}{\cf1  }
\par {\b Usage
\par }\pard\plain \s43\li540\ri20\sb120\sa120 \f5\fs20 The 'Server Name' field in the 'NW Bindery' {\uldb\cf11 object editing dialog}{\v idh_obj_edit_dlg_help}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 
macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 6964685f6f626a5f656469745f646c675f68656c70}}}{\fldrslt }}{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}
 must be specified for this function to succeed.  This function will not default to use the current primary server.
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Inputs
\par }\pard\plain \s33\fi-360\li900\ri20\sb120\sa120\tx900 \f5\fs20 1.\tab "Bindery"  An 'NW Bindery' object specifying the NetWare Bindery to manipulate. This input is MANDATORY.
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Outputs
\par }\pard\plain \s33\fi-360\li900\ri20\sb120\sa120\tx900 \f5\fs20 None
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Flows (Return Codes)
\par }\pard\plain \s34\fi-3067\li3614\ri14\sb60\sa60\tx990\tx3600 \f5\fs20 1.\tab Closed
\par 2.\tab Locked\tab The specified NetWare Bindery is currently locked and cannot be closed.
\par 3.\tab No rights\tab The current user must be Supervisor or equivalent for this operation to succeed.
\par 4.\tab Not supported\tab Opening and closing the Bindery is not supported for NetWare servers which use Bindery emulation.
\par 5.\tab No server\tab No specific NetWare servername was associated in the 'NW Bindery' ALM's object editing dialog.  This function will not default to use the current primary server.
\par 6.\tab Error
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Notes
\par }\pard\plain \s43\li540\ri20\sb120\sa120 \f5\fs20 The 'Close Bindery' and '{\uldb\cf11 Open Bindery}{\v idh_open_bindery}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}
{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 6964785f6f70656e5f62696e64657279}}}{\fldrslt }}{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}
' functions may not need to be exposed as Visual AppBuilder functions.  These functions are only available to users with Supervisor equivalence and are not supported by NetWare version 4.x se
rvers which use Bindery emulation.  The only real purpose of these functions is to allow the two (NetWare v2.x) or three (NetWare v3.x) system files which store the NetWare Bindery information to be archived.
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Test Cases
\par }\pard\plain \s44\fi-450\li990\ri14\sb60\sa60\tx990\tx3060 \f5\fs20 1.\tab Execute function when no NetWare DLLs are available.  The 'Error' flow should be returned.
\par 2.\tab Execute the function when the NetWare DLLs (NWCALLS.DLL especially) are available, but no network is present. The 'Error' flow should be returned.
\par 3.\tab Execute the function when the NetWare DLLs (NWCALLS.DLL especially) are available and a network is available, but no logged in connection exists. The 'Error' flow should be returned.
\par 4.\tab ???
\par \pard\plain \s18\ri14\keepn \b\f5\cf6 \page {\cs16\fs16\up6 {\*\bkmkstart idx_create_object}{\*\bkmkend idx_create_object}#{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 #} idh_create_object}} {\cs16\fs16\up6 ${\footnote \pard\plain \s17\ri20 
\f5\fs20 {\cs16\fs16\up6 $} Create Object}} {\cs16\fs16\up6 +{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 +} brws3:0060}} {\cs16\fs16\up6 K{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 K} Create Object}} {\cs16\fs16\up6 !
{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 !} EB(`btn_up'); CBB(`btn_up', `JI(`', `idh_contents')')}} Create Object
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 Creates a new NetWare Bindery object.
\par {\cf5 \{bml bitmaps\\f_crob.bmp\}}{\cf1  }
\par {\b Usage
\par }\pard\plain \s43\li540\ri20\sb120\sa120 \f5\fs20 The 'Server Name' field in the 'NW Bindery' {\uldb\cf11 object editing dialog}{\v idh_obj_edit_dlg_help}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 
macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 6964685f6f626a5f656469745f646c675f68656c70}}}{\fldrslt }}{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}
 must be specified for this function to succeed.  This function will not default to use the current primary server.
\par \pard\plain \s33\li540\ri20\sb120\sa120\tx540 \f5\fs20 The following are valid values for the "Rd Security" and "Wrt Security" input parameters, with case being insignificant:
\par \pard \s33\fi-1800\li2880\ri14\sb60\sa60\tx2880 {\b String\tab Meaning}
\par Anyone\tab Access is allowed to all clients, even if the client has not logged in to the server.
\par Logged\tab Access is allowed to all clients logged in to the server.
\par Object\tab Access is allowed only to clients who have logged in to the server with the object's name, type, and password.
\par Supervisor\tab Access is allowed only to clients who have logged in to the server as SUPERVISOR, or as a Bindery object that is security-equivalent to SUPERVISOR.
\par NetWare\tab Access is allowed only to NetWare.
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Inputs
\par }\pard\plain \s33\fi-360\li900\ri20\sb120\sa120\tx900 \f5\fs20 1.\tab "Bindery"  An 'NW Bindery' object specifying the NetWare Bindery to manipulate. The Object Name and Object Type values are obtained from this NW Bindery object. This input is MANDATORY.

\par 2.\tab "Dynamic"  A 'Flag' object to indicate whether the new Bindery object should be static or dynamic. A static object will always be present in the NetWare Bindery, while a dynamic object will disap
pear from the Bindery if the NetWare server is rebooted.  This parameter is OPTIONAL, with the object created as a static object if this parameter is not specified.
\par 3.\tab 
"Rd Security"  A 'Text' object which contains the new value for the read security object flags for the specified NetWare Bindery object.  This input is OPTIONAL.  If this parameter is not specified, the read security value will default to ???.  <--- th
e value will need to be different, depending on the object type
\par 4.\tab "Wrt Security"  A 'Text' 
object which contains the new value for the write security object flags for the specified NetWare Bindery object.  This input is OPTIONAL. If this parameter is not specified, the write security value will default to ???. <--- the value will need to be dif
ferent, depending on the object type
\par 5.\tab "Home Dir"  A 'Flag' object which, if set, specifies that a home directory should be created for the new object if t is of type 'User'.  This input is OPTIONAL.  User objects created by this function by default do NOT
 create the corresponding home directory.
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Outputs
\par }\pard\plain \s33\fi-360\li900\ri20\sb120\sa120\tx900 \f5\fs20 None
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Flows (Return Codes)
\par }\pard\plain \s34\fi-3067\li3614\ri14\sb60\sa60\tx990\tx3600 \f5\fs20 1.\tab Created
\par 2.\tab Object exists\tab The specified Bindery object already exists.
\par 3.\tab No create rights\tab The current user must be Supervisor or equivalent for this operation to succeed.
\par 4.\tab Invalid object name\tab The specified object name is empty or contains invalid characters.
\par 5.\tab Invalid object type\tab The specified object type is invalid.
\par 6.\tab Error
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Notes
\par }\pard\plain \s43\li540\ri20\sb120\sa120 \f5\fs20 There are some special processing that needs to be performed when creating certain types of obje
cts.  When creating a User object, a password property needs to be created, along with special processing to create a home directory and mail directory if desired and assign the default rights to those directories.
\par ??? could possibly output the Bindery object ID of the created object ???
\par ??? need to provide additional details about how the home directory path is derived ???
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Test Cases
\par }\pard\plain \s44\fi-450\li990\ri14\sb60\sa60\tx990\tx3060 \f5\fs20 1.\tab Execute function when no NetWare DLLs are available.  The 'Error' flow should be returned.
\par 2.\tab Execute the function when the NetWare DLLs (NWCALLS.DLL especially) are available, but no network is present. The 'Error' flow should be returned.
\par 3.\tab Execute the function when the NetWare DLLs (NWCALLS.DLL especially) are available and a network is available, but no logged in connection exists. The 'Error' flow should be returned.
\par 4.\tab ???
\par \pard\plain \s18\ri14\keepn \b\f5\cf6 \page {\cs16\fs16\up6 {\*\bkmkstart idx_create_property}{\*\bkmkend idx_create_property}#{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 #} idh_create_property}} {\cs16\fs16\up6 ${\footnote \pard\plain 
\s17\ri20 \f5\fs20 {\cs16\fs16\up6 $} Create Property}} {\cs16\fs16\up6 +{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 +} brws3:0070}} {\cs16\fs16\up6 K{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 K} Create Property}} {
\cs16\fs16\up6 !{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 !} EB(`btn_up'); CBB(`btn_up', `JI(`', `idh_contents')')}} Create Property
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 Creates a new property (attribute) to be associated with the specified NetWare Bindery object.
\par {\cf5 \{bml bitmaps\\f_crpr.bmp\}}{\cf1  }
\par {\b Usage
\par }\pard\plain \s33\li540\ri20\sb120\sa120\tx540 \f5\fs20 The following are valid values for the "Rd Security" and "Write Security" input parameters, with case being insignificant:
\par \pard \s33\fi-1800\li2880\ri14\sb60\sa60\tx2880 {\b String\tab Meaning}
\par Anyone\tab Access is allowed to all clients, even if the client has not logged in to the server.
\par Logged\tab Access is allowed to all clients logged in to the server.
\par Object\tab Access is allowed only to clients who have logged in to the server with the object's name, type, and password.
\par Supervisor\tab Access is allowed only to clients who have logged in to the server as SUPERVISOR, or as a Bindery object that is security-equivalent to SUPERVISOR.
\par NetWare\tab Access is allowed only to NetWare.
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Inputs
\par }\pard\plain \s33\fi-360\li900\ri20\sb120\sa120\tx900 \f5\fs20 1.\tab "Bindery"  An 'NW Bindery' object specifying the NetWare Bindery to manipulate. The Object Name and Object Type values are obtained from this NW Bindery object. This input is MANDATORY.

\par 2.\tab "Property Name"  A 'Text' object which contains the NetWare Bindery property name to create.  The property name can be specified in either the Bindery name or local (translated) name.  Refer to the {\uldb\cf11 Object Properties}{\v 
idh_object_prop_xlat}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 6964685f6f626a6563745f70726f705f786c6174}}}{\fldrslt }}
{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }} section of this document for further information on the two naming formats. This input is MANDATORY.
\par 3.\tab 
"Dynamic"  A 'Flag' object which, if set, indicates that the new Bindery object should be a dynamic property. A static object property will always be present in the NetWare Bindery, while a dynamic object property will disappear from the Bindery if the
 NetWare server is rebooted.  This parameter is OPTIONAL, with the object created as a static object if this parameter is not specified.
\par 4.\tab 
"Rd Security"  A 'Text' object which contains the new value for the read security property flags for the specified NetWare Bindery object property.  This input is OPTIONAL.  If this parameter is not specified, the read security value will default to ??
?. <--- the value will need to be different, depending on the property
\par 5.\tab "Wrt Security"  A 'Text' object which contains the new value for the write security property flags for the specified NetWare Bindery o
bject property.  This input is OPTIONAL. If this parameter is not specified, the write security value will default to ???. <--- the value will need to be different, depending on the property
\par 6.\tab 
"Is Set"  A 'Flag' object to indicate whether the new Bindery object property should be created as a set or item property. A set property contains a list of Bindery object Ids, while an item property contains raw data. This parameter is OPTIONAL, with 
the object property created as an item property if this parameter is not specified.
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Outputs
\par }\pard\plain \s33\fi-360\li900\ri20\sb120\sa120\tx900 \f5\fs20 None
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Flows (Return Codes)
\par }\pard\plain \s34\fi-3067\li3614\ri14\sb60\sa60\tx990\tx3600 \f5\fs20 1.\tab Created
\par 2.\tab Property exists
\par 3.\tab No create privilege
\par 4.\tab No such object
\par 5.\tab Error
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Notes
\par }\pard\plain \s43\li540\ri20\sb120\sa120 \f5\fs20 
This function creates a new property and associates it with the specified NetWare Bindery object, but the property contains no data until one or more calls to the various 'Set ... Property' functions is called.
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Test Cases
\par }\pard\plain \s44\fi-450\li990\ri14\sb60\sa60\tx990\tx3060 \f5\fs20 1.\tab Execute function when no NetWare DLLs are available.  The 'Error' flow should be returned.
\par 2.\tab Execute the function when the NetWare DLLs (NWCALLS.DLL especially) are available, but no network is present. The 'Error' flow should be returned.
\par 3.\tab Execute the function when the NetWare DLLs (NWCALLS.DLL especially) are available and a network is available, but no logged in connection exists. The 'Error' flow should be returned.
\par 4.\tab ???
\par \pard\plain \s18\ri14\keepn \b\f5\cf6 \page {\cs16\fs16\up6 {\*\bkmkstart idx_delete_object}{\*\bkmkend idx_delete_object}#{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 #} idh_delete_object}} {\cs16\fs16\up6 ${\footnote \pard\plain \s17\ri20 
\f5\fs20 {\cs16\fs16\up6 $} Delete Object}} {\cs16\fs16\up6 +{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 +} brws3:0080}} {\cs16\fs16\up6 K{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 K} Delete Object}} {\cs16\fs16\up6 !
{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 !} EB(`btn_up'); CBB(`btn_up', `JI(`', `idh_contents')')}} Delete Object
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 Deletes the specified object from the NetWare Bindery.
\par {\cf5 \{bml bitmaps\\f_deob.bmp\}}{\cf1  }
\par {\b Usage
\par }\pard\plain \s43\li540\ri20\sb120\sa120 \f5\fs20 The 'Server Name' field in the 'NW Bindery' {\uldb\cf11 object editing dialog}{\v idh_obj_edit_dlg_help}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 ma
crobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 6964685f6f626a5f656469745f646c675f68656c70}}}{\fldrslt }}{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}
 must be specified for this function to succeed.  This function will not default to use the current primary server.
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Inputs
\par }\pard\plain \s33\fi-360\li900\ri20\sb120\sa120\tx900 \f5\fs20 1.\tab "Bindery"  An 'NW Bindery' object specifying the NetWare Bindery to manipulate. The Object Name and Object Type values are obtained from this NW Bindery object. This input is MANDATORY.

\par 2.\tab "Confirm Delete"  A 'Flag object which, if set, specifies that a dialog should be presented to the user to verify that the object is to be deleted.  This input is OPTIONAL, which no dialog being displayed if the parameter is not specified.
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Outputs
\par }\pard\plain \s33\fi-360\li900\ri20\sb120\sa120\tx900 \f5\fs20 None
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Flows (Return Codes)
\par }\pard\plain \s34\fi-3067\li3614\ri14\sb60\sa60\tx990\tx3600 \f5\fs20 1.\tab Deleted
\par 2.\tab Wild card not allowed
\par 3.\tab No privilege\tab The current user must be SUPERVISOR or equivalent for this function to succeed.
\par 4.\tab No such object
\par 5.\tab Object active\tab The specified NetWare Bindery object is in use (i.e. logged in user) and cannot be deleted at this time.
\par 6.\tab Error
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Notes
\par }\pard\plain \s43\li540\ri20\sb120\sa120 \f5\fs20 TBD
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Test Cases
\par }\pard\plain \s44\fi-450\li990\ri14\sb60\sa60\tx990\tx3060 \f5\fs20 1.\tab Execute function when no NetWare DLLs are available.  The 'Error' flow should be returned.
\par 2.\tab Execute the function when the NetWare DLLs (NWCALLS.DLL especially) are available, but no network is present. The 'Error' flow should be returned.
\par 3.\tab Execute the function when the NetWare DLLs (NWCALLS.DLL especially) are available and a network is available, but no logged in connection exists. The 'Error' flow should be returned.
\par 4.\tab ???
\par \pard\plain \s18\ri14\keepn \b\f5\cf6 \page {\cs16\fs16\up6 {\*\bkmkstart idx_delete_property}{\*\bkmkend idx_delete_property}#{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 #} idh_delete_property}} {\cs16\fs16\up6 ${\footnote \pard\plain 
\s17\ri20 \f5\fs20 {\cs16\fs16\up6 $} Delete Property}} {\cs16\fs16\up6 +{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 +} brws3:0090}} {\cs16\fs16\up6 K{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 K} Delete Property}} {
\cs16\fs16\up6 !{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 !} EB(`btn_up'); CBB(`btn_up', `JI(`', `idh_contents')')}} Delete Property
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 Deletes the specified property from a NetWare Bindery object.
\par {\cf5 \{bml bitmaps\\f_depr.bmp\}}{\cf1  }
\par {\b Usage
\par }\pard\plain \s43\li540\ri20\sb120\sa120 \f5\fs20 The 'Server Name' field in the 'NW Bindery' {\uldb\cf11 object editing dialog}{\v idh_obj_edit_dlg_help}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 
macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 6964685f6f626a5f656469745f646c675f68656c70}}}{\fldrslt }}{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}
 must be specified for this function to succeed.  This function will not default to use the current primary server.
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Inputs
\par }\pard\plain \s33\fi-360\li900\ri20\sb120\sa120\tx900 \f5\fs20 1.\tab "Bindery"  An 'NW Bindery' object specifying the NetWare Bindery to manipulate. The Object Name and Object Type values are obtained from this NW Bindery object. This input is MANDATORY.

\par 2.\tab "Property Name"  A 'Text' object which contains the name of the NetWare Bindery property to delete.  The property name can be specified in either the Bindery name or local (translated) name.  Refer to the {\uldb\cf11 Object Properties}{\v 
idh_object_prop_xlat}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 6964685f6f626a6563745f70726f705f786c6174}}}{\fldrslt }}
{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }} section of this document for further information on the two naming formats. The property name may contain the wildcard characters '*' and '?'.  This input is MANDATORY.
\par 3.\tab "Confirm Delete"  A 'Flag object which, if set, specifies that a dialog should be presented to the user to verify that the property is to be deleted.  This input is OPTIONAL, which no dialog being displayed if the parameter is not specified.
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Outputs
\par }\pard\plain \s33\fi-360\li900\ri20\sb120\sa120\tx900 \f5\fs20 None
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Flows (Return Codes)
\par }\pard\plain \s34\fi-3067\li3614\ri14\sb60\sa60\tx990\tx3600 \f5\fs20 1.\tab Deleted
\par 2.\tab No such property
\par 3.\tab No such object
\par 4.\tab No rights\tab The current user must have write access to the Bindery object and the property for this function to succeed.
\par 5.\tab Error
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Notes
\par }\pard\plain \s43\li540\ri20\sb120\sa120 \f5\fs20 TBD
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Test Cases
\par }\pard\plain \s44\fi-450\li990\ri14\sb60\sa60\tx990\tx3060 \f5\fs20 1.\tab Execute function when no NetWare DLLs are available.  The 'Error' flow should be returned.
\par 2.\tab Execute the function when the NetWare DLLs (NWCALLS.DLL especially) are available, but no network is present. The 'Error' flow should be returned.
\par 3.\tab Execute the function when the NetWare DLLs (NWCALLS.DLL especially) are available and a network is available, but no logged in connection exists. The 'Error' flow should be returned.
\par 4.\tab ???
\par \pard\plain \s18\ri14\keepn \b\f5\cf6 \page {\cs16\fs16\up6 {\*\bkmkstart idh_get_date_time_property}{\*\bkmkend idh_get_date_time_property}#{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 #} idh_get_date_time_property}} {\cs16\fs16\up6 $
{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 $} Get Date / Time Property}} {\cs16\fs16\up6 +{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 +} brws3:0100}} {\cs16\fs16\up6 K{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 K
} Get Date / Time Property}} {\cs16\fs16\up6 !{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 !} EB(`btn_up'); CBB(`btn_up', `JI(`', `idh_contents')')}} Get Date / Time Property
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 Retrieves the value(s) of the specified date / time property (attribute) associated with a NetWare Bindery object.
\par {\cf5 \{bml bitmaps\\f_bndj.bmp\}}{\cf1  }
\par {\b Usage
\par }\pard\plain \s43\li540\ri20\sb120\sa120 \f5\fs20 TBD
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Inputs
\par }\pard\plain \s33\fi-360\li900\ri20\sb120\sa120\tx900 \f5\fs20 1.\tab "Bindery"  An 'NW Bindery' object specifying the NetWare Bindery to manipulate. The Object Name and Object Type values are obtained from this NW Bindery object. This input is MANDATORY.

\par 2.\tab "Property Name"  A 'Text' object which contains the NetWare Bindery property name to retrieve.  The property name can be specified in either the Bindery name or local (translated) name.  Refer to the {\uldb\cf11 Object Properties}{\v 
idh_object_prop_xlat}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 6964685f6f626a6563745f70726f705f786c6174}}}{\fldrslt }}
{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }} section of this document for further information on the two naming formats. The property name specified should not contain the '*' and '?' wildcard characters. This input is MANDATORY.
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Outputs
\par }\pard\plain \s33\fi-360\li900\ri20\sb120\sa120\tx900 \f5\fs20 1.\tab "Date Value"  A 'Date' object to contain the date portion of the date / time property.  This output is OPTIONAL.
\par 2.\tab "Time Value"  A 'Time' object to contain the time portion of the date / time property.  This output is OPTIONAL.
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Flows (Return Codes)
\par }\pard\plain \s34\fi-3067\li3614\ri14\sb60\sa60\tx990\tx3600 \f5\fs20 1.\tab Retrieved
\par 2.\tab No such object
\par 3.\tab No such property
\par 4.\tab Wrong data type\tab The specified property is not of data type date / time.
\par 5.\tab Error
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Notes
\par }\pard\plain \s43\li540\ri20\sb120\sa120 \f5\fs20 
Unlike the NDS ALM, the intent is to have the various 'Get ... Property' commands retrieve the data directly from the NetWare Bindery. The NDS ALM buffers the various property data in the NDS Data object's data blocks when the 'Read Object' NDS ALM functi
on is called.
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Test Cases
\par }\pard\plain \s44\fi-450\li990\ri14\sb60\sa60\tx990\tx3060 \f5\fs20 1.\tab Execute function when no NetWare DLLs are available.  The 'Error' flow should be returned.
\par 2.\tab Execute the function when the NetWare DLLs (NWCALLS.DLL especially) are available, but no network is present. The 'Error' flow should be returned.
\par 3.\tab Execute the function when the NetWare DLLs (NWCALLS.DLL especially) are available and a network is available, but no logged in connection exists. The 'Error' flow should be returned.
\par 4.\tab ???
\par \pard\plain \s18\ri14\keepn \b\f5\cf6 \page {\cs16\fs16\up6 {\*\bkmkstart idh_get_net_addr_property}{\*\bkmkend idh_get_net_addr_property}#{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 #} idh_get_net_addr_property}} {\cs16\fs16\up6 $
{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 $} Get Net Address Property}} {\cs16\fs16\up6 +{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 +} brws3:0110}} {\cs16\fs16\up6 K{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 K
} Get Net Address Property}} {\cs16\fs16\up6 !{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 !} EB(`btn_up'); CBB(`btn_up', `JI(`', `idh_contents')')}} Get Net Address Property
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 Retrieves the value(s) of the specified network address property (attribute) associated with a NetWare Bindery object.
\par {\cf5 \{bml bitmaps\\f_bndk.bmp\}}{\cf1  }
\par {\b Usage
\par }\pard\plain \s43\li540\ri20\sb120\sa120 \f5\fs20 TBD
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Inputs
\par }\pard\plain \s33\fi-360\li900\ri20\sb120\sa120\tx900 \f5\fs20 1.\tab "Bindery"  An 'NW Bindery' object specifying the NetWare Bindery to manipulate. The Object Name and Object Type values are obtained from this NW Bindery object. This input is MANDATORY.

\par 2.\tab "Property Name"  A 'Text' object which contains the NetWare Bindery property name to retrieve.  The property name can be specified in either the Bindery name or local (translated) name.  Refer to the {\uldb\cf11 Object Properties}{\v 
idh_object_prop_xlat}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 6964685f6f626a6563745f70726f705f786c6174}}}{\fldrslt }}
{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }} section of this document for further information on the two naming formats. The property name specified should not contain the '*' and '?' wildcard characters. This input is MANDATORY.
\par 3.\tab "Adjust Columns"  A 'Flag' object which, is set, will allow the function to modify the number of columns in the output 'Table' object as required.  This input is OPTIONAL.
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Outputs
\par }\pard\plain \s33\fi-360\li900\ri20\sb120\sa120\tx900 \f5\fs20 1.\tab "Property Tbl"  A 'Table' object to contain the list of network addresses associated with the specified property.  This output is MANDATORY.
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Flows (Return Codes)
\par }\pard\plain \s34\fi-3067\li3614\ri14\sb60\sa60\tx990\tx3600 \f5\fs20 1.\tab Retrieved
\par 2.\tab No such object
\par 3.\tab No such property
\par 4.\tab Wrong data type\tab The specified property is not of data type network address.
\par 5.\tab Error
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Notes
\par }\pard\plain \s43\li540\ri20\sb120\sa120 \f5\fs20 
Unlike the NDS ALM, the intent is to have the various 'Get ... Property' commands retrieve the data directly from the NetWare Bindery. The NDS ALM buffers the various property data in the NDS Data object's data blocks when the 'Read Object' NDS ALM functi
on is called.
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Test Cases
\par }\pard\plain \s44\fi-450\li990\ri14\sb60\sa60\tx990\tx3060 \f5\fs20 1.\tab Execute function when no NetWare DLLs are available.  The 'Error' flow should be returned.
\par 2.\tab Execute the function when the NetWare DLLs (NWCALLS.DLL especially) are available, but no network is present. The 'Error' flow should be returned.
\par 3.\tab Execute the function when the NetWare DLLs (NWCALLS.DLL especially) are available and a network is available, but no logged in connection exists. The 'Error' flow should be returned.
\par 4.\tab ???
\par \pard\plain \s18\ri14\keepn \b\f5\cf6 \page {\cs16\fs16\up6 {\*\bkmkstart idh_get_number_property}{\*\bkmkend idh_get_number_property}#{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 #} idh_get_number_property}} {\cs16\fs16\up6 ${\footnote 
\pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 $} Get Number Property}} {\cs16\fs16\up6 +{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 +} brws3:0120}} {\cs16\fs16\up6 K{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 K}
 Get Number Property}} {\cs16\fs16\up6 !{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 !} EB(`btn_up'); CBB(`btn_up', `JI(`', `idh_contents')')}} Get Number Property
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 Retrieves the value(s) of the specified number property (attribute) associated with a NetWare Bindery object.
\par {\cf5 \{bml bitmaps\\f_bndl.bmp\}}{\cf1  }
\par {\b Usage
\par }\pard\plain \s43\li540\ri20\sb120\sa120 \f5\fs20 TBD
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Inputs
\par }\pard\plain \s33\fi-360\li900\ri20\sb120\sa120\tx900 \f5\fs20 1.\tab "Bindery"  An 'NW Bindery' object specifying the NetWare Bindery to manipulate. The Object Name and Object Type values are obtained from this NW Bindery object. This input is MANDATORY.

\par 2.\tab "Property Name"  A 'Text' object which contains the NetWare Bindery property name to retrieve.  The property name can be specified in either the Bindery name or local (translated) name.  Refer to the {\uldb\cf11 Object Properties}{\v 
idh_object_prop_xlat}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 6964685f6f626a6563745f70726f705f786c6174}}}{\fldrslt }}
{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }} section of this document for further information on the two naming formats. The property name specified should not contain the '*' and '?' wildcard characters. This input is MANDATORY.
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Outputs
\par }\pard\plain \s33\fi-360\li900\ri20\sb120\sa120\tx900 \f5\fs20 1.\tab "Number"  A 'Number' object to contain the desired property value.  This output is MANDATORY.
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Flows (Return Codes)
\par }\pard\plain \s34\fi-3067\li3614\ri14\sb60\sa60\tx990\tx3600 \f5\fs20 1.\tab Retrieved
\par 2.\tab No such object
\par 3.\tab No such property
\par 4.\tab Wrong data type\tab The specified property is not of data type 'Number'.
\par 5.\tab Error
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Notes
\par }\pard\plain \s43\li540\ri20\sb120\sa120 \f5\fs20 Unlike the NDS ALM, the 
intent is to have the various 'Get ... Property' commands to retrieve the data directly from the NetWare Bindery. The NDS ALM buffers the various property data in the NDS Data object's data blocks when the 'Read Object' NDS ALM function is called.
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Test Cases
\par }\pard\plain \s44\fi-450\li990\ri14\sb60\sa60\tx990\tx3060 \f5\fs20 1.\tab Execute function when no NetWare DLLs are available.  The 'Error' flow should be returned.
\par 2.\tab Execute the function when the NetWare DLLs (NWCALLS.DLL especially) are available, but no network is present. The 'Error' flow should be returned.
\par 3.\tab Execute the function when the NetWare DLLs (NWCALLS.DLL especially) are available and a network is available, but no logged in connection exists. The 'Error' flow should be returned.
\par 4.\tab ???
\par \pard\plain \s18\ri14\keepn \b\f5\cf6 \page {\cs16\fs16\up6 {\*\bkmkstart idh_get_object_info}{\*\bkmkend idh_get_object_info}#{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 #} idh_get_object_info}} {\cs16\fs16\up6 ${\footnote \pard\plain 
\s17\ri20 \f5\fs20 {\cs16\fs16\up6 $} Get Object Info}} {\cs16\fs16\up6 +{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 +} brws3:0130}} {\cs16\fs16\up6 K{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 K} Get Object Info}} {
\cs16\fs16\up6 !{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 !} EB(`btn_up'); CBB(`btn_up', `JI(`', `idh_contents')')}} Get Object Info
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 Retrieves detailed information about the specified object in the NetWare Bindery.
\par {\cf5 \{bml bitmaps\\f_bndg.bmp\}}{\cf1  }
\par {\b Usage
\par }\pard\plain \s33\li540\ri20\sb120\sa120\tx540 \f5\fs20 The following are valid values for the "Rd Security" and "Wrt Security" output parameters, with case being insignificant:
\par \pard \s33\fi-1800\li2880\ri14\sb60\sa60\tx2880 Anyone\tab Access is allowed to all clients, even if the client has not logged in to the server.
\par Logged\tab Access is allowed to all clients logged in to the server.
\par Object\tab Access is allowed only to clients who have logged in to the server with the object's name, type, and password.
\par Supervisor\tab Access is allowed only to clients who have logged in to the server as SUPERVISOR, or as a Bindery object that is security-equivalent to SUPERVISOR.
\par NetWare\tab Access is allowed only to NetWare.
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Inputs
\par }\pard\plain \s33\fi-360\li900\ri20\sb120\sa120\tx900 \f5\fs20 1.\tab "Bindery"  An 'NW Bindery' object specifying the NetWare Bindery to manipulate. The Objec
t Name and Object Type values are obtained from this NW Bindery object. The Object Name value should not contain the wildcard characters '*' and '?'. This input is MANDATORY.
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Outputs
\par }\pard\plain \s33\fi-360\li900\ri20\sb120\sa120\tx900 \f5\fs20 ??? could also return Object Type, in case the specific object type was not specified  ???
\par 1.\tab "Object ID"  A 'Text' object to contain the Bindery ID for the specified Bindery object.  This output is OPTIONAL.
\par 2.\tab "Is Dynamic"  A 'Flag' object which, if set, indicates that the specified Bindery object is dynamic.  A static object
 will always be present in the NetWare Bindery, while a dynamic object will disappear from the Bindery if the NetWare server is rebooted.  This output is OPTIONAL.
\par 3.\tab "Rd Security"  A 'Text' object to contain the specified Bindery object's read security flags.  This output is OPTIONAL.
\par 4.\tab "Wrt Security" A 'Text' object to contain the specified Bindery object's write security flags.  This output is OPTIONAL.
\par 5.\tab "Has Properties".  A 'Flag' object which, if set, indicates that there are properties (attributes) associated with the specified Bindery object. This output is OPTIONAL.
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Flows (Return Codes)
\par }\pard\plain \s34\fi-3067\li3614\ri14\sb60\sa60\tx990\tx3600 \f5\fs20 1.\tab Retrieved
\par 2.\tab No such object
\par 3.\tab Wildcards not allowed
\par 4.\tab Error
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Notes
\par }\pard\plain \s43\li540\ri20\sb120\sa120 \f5\fs20 TBD
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Test Cases
\par }\pard\plain \s44\fi-450\li990\ri14\sb60\sa60\tx990\tx3060 \f5\fs20 1.\tab Execute function when no NetWare DLLs are available.  The 'Error' flow should be returned.
\par 2.\tab Execute the function when the NetWare DLLs (NWCALLS.DLL especially) are available, but no network is present. The 'Error' flow should be returned.
\par 3.\tab Execute the function when the NetWare DLLs (NWCALLS.DLL especially) are available and a network is available, but no logged in connection exists. The 'Error' flow should be returned.
\par 4.\tab ???
\par \pard\plain \s18\ri14\keepn \b\f5\cf6 \page {\cs16\fs16\up6 {\*\bkmkstart idh_get_primary_server}{\*\bkmkend idh_get_primary_server}#{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 #} idh_get_primary_server}} {\cs16\fs16\up6 ${\footnote 
\pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 $} Get Primary Server}} {\cs16\fs16\up6 +{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 +} brws3:0140}} {\cs16\fs16\up6 K{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 K}
 Get Primary Server}} {\cs16\fs16\up6 !{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 !} EB(`btn_up'); CBB(`btn_up', `JI(`', `idh_contents')')}} Get Primary Server
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 Retrieves the name of the current primary NetWare server.
\par {\cf5 \{bml bitmaps\\f_bndi.bmp\}}{\cf1  }
\par {\b Usage
\par }\pard\plain \s43\li540\ri20\sb120\sa120 \f5\fs20 TBD
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Inputs
\par }\pard\plain \s33\fi-360\li900\ri20\sb120\sa120\tx900 \f5\fs20 1.\tab "Bindery"  An 'NW Bindery' object specifying the NetWare Bindery to manipulate.  This input is MANDATORY.
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Outputs
\par }\pard\plain \s33\fi-360\li900\ri20\sb120\sa120\tx900 \f5\fs20 1.\tab "Server Name"  A 'Text' object to contain the name of the NetWare server to which the workstations primary connection is attached.  This output is MANDATORY.
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Flows (Return Codes)
\par }\pard\plain \s34\fi-3067\li3614\ri14\sb60\sa60\tx990\tx3600 \f5\fs20 1.\tab Retrieved
\par 2.\tab No connection\tab No NetWare connection is present.
\par 3.\tab Error
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Notes
\par }\pard\plain \s43\li540\ri20\sb120\sa120 \f5\fs20 TBD
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Test Cases
\par }\pard\plain \s44\fi-450\li990\ri14\sb60\sa60\tx990\tx3060 \f5\fs20 1.\tab Execute function when no NetWare DLLs are available.  The 'Error' flow should be returned.
\par 2.\tab Execute the function when the NetWare DLLs (NWCALLS.DLL especially) are available, but no network is present. The 'Error' flow should be returned.
\par 3.\tab Execute the function when the NetWare DLLs (NWCALLS.DLL especially) are available and a network is available, but no logged in connection exists. The 'No connection' flow should be returned.
\par 4.\tab ???
\par \pard\plain \s18\ri14\keepn \b\f5\cf6 \page {\cs16\fs16\up6 {\*\bkmkstart idh_get_property_info}{\*\bkmkend idh_get_property_info}#{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 #} idh_get_property_info}} {\cs16\fs16\up6 ${\footnote 
\pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 $} Get Property Info}} {\cs16\fs16\up6 +{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 +} brws3:0150}} {\cs16\fs16\up6 K{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 K} Get
 Property Info}} {\cs16\fs16\up6 !{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 !} EB(`btn_up'); CBB(`btn_up', `JI(`', `idh_contents')')}} Get Property Info
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 Retrieves detailed information about the specified property (attribute) of a NetWare Bindery object.
\par {\cf5 \{bml bitmaps\\f_bndh.bmp\}}{\cf1  }
\par {\b Usage
\par }\pard\plain \s33\li540\ri20\sb120\sa120\tx540 \f5\fs20 The following are valid values for the "Rd Security" and "Wrt Security" output parameters, with case being insignificant:
\par \pard \s33\fi-1800\li2880\ri14\sb60\sa60\tx2880 Anyone\tab Access is allowed to all clients, even if the client has not logged in to the server.
\par Logged\tab Access is allowed to all clients logged in to the server.
\par Object\tab Access is allowed only to clients who have logged in to the server with the object's name, type, and password.
\par Supervisor\tab Access is allowed only to clients who have logged in to the server as SUPERVISOR, or as a Bindery object that is security-equivalent to SUPERVISOR.
\par NetWare\tab Access is allowed only to NetWare.
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Inputs
\par }\pard\plain \s33\fi-360\li900\ri20\sb120\sa120\tx900 \f5\fs20 1.\tab "Bindery"  An 'NW Bindery' object specifying the NetWare Bindery to manipulate. The Object Name and Object Type values are obtained from this NW Bindery object. This input is MANDATORY.

\par 2.\tab "Property Name"  A 'Text' object which contains the NetWare Bindery property name to retrieve.  The property name can be specified in either the Bindery name or local (translated) name.  Refer to the {\uldb\cf11 Object Properties}{\v 
idh_object_prop_xlat}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 6964685f6f626a6563745f70726f705f786c6174}}}{\fldrslt }}
{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }} section of this document for further information on the two naming formats.  The property name specified should not contain the '*' and '?' wildcard characters. This input is MANDATORY.
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Outputs
\par }\pard\plain \s33\fi-360\li900\ri20\sb120\sa120\tx900 \f5\fs20 1.\tab "Is D
ynamic"  A 'Flag' object which, if set, indicates that the specified property of the Bindery object is dynamic. A static object property will always be present in the NetWare Bindery, while a dynamic object will disappear from the Bindery if the NetWare s
erver is rebooted.  This output is OPTIONAL.
\par 2.\tab "Is Set"  A 'Flag' object which, if set, indicates that the specified Bindery object property contains a set of references to other Bindery objects as opposed to being an item property.  This output is OPTIONAL.
\par 3.\tab "Rd Security"  A 'Text' object to contain the specified Bindery object's read security flags.  This output is OPTIONAL.
\par 4.\tab "Wrt Security" A 'Text' object to contain the specified Bindery object's write security flags.  This output is OPTIONAL.
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Flows (Return Codes)
\par }\pard\plain \s34\fi-3067\li3614\ri14\sb60\sa60\tx990\tx3600 \f5\fs20 1.\tab Retrieved
\par 2.\tab No such object
\par 3.\tab No such property
\par 4.\tab No rights
\par 5.\tab Error
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Notes
\par }\pard\plain \s43\li540\ri20\sb120\sa120 \f5\fs20 TBD
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Test Cases
\par }\pard\plain \s44\fi-450\li990\ri14\sb60\sa60\tx990\tx3060 \f5\fs20 1.\tab Execute function when no NetWare DLLs are available.  The 'Error' flow should be returned.
\par 2.\tab Execute the function when the NetWare DLLs (NWCALLS.DLL especially) are available, but no network is present. The 'Error' flow should be returned.
\par 3.\tab Execute the function when the NetWare DLLs (NWCALLS.DLL especially) are available and a network is available, but no logged in connection exists. The 'Error' flow should be returned.
\par 4.\tab ???
\par \pard\plain \s18\ri14\keepn \b\f5\cf6 \page {\cs16\fs16\up6 {\*\bkmkstart idh_get_table_property}{\*\bkmkend idh_get_table_property}#{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 #} idh_get_table_property}} {\cs16\fs16\up6 ${\footnote 
\pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 $} Get Table Property}} {\cs16\fs16\up6 +{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 +} brws3:0160}} {\cs16\fs16\up6 K{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 K}
 Get Table Property}} {\cs16\fs16\up6 !{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 !} EB(`btn_up'); CBB(`btn_up', `JI(`', `idh_contents')')}} Get Table Property
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 Retrieves the value(s) of the specified table property (attribute) associated with a NetWare Bindery object.
\par {\cf5 \{bml bitmaps\\f_bndm.bmp\}}{\cf1  }
\par {\b Usage
\par }\pard\plain \s43\li540\ri20\sb120\sa120 \f5\fs20 TBD
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Inputs
\par }\pard\plain \s33\fi-360\li900\ri20\sb120\sa120\tx900 \f5\fs20 1.\tab "Bindery"  An 'NW Bindery' object specifying the NetWare Bindery to manipulate. The Object Name and Object Type values are obtained from this NW Bindery object. This input is MANDATORY.

\par 2.\tab " Property Name"  A 'Text' object which contains the NetWare Bindery property name to retrieve.  The property name can be specified in either the Bindery name or local (translated) name.  Refer to the {\uldb\cf11 Object Properties}{\v 
idh_object_prop_xlat}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 6964685f6f626a6563745f70726f705f786c6174}}}{\fldrslt }}
{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }} section of this document for further information on the two naming formats. The property name specified should not contain the '*' and '?' wildcard characters. This input is MANDATORY.
\par 3.\tab "Adjust Columns"  A 'Flag' object which, is set, will allow the function to modify the number of columns in the output 'Table' object as required.  This input is OPTIONAL.
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Outputs
\par }\pard\plain \s33\fi-360\li900\ri20\sb120\sa120\tx900 \f5\fs20 1.\tab " Property Tbl"  A 'Table' object to contain the list of all items in the specified property of a NetWare Bindery object.  This output is MANDATORY.
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Flows (Return Codes)
\par }\pard\plain \s34\fi-3067\li3614\ri14\sb60\sa60\tx990\tx3600 \f5\fs20 1.\tab Retrieved
\par 2.\tab No such object
\par 3.\tab No such property
\par 4.\tab Wrong data type\tab The specified property is not of data type 'Table'.
\par 5.\tab Error
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Notes
\par }\pard\plain \s43\li540\ri20\sb120\sa120 \f5\fs20 
Unlike the NDS ALM, the intent is to have the various 'Get ... Property' commands retrieve the data directly from the NetWare Bindery. The NDS ALM buffers the various property data in the NDS Data object's data blocks when the 'Read Object' NDS ALM functi
on is called.
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Test Cases
\par }\pard\plain \s44\fi-450\li990\ri14\sb60\sa60\tx990\tx3060 \f5\fs20 1.\tab Execute function when no NetWare DLLs are available.  The 'Error' flow should be returned.
\par 2.\tab Execute the function when the NetWare DLLs (NWCALLS.DLL especially) are available, but no network is present. The 'Error' flow should be returned.
\par 3.\tab Execute the function when the NetWare DLLs (NWCALLS.DLL especially) are available and a network is available, but no logged in connection exists. The 'Error' flow should be returned.
\par 4.\tab ???
\par \pard\plain \s18\ri14\keepn \b\f5\cf6 \page {\cs16\fs16\up6 {\*\bkmkstart idh_get_text_property}{\*\bkmkend idh_get_text_property}#{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 #} idh_get_text_property}} {\cs16\fs16\up6 ${\footnote 
\pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 $} Get Text Property}} {\cs16\fs16\up6 +{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 +} brws3:0170}} {\cs16\fs16\up6 K{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 K}
 Get Text Property}} {\cs16\fs16\up6 !{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 !} EB(`btn_up'); CBB(`btn_up', `JI(`', `idh_contents')')}} Get Text Property
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 Retrieves the value(s) of the specified text property (attribute) associated with a NetWare Bindery object.
\par {\cf5 \{bml bitmaps\\f_bndn.bmp\}}{\cf1  }
\par {\b Usage
\par }\pard\plain \s43\li540\ri20\sb120\sa120 \f5\fs20 TBD
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Inputs
\par }\pard\plain \s33\fi-360\li900\ri20\sb120\sa120\tx900 \f5\fs20 1.\tab "Bindery"  An 'NW Bindery' object specifying the NetWare Bindery to manipulate. The Object Name and Object Type values are obtained from this NW Bindery object. This input is MANDATORY.

\par 2.\tab " Property Name"  A 'Text' object which contains the NetWare Bindery property name to retrieve.  The property name can be specified in either the Bindery name or local (translated) name.  Refer to the {\uldb\cf11 Object Properties}{\v 
idh_object_prop_xlat}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 6964685f6f626a6563745f70726f705f786c6174}}}{\fldrslt }}
{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }} section of this document for further information on the two naming formats. The property name specified should not contain the '*' and '?' wildcard characters. This input is MANDATORY.
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Outputs
\par }\pard\plain \s33\fi-360\li900\ri20\sb120\sa120\tx900 \f5\fs20 1.\tab "Property Value"  A 'Text' object to contain the value for the specified property of a NetWare Bindery object.  This output is MANDATORY.
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Flows (Return Codes)
\par }\pard\plain \s34\fi-3067\li3614\ri14\sb60\sa60\tx990\tx3600 \f5\fs20 1.\tab Retrieved
\par 2.\tab No such object
\par 3.\tab No such property
\par 4.\tab Wrong data type\tab The specified property is not of data type 'Text'.
\par 5.\tab Error
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Notes
\par }\pard\plain \s43\li540\ri20\sb120\sa120 \f5\fs20 Unlike the N
DS ALM, the intent is to have the various 'Get ... Property' commands retrieve the data directly from the NetWare Bindery. The NDS ALM buffers the various property data in the NDS Data object's data blocks when the 'Read Object' NDS ALM function is called
.
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Test Cases
\par }\pard\plain \s44\fi-450\li990\ri14\sb60\sa60\tx990\tx3060 \f5\fs20 1.\tab Execute function when no NetWare DLLs are available.  The 'Error' flow should be returned.
\par 2.\tab Execute the function when the NetWare DLLs (NWCALLS.DLL especially) are available, but no network is present. The 'Error' flow should be returned.
\par 3.\tab Execute the function when the NetWare DLLs (NWCALLS.DLL especially) are available and a network is available, but no logged in connection exists. The 'Error' flow should be returned.
\par 4.\tab ???
\par \pard\plain \s18\ri14\keepn \b\f5\cf6 \page {\cs16\fs16\up6 {\*\bkmkstart idh_get_time_property}{\*\bkmkend idh_get_time_property}#{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 #} idh_get_time_property}} {\cs16\fs16\up6 ${\footnote 
\pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 $} Get Time Property}} {\cs16\fs16\up6 +{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 +} brws3:0180}} {\cs16\fs16\up6 K{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 K}
 Get Time Property}} {\cs16\fs16\up6 !{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 !} EB(`btn_up'); CBB(`btn_up', `JI(`', `idh_contents')')}} Get Time Property
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 Retrieves the value(s) of the specified time property (attribute) associated with a NetWare Bindery object.
\par {\cf5 \{bml bitmaps\\f_bndo.bmp\}}{\cf1  }
\par {\b Usage
\par }\pard\plain \s43\li540\ri20\sb120\sa120 \f5\fs20 TBD
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Inputs
\par }\pard\plain \s33\fi-360\li900\ri20\sb120\sa120\tx900 \f5\fs20 1.\tab "Bindery"  An 'NW Bindery' object specifying the NetWare Bindery to manipulate. The Object Name and Object Type values are obtained from this NW Bindery object. This input is MANDATORY.

\par 2.\tab "Property Name"  A 'Text' object which contains the NetWare Bindery property name to retrieve.  The property name can be specified in either the Bindery name or local (translated) name.  Refer to the {\uldb\cf11 Object Properties}{\v 
idh_object_prop_xlat}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 6964685f6f626a6563745f70726f705f786c6174}}}{\fldrslt }}
{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }} section of this document for further information on the two naming formats. The property name specified should not contain the '*' and '?' wildcard characters. This input is MANDATORY.
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Outputs
\par }\pard\plain \s33\fi-360\li900\ri20\sb120\sa120\tx900 \f5\fs20 1.\tab "Days"  A 'Number' object to contain the days component of the time value for the specified property of the NetWare Bindery object.  This input is OPTIONAL.
\par 2.\tab "Hours"  A 'Number' object to contain the hours component of the time value for the specified property of the NetWare Bindery object.  This input is OPTIONAL.
\par 3.\tab "Minutes"  A 'Number' object to contain the minutes component of the time value for the specified property of the NetWare Bindery object.  This input is OPTIONAL.
\par 4.\tab "Seconds"  A 'Number' object to contain the seconds component of the time value for the specified property of the NetWare Bindery object.  This input is OPTIONAL.
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Flows (Return Codes)
\par }\pard\plain \s34\fi-3067\li3614\ri14\sb60\sa60\tx990\tx3600 \f5\fs20 1.\tab Retrieved
\par 2.\tab No such object
\par 3.\tab No such property
\par 4.\tab Wrong data type\tab The specified property is not of data type 'Time'.
\par 5.\tab Error
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Notes
\par }\pard\plain \s43\li540\ri20\sb120\sa120 \f5\fs20 Unlike the NDS ALM, the intent is to have the various 'Get ... Property' commands retrieve the data directly from the NetWare Bindery. The NDS ALM buffers 
the various property data in the NDS Data object's data blocks when the 'Read Object' NDS ALM function is called.
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Test Cases
\par }\pard\plain \s44\fi-450\li990\ri14\sb60\sa60\tx990\tx3060 \f5\fs20 1.\tab Execute function when no NetWare DLLs are available.  The 'Error' flow should be returned.
\par 2.\tab Execute the function when the NetWare DLLs (NWCALLS.DLL especially) are available, but no network is present. The 'Error' flow should be returned.
\par 3.\tab Execute the function when the NetWare DLLs (NWCALLS.DLL especially) are available and a network is available, but no logged in connection exists. The 'Error' flow should be returned.
\par 4.\tab ???
\par \pard\plain \s18\ri14\keepn \b\f5\cf6 \page {\cs16\fs16\up6 {\*\bkmkstart idh_is_bind_emu}{\*\bkmkend idh_is_bind_emu}#{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 #} idh_is_emulation}} {\cs16\fs16\up6 ${\footnote \pard\plain \s17\ri20 
\f5\fs20 {\cs16\fs16\up6 $} Is Emulation ?}} {\cs16\fs16\up6 +{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 +} brws3:0200}} {\cs16\fs16\up6 K{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 K} Is Bindery Emulation ?}} {\cs16\fs16\up6 
!{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 !} EB(`btn_up'); CBB(`btn_up', `JI(`', `idh_contents')')}} Is Emulation ?
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 Determines if the specified Bindery resides on a NetWare server which is supporting the Bindery via Bindery emulation.
\par {\cf5 \{bml bitmaps\\f_bnda.bmp\}}{\cf1  }
\par {\b Usage
\par }\pard\plain \s43\li540\ri20\sb120\sa120 \f5\fs20 TBD
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Inputs
\par }\pard\plain \s33\fi-360\li900\ri20\sb120\sa120\tx900 \f5\fs20 1.\tab "Bindery"  An 'NW Bindery' object specifying the NetWare Bindery to manipulate.  This input is MANDATORY.
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Outputs
\par }\pard\plain \s33\fi-360\li900\ri20\sb120\sa120\tx900 \f5\fs20 None
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Flows (Return Codes)
\par }\pard\plain \s34\fi-3067\li3614\ri14\sb60\sa60\tx990\tx3600 \f5\fs20 1.\tab Not emulation
\par 2.\tab Is emulation
\par 3.\tab Error
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Notes
\par }\pard\plain \s43\li540\ri20\sb120\sa120 \f5\fs20 ??? should this function allow the 'Server Name' value in the NW Bindery object data to default to the current primary server ???
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Test Cases
\par }\pard\plain \s44\fi-450\li990\ri14\sb60\sa60\tx990\tx3060 \f5\fs20 1.\tab Execute function when no NetWare DLLs are available.  The 'Error' flow should be returned.
\par 2.\tab Execute the function when the NetWare DLLs (NWCALLS.DLL especially) are available, but no network is present. The 'Error' flow should be returned.
\par 3.\tab Execute the function when the NetWare DLLs (NWCALLS.DLL especially) are available and a network is available, but no logged in connection exists. The 'Error' flow should be returned.
\par 4.\tab ???
\par \pard\plain \s18\ri14\keepn \b\f5\cf6 \page {\cs16\fs16\up6 {\*\bkmkstart idh_list_obj_types}{\*\bkmkend idh_list_obj_types}#{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 #} idh_list_obj_types}} {\cs16\fs16\up6 ${\footnote \pard\plain 
\s17\ri20 \f5\fs20 {\cs16\fs16\up6 $} List Object Types}} {\cs16\fs16\up6 +{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 +} brws3:0210}} {\cs16\fs16\up6 K{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 K} List Object Types}} {
\cs16\fs16\up6 !{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 !} EB(`btn_up'); CBB(`btn_up', `JI(`', `idh_contents')')}} List Object Types
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 Lists the valid NetWare Bindery object types.
\par {\cf5 \{bml bitmaps\\f_bnde.bmp\}}{\cf1  }
\par {\b Usage
\par }\pard\plain \s43\li540\ri20\sb120\sa120 \f5\fs20 TBD
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Inputs
\par }\pard\plain \s33\fi-360\li900\ri20\sb120\sa120\tx900 \f5\fs20 1.\tab "Bindery"  An 'NW Bindery' object specifying the NetWare Bindery to manipulate.  This input is MANDATORY.
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Outputs
\par }\pard\plain \s33\fi-360\li900\ri20\sb120\sa120\tx900 \f5\fs20 1.\tab "Type List"  A 'Text' object to contain the list of all objects of the desired type.  This output is MANDATORY.  ??? could/should be a 'List' or 'Table' object ???
\par 2.\tab "Count"  A 'Number' object to contain the number of object types contained in the list.  This output is OPTIONAL.
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Flows (Return Codes)
\par }\pard\plain \s34\fi-3067\li3614\ri14\sb60\sa60\tx990\tx3600 \f5\fs20 1.\tab Listed
\par 2.\tab Error
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Notes
\par }\pard\plain \s43\li540\ri20\sb120\sa120 \f5\fs20 TBD
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Test Cases
\par }\pard\plain \s44\fi-450\li990\ri14\sb60\sa60\tx990\tx3060 \f5\fs20 1.\tab Execute function when no NetWare DLLs are available.  The 'Error' flow should be returned.
\par 2.\tab Execute the function when the NetWare DLLs (NWCALLS.DLL especially) are available, but no network is present. The 'Error' flow should be returned.
\par 3.\tab Execute the function when the NetWare DLLs (NWCALLS.DLL especially) are available and a network is available, but no logged in connection exists. The 'Error' flow should be returned.
\par 4.\tab ???
\par \pard\plain \s18\ri14\keepn \b\f5\cf6 \page {\cs16\fs16\up6 {\*\bkmkstart idx_list_objects}{\*\bkmkend idx_list_objects}#{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 #} idh_list_objects}} {\cs16\fs16\up6 ${\footnote \pard\plain \s17\ri20 
\f5\fs20 {\cs16\fs16\up6 $} List Objects}} {\cs16\fs16\up6 +{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 +} brws3:0220}} {\cs16\fs16\up6 K{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 K} List Objects}} {\cs16\fs16\up6 !{\footnote 
\pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 !} EB(`btn_up'); CBB(`btn_up', `JI(`', `idh_contents')')}} List Objects
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 Lists the NetWare Bindery objects which meet the current search (filter) criteria.
\par {\cf5 \{bml bitmaps\\f_liob.bmp\}}{\cf1  }
\par {\b Usage
\par }\pard\plain \s43\li540\ri20\sb120\sa120 \f5\fs20 TBD
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Inputs
\par }\pard\plain \s33\fi-360\li900\ri20\sb120\sa120\tx900 \f5\fs20 1.\tab 
"Bindery"  An 'NW Bindery' object specifying the NetWare Bindery to manipulate. The Object Name Filter and Object Type Filter values are obtained from this NW Bindery object.  This input is MANDATORY.
\par 2.\tab "Adjust Columns"  A 'Flag' object which, if set, allows this function to modify the number of columns in the destination 'Table' object.  This input is OPTIONAL, which the columns in the table not being adjusted if this parameter is not set.
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Outputs
\par }\pard\plain \s33\fi-360\li900\ri20\sb120\sa120\tx900 \f5\fs20 1.\tab "Object Tbl"  A 'Table' object to contain the list of all objects of the desired type.  This output is MANDATORY.
\par 2.\tab "Count"  A 'Number' object to contain the number of objects contained in the list.  This output is OPTIONAL.
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Flows (Return Codes)
\par }\pard\plain \s34\fi-3067\li3614\ri14\sb60\sa60\tx990\tx3600 \f5\fs20 1.\tab Listed
\par 2.\tab Invalid object name
\par 3.\tab Invalid object type
\par 4.\tab No such object
\par 5.\tab Error
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Notes
\par }\pard\plain \s43\li540\ri20\sb120\sa120 \f5\fs20 ??? explain use of Name and Type filter values from the NW Bindery object and the use of wildcard characters ???
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Test Cases
\par }\pard\plain \s44\fi-450\li990\ri14\sb60\sa60\tx990\tx3060 \f5\fs20 1.\tab Execute function when no NetWare DLLs are available.  The 'Error' flow should be returned.
\par 2.\tab Execute the function when the NetWare DLLs (NWCALLS.DLL especially) are available, but no network is present. The 'Error' flow should be returned.
\par 3.\tab Execute the function when the NetWare DLLs (NWCALLS.DLL especially) are available and a network is available, but no logged in connection exists. The 'Error' flow should be returned.
\par 4.\tab ???
\par \pard\plain \s18\ri14\keepn \b\f5\cf6 \page {\cs16\fs16\up6 {\*\bkmkstart idx_list_properties}{\*\bkmkend idx_list_properties}#{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 #} idh_list_properties}} {\cs16\fs16\up6 ${\footnote \pard\plain 
\s17\ri20 \f5\fs20 {\cs16\fs16\up6 $} List Properties}} {\cs16\fs16\up6 +{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 +} brws3:0230}} {\cs16\fs16\up6 K{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 K} List Properties}} {
\cs16\fs16\up6 !{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 !} EB(`btn_up'); CBB(`btn_up', `JI(`', `idh_contents')')}} List Properties
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 Lists the properties (attributes) associated with the specified NetWare Bindery object.
\par {\cf5 \{bml bitmaps\\f_lipr.bmp\}}{\cf1  }
\par {\b Usage
\par }\pard\plain \s43\li540\ri20\sb120\sa120 \f5\fs20 TBD
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Inputs
\par }\pard\plain \s33\fi-360\li900\ri20\sb120\sa120\tx900 \f5\fs20 1.\tab "Bindery"  An 'NW Bindery' object specifying the NetWare Bindery to manipulate. The Object Name and Object Type values are obtained from this NW Bindery object. This input is MANDATORY.

\par 2.\tab "Property Name"   A 'Text' object specifying the name of the property to list.  The value contained in the specified  object may contain the '*' and '?' wildcard characters.  This input is OPTIONAL, and defaults to 
"*" (list all properties) if no specified.
\par 3.\tab "Adjust Columns"  A 'Flag' object which, if set, allows this function to modify the number of columns in the destination 'Table' object.  This input is OPTIONAL, which the columns in the table not being adjusted if this parameter is not set.
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Outputs
\par }\pard\plain \s33\fi-360\li900\ri20\sb120\sa120\tx900 \f5\fs20 1.\tab "Property Tbl"   A 'Table' object to receive the list of properties.  This output is MANDATORY.
\par 2.\tab "Count"  A 'Number' object to contain the number of properties contained in the list.  This output is OPTIONAL.
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Flows (Return Codes)
\par }\pard\plain \s34\fi-3067\li3614\ri14\sb60\sa60\tx990\tx3600 \f5\fs20 1.\tab Listed
\par 2.\tab Invalid object name
\par 3.\tab Invalid property name
\par 4.\tab No such object
\par 5.\tab Error
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Notes
\par }\pard\plain \s43\li540\ri20\sb120\sa120 \f5\fs20 TBD
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Test Cases
\par }\pard\plain \s44\fi-450\li990\ri14\sb60\sa60\tx990\tx3060 \f5\fs20 1.\tab Execute function when no NetWare DLLs are available.  The 'Error' flow should be returned.
\par 2.\tab Execute the function when the NetWare DLLs (NWCALLS.DLL especially) are available, but no network is present. The 'Error' flow should be returned.
\par 3.\tab Execute the function when the NetWare DLLs (NWCALLS.DLL especially) are available and a network is available, but no logged in connection exists. The 'Error' flow should be returned.
\par 4.\tab ???
\par \pard\plain \s18\ri14\keepn \b\f5\cf6 \page {\cs16\fs16\up6 {\*\bkmkstart idh_object_exists}{\*\bkmkend idh_object_exists}#{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 #} idh_object_exists}} {\cs16\fs16\up6 ${\footnote \pard\plain \s17\ri20 
\f5\fs20 {\cs16\fs16\up6 $} Object Exists ?}} {\cs16\fs16\up6 +{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 +} brws3:0240}} {\cs16\fs16\up6 K{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 K} Object Exists ?}} {\cs16\fs16\up6 !
{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 !} EB(`btn_up'); CBB(`btn_up', `JI(`', `idh_contents')')}} Object Exists ?
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 Determines if the specified object exists in the NetWare Bindery.
\par {\cf5 \{bml bitmaps\\f_bndf.bmp\}}{\cf1  }
\par {\b Usage
\par }\pard\plain \s43\li540\ri20\sb120\sa120 \f5\fs20 TBD
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Inputs
\par }\pard\plain \s33\fi-360\li900\ri20\sb120\sa120\tx900 \f5\fs20 1.\tab "Bindery"  An 'NW Bindery' object specifying the NetWare Bindery to manipulate. The Object Name and Object Type values are obtained from this NW Bindery object. This input is MANDATORY.

\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Outputs
\par }\pard\plain \s33\fi-360\li900\ri20\sb120\sa120\tx900 \f5\fs20 None
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Flows (Return Codes)
\par }\pard\plain \s34\fi-3067\li3614\ri14\sb60\sa60\tx990\tx3600 \f5\fs20 1.\tab Exists
\par 2.\tab Not exist
\par 3.\tab Invalid object name
\par 4.\tab Invalid object type
\par 5.\tab Error
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Notes
\par }\pard\plain \s43\li540\ri20\sb120\sa120 \f5\fs20 ??? should object type be required ???
\par ??? could determine using the function {\uldb\cf11 Get Object Info}{\v idh_get_object_info}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 
{\*\datafield 6964685f6765745f6f626a6563745f696e666f}}}{\fldrslt }}{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }} so is this function really needed ???
\par ??? do we also need a 'Property Exists ?' function ???
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Test Cases
\par }\pard\plain \s44\fi-450\li990\ri14\sb60\sa60\tx990\tx3060 \f5\fs20 1.\tab Execute function when no NetWare DLLs are available.  The 'Error' flow should be returned.
\par 2.\tab Execute the function when the NetWare DLLs (NWCALLS.DLL especially) are available, but no network is present. The 'Error' flow should be returned.
\par 3.\tab Execute the function when the NetWare DLLs (NWCALLS.DLL especially) are available and a network is available, but no logged in connection exists. The 'Error' flow should be returned.
\par 4.\tab ???
\par \pard\plain \s18\ri14\keepn \b\f5\cf6 \page {\cs16\fs16\up6 {\*\bkmkstart idx_open_bindery}{\*\bkmkend idx_open_bindery}#{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 #} idh_open_bindery}} {\cs16\fs16\up6 ${\footnote \pard\plain \s17\ri20 
\f5\fs20 {\cs16\fs16\up6 $} Open Bindery}} {\cs16\fs16\up6 +{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 +} brws3:0250}} {\cs16\fs16\up6 K{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 K} Open Bindery}} {\cs16\fs16\up6 !{\footnote 
\pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 !} EB(`btn_up'); CBB(`btn_up', `JI(`', `idh_contents')')}} Open Bindery
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 Opens the NetWare Bindery.
\par {\cf5 \{bml bitmaps\\f_opbi.bmp\}}{\cf1  }
\par {\b Usage
\par }\pard\plain \s43\li540\ri20\sb120\sa120 \f5\fs20 The 'Server Name' field in the 'NW Bindery' {\uldb\cf11 object editing dialog}{\v idh_obj_edit_dlg_help}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 
macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 6964685f6f626a5f656469745f646c675f68656c70}}}{\fldrslt }}{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}
 must be specified for this function to succeed.  This function will not default to use the current primary server.
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Inputs
\par }\pard\plain \s33\fi-360\li900\ri20\sb120\sa120\tx900 \f5\fs20 1.\tab "Bindery"  An 'NW Bindery' object specifying the NetWare Bindery to manipulate. This input is MANDATORY.
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Outputs
\par }\pard\plain \s33\fi-360\li900\ri20\sb120\sa120\tx900 \f5\fs20 None
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Flows (Return Codes)
\par }\pard\plain \s34\fi-3067\li3614\ri14\sb60\sa60\tx990\tx3600 \f5\fs20 1.\tab Opened
\par 2.\tab No rights\tab The current user must be Supervisor or equivalent for this operation to succeed.
\par 3.\tab Not supported\tab Opening and closing the Bindery is not supported for NetWare servers which use Bindery emulation.
\par 4.\tab No server\tab No specific NetWare server name was associated in the 'NW Bindery' ALM's object editing dialog.  This function will not default to use the current primary server.
\par 5.\tab Error
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Notes
\par }\pard\plain \s43\li540\ri20\sb120\sa120 \f5\fs20 The '{\uldb\cf11 Close Bindery}{\v idh_close_bindery}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1 
 ADDIN }{\cf1 {\*\datafield 6964785f636c6f73655f62696e64657279}}}{\fldrslt }}{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}
' and 'Open Bindery' functions may not need to be exposed as Visual AppBuilder functions.  These functions are only available to users with Supervisor equivalence and are not supported by NetWare version 4.x servers which use Bindery emulation.  The only 
real purpose of these functions is to allow the two (NetWare v2.x) or three (NetWare v3.x) system files which store the NetWare Bindery information to be archived.
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Test Cases
\par }\pard\plain \s44\fi-450\li990\ri14\sb60\sa60\tx990\tx3060 \f5\fs20 1.\tab Execute function when no NetWare DLLs are available.  The 'Error' flow should be returned.
\par 2.\tab Execute the function when the NetWare DLLs (NWCALLS.DLL especially) are available, but no network is present. The 'Error' flow should be returned.
\par 3.\tab Execute the function when the NetWare DLLs (NWCALLS.DLL especially) are available and a network is available, but no logged in connection exists. The 'Error' flow should be returned.
\par 4.\tab ???
\par \pard\plain \s18\ri14\keepn \b\f5\cf6 \page {\cs16\fs16\up6 {\*\bkmkstart idh_property_supports_type}{\*\bkmkend idh_property_supports_type}#{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 #} idh_property_supports_type}} {\cs16\fs16\up6 $
{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 $} Property Supports Type ?}} {\cs16\fs16\up6 +{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 +} brws3:0260}} {\cs16\fs16\up6 K{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 K
} Property Supports Type ?}} {\cs16\fs16\up6 !{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 !} EB(`btn_up'); CBB(`btn_up', `JI(`', `idh_contents')')}} Property Supports Type ?
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 Determines if the specified Bindery object property associated with a specific Bindery object supports the specified data type.
\par \pard \s30\li360\ri20\sb120\sa120 {\cf5 \{bml bitmaps\\f_bndv.bmp\}}{\cf1  }
\par \pard \s30\li360\ri20\sb120\sa120 {\b Usage
\par }\pard\plain \s43\li540\ri20\sb120\sa120 \f5\fs20 TBD
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Inputs
\par }\pard\plain \s33\fi-360\li900\ri20\sb120\sa120\tx900 \f5\fs20 1.\tab "Bindery"  An 'NW Bindery' object specifying the NetWare Bindery to manipulate. The Object Name and Object Type values are obtained from this NW Bindery object. This input is MANDATORY.

\par 2.\tab "Prop Name"  A 'Text' object which contains the NetWare Bindery property name to set.  The property name can be specified in either the Bindery name or local (translated) name.  Refer to the {\uldb\cf11 Object Properties}{\v idh_object_prop_xlat}
{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 6964685f6f626a6563745f70726f705f786c6174}}}{\fldrslt }}{\field{\*\fldinst {
\cf1  macrobutton NextField }}{\fldrslt }} section of this document for further information on the two naming formats. The property name specified should not contain the '*' and '?' wildcard characters.  This input is MANDATORY.
\par \pard \s33\fi-360\li900\ri20\sb120\sa120\tx900 3.\tab "Data Type"   A 'Text' object containing t
he name of the data type to check if supported by the specified property.  Possible values for this parameter are 'Date and Time', 'Date / Time', 'Network Address', 'Net Addr', 'Number', Table', 'Text' and 'Time'  This input is MANDATORY.
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Outputs
\par }\pard\plain \s33\fi-360\li900\ri20\sb120\sa120\tx900 \f5\fs20 None
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Flows (Return Codes)
\par }\pard\plain \s34\fi-3067\li3614\ri14\sb60\sa60\tx990\tx3600 \f5\fs20 1.\tab Supported
\par \pard \s34\fi-3067\li3614\ri14\sb60\sa60\tx990\tx3600 2.\tab Not  supported
\par \pard \s34\fi-3067\li3614\ri14\sb60\sa60\tx990\tx3600 3.\tab Unknown\tab No information is available on the specified property as to the data types supported.
\par 4.\tab Invalid property name\tab The specified property name contains wildcard characters or other invalid characters.
\par \pard \s34\fi-3067\li3614\ri14\sb60\sa60\tx990\tx3600 5.\tab No such object
\par 6.\tab No such property
\par 7.\tab Error
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Notes
\par }\pard\plain \s43\li540\ri20\sb120\sa120 \f5\fs20 TBD
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Test Cases
\par }\pard\plain \s44\fi-450\li990\ri14\sb60\sa60\tx990\tx3060 \f5\fs20 1.\tab Execute function when no NetWare DLLs are available.  The 'Error' flow should be returned.
\par \pard \s44\fi-450\li990\ri14\sb60\sa60\tx990\tx3060 2.\tab Execute the function when the NetWare DLLs (NWCALLS.DLL especially) are available, but no network is present. The 'Error' flow should be returned.
\par 3.\tab Execute the function when the NetWare DLLs (NWCALLS.DLL especially) are available and a network is available, but no logged in connection exists. The 'Error' flow should be returned.
\par \pard \s44\fi-450\li990\ri14\sb60\sa60\tx990\tx3060 4.\tab ???
\par \pard\plain \s18\ri14\keepn \b\f5\cf6 {\*\bkmkstart idx_rename_object}{\*\bkmkend idx_rename_object}\page {\cs16\fs16\up6 #{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 #} idh_rename_object}} {\cs16\fs16\up6 ${\footnote \pard\plain \s17\ri20 
\f5\fs20 {\cs16\fs16\up6 $} Rename Object}} {\cs16\fs16\up6 +{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 +} brws3:0280}} {\cs16\fs16\up6 K{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 K} Rename Object}} {\cs16\fs16\up6 !
{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 !} EB(`btn_up'); CBB(`btn_up', `JI(`', `idh_contents')')}} Rename Object
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 Renames the specified object in the NetWare Bindery.
\par {\cf5 \{bml bitmaps\\f_reob.bmp\}}{\cf1  }
\par \pard \s30\li360\ri20\sb120\sa120 {\b Usage
\par }\pard\plain \s43\li540\ri20\sb120\sa120 \f5\fs20 The 'Server Name' field in the 'NW Bindery' {\uldb\cf11 object editing dialog}{\v idh_obj_edit_dlg_help}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 
macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 6964685f6f626a5f656469745f646c675f68656c70}}}{\fldrslt }}{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}
 must be specified for this function to succeed.  This function will not default to use the current primary server.
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Inputs
\par }\pard\plain \s33\fi-360\li900\ri20\sb120\sa120\tx900 \f5\fs20 1.\tab "Bindery"  An 'NW Bindery' object specifying the NetWare Bindery to manipulate. The Object Name and Object Type values are obtained from this NW Bindery object. This input is MANDATORY.

\par 2.\tab "New Name"   A 'Text' object containing the new name for the object. The specified object name should not contain the '*' and '?' wildcard characters.  This input is MANDATORY.
\par \pard \s33\fi-360\li900\ri20\sb120\sa120\tx900 3.\tab 
"Confirm Rename"  A 'Flag object which, if set, specifies that a dialog should be presented to the user to verify that the object is to be renamed.  This input is OPTIONAL, which no dialog being displayed if the parameter is not specified.
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Outputs
\par }\pard\plain \s33\fi-360\li900\ri20\sb120\sa120\tx900 \f5\fs20 None
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Flows (Return Codes)
\par }\pard\plain \s34\fi-3067\li3614\ri14\sb60\sa60\tx990\tx3600 \f5\fs20 1.\tab Renamed
\par 2.\tab No such object
\par 3.\tab Invalid object name\tab The specified object name contains wildcard characters or other invalid characters.
\par 4.\tab No rights\tab The current user must be SUPERVISOR or equivalent for this function to be successful.
\par \pard \s34\fi-3067\li3614\ri14\sb60\sa60\tx990\tx3600 5.\tab Error
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Notes
\par }\pard\plain \s43\li540\ri20\sb120\sa120 \f5\fs20 TBD
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Test Cases
\par }\pard\plain \s44\fi-450\li990\ri14\sb60\sa60\tx990\tx3060 \f5\fs20 1.\tab Execute function when no NetWare DLLs are available.  The 'Error' flow should be returned.
\par 2.\tab Execute the function when the NetWare DLLs (NWCALLS.DLL especially) are available, but no network is present. The 'Error' flow should be returned.
\par 3.\tab Execute the function when the NetWare DLLs (NWCALLS.DLL especially) are available and a network is available, but no logged in connection exists. The 'Error' flow should be returned.
\par \pard \s44\fi-450\li990\ri14\sb60\sa60\tx990\tx3060 4.\tab ???
\par \pard\plain \s18\ri14\keepn \b\f5\cf6 \page {\cs16\fs16\up6 #{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 #} idh_restore_bindery}}{\*\bkmkstart idh_restore_bindery}{\*\bkmkend idh_restore_bindery} {\cs16\fs16\up6 ${\footnote \pard\plain 
\s17\ri20 \f5\fs20 {\cs16\fs16\up6 $} Restore Bindery}} {\cs16\fs16\up6 +{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 +} brws3:0285}} {\cs16\fs16\up6 K{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 K} Restore Bindery}} {
\cs16\fs16\up6 !{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 !} EB(`btn_up'); CBB(`btn_up', `JI(`', `idh_contents')')}} Restore Bindery
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 Restores the NetWare Bindery files from the specified directory to the NetWare server.
\par {\cf5 \{bml bitmaps\\f_bndc.bmp\}}{\cf1  }
\par {\b Usage
\par }\pard\plain \s43\li540\ri20\sb120\sa120 \f5\fs20 The 'Server Name' field in the 'NW Bindery' {\uldb\cf11 object editing dialog}{\v idh_obj_edit_dlg_help}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 
macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 6964685f6f626a5f656469745f646c675f68656c70}}}{\fldrslt }}{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}
 must be specified for this function to succeed.  This function will not default to use the current primary server.
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Inputs
\par }\pard\plain \s33\fi-360\li900\ri20\sb120\sa120\tx900 \f5\fs20 1.\tab "Bindery"  An 'NW Bindery' object specifying the NetWare Bindery to manipulate. This input is MANDATORY.
\par 2.\tab "Src Path "  A 'Text' object specifying the directory specification of where the NetWare Bindery system files can be found. This input is MANDATORY.
\par \pard \s33\fi-360\li900\ri20\sb120\sa120\tx900 3.\tab "Confirm Flag"  A 'Flag' object which, if set, will result in a confirmation dialog to be displayed to the user before the restore operation occurs. This input is OPTIONAL.
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Outputs
\par }\pard\plain \s33\fi-360\li900\ri20\sb120\sa120\tx900 \f5\fs20 None
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Flows (Return Codes)
\par }\pard\plain \s34\fi-3067\li3614\ri14\sb60\sa60\tx990\tx3600 \f5\fs20 1.\tab Restored
\par 2.\tab Locked\tab The specified NetWare Bindery is currently locked and cannot be restored.
\par 3.\tab No rights\tab The current user must be Supervisor or equivalent for this operation to succeed.
\par 4.\tab Not supported\tab Archiving and restoring the NetWare Bindery system files are not supported for NetWare servers which use Bindery emulation.
\par 5.\tab No server\tab No specific NetWare server name was associated in the 'NW Bindery' ALM's object editing dialog.  This function will not default to use the current primary server.
\par \pard \s34\fi-3067\li3614\ri14\sb60\sa60\tx990\tx3600 6.\tab Error
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Notes
\par }\pard\plain \s43\li540\ri20\sb120\sa120 \f5\fs20 TBD
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Test Cases
\par }\pard\plain \s44\fi-450\li990\ri14\sb60\sa60\tx990\tx3060 \f5\fs20 1.\tab Execute function when no NetWare DLLs are available.  The 'Error' flow should be returned.
\par 2.\tab Execute the function when the NetWare DLLs (NWCALLS.DLL especially) are available, but no network is present. The 'Error' flow should be returned.
\par 3.\tab Execute the function when the NetWare DLLs (NWCALLS.DLL especially) are available and a network is available, but no logged in connection exists. The 'Error' flow should be returned.
\par \pard \s44\fi-450\li990\ri14\sb60\sa60\tx990\tx3060 4.\tab ???
\par \pard\plain \s18\ri14\keepn \b\f5\cf6 \page {\cs16\fs16\up6 {\*\bkmkstart idh_set_date_time_property}{\*\bkmkend idh_set_date_time_property}#{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 #} idh_set_date_time_property}} {\cs16\fs16\up6 $
{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 $} Set Date/Time Property}} {\cs16\fs16\up6 +{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 +} brws3:0290}} {\cs16\fs16\up6 K{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 K}
 Set Date/Time Property}} {\cs16\fs16\up6 !{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 !} EB(`btn_up'); CBB(`btn_up', `JI(`', `idh_contents')')}} Set Date/Time Property
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 Sets the value(s) of the specified date / time property (attribute) associated with a NetWare Bindery object.
\par {\cf5 \{bml bitmaps\\f_bndp.bmp\}}{\cf1  }
\par {\b Usage
\par }\pard\plain \s43\li540\ri20\sb120\sa120 \f5\fs20 TBD
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Inputs
\par }\pard\plain \s33\fi-360\li900\ri20\sb120\sa120\tx900 \f5\fs20 1.\tab "Bindery"  An 'NW Bindery' object specifying the NetWare Bindery to manipulate. The Object Name and Object Type values are obtained from this NW Bindery object. This input is MANDATORY.

\par 2.\tab "Property Name"  A 'Text' object which contains the NetWare Bindery property name to set.  The property name can be specified in either the Bindery name or local (translated) name.  Refer to the {\uldb\cf11 Object Properties}{\v 
idh_object_prop_xlat}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 6964685f6f626a6563745f70726f705f786c6174}}}{\fldrslt }}
{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }} section of this document for further information on the two naming formats. The property name specified should not contain the '*' and '?' wildcard characters. This input is MANDATORY.
\par 3.\tab "Date Value"  A 'Date' object which contains the new value for the date portion of the date / time property.  This output is OPTIONAL.
\par 4.\tab "Time Value"  A 'Time' object which contains the new value for the time portion of the date / time property.  This output is OPTIONAL.
\par 5.\tab 
"Replace Value"  A 'Flag' object which, if set, causes all existing values in the specified property to be replaced by the specified value(s).  This input is OPTIONAL, with all existing values maintained (effectively appending the new values to the pro
perty) if this parameter is not set.
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Outputs
\par }\pard\plain \s33\fi-360\li900\ri20\sb120\sa120\tx900 \f5\fs20 None
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Flows (Return Codes)
\par }\pard\plain \s34\fi-3067\li3614\ri14\sb60\sa60\tx990\tx3600 \f5\fs20 1.\tab Set
\par 2.\tab No such object
\par 3.\tab No such property
\par 4.\tab Wrong data type\tab The specified property is not of data type number.
\par 5.\tab Error
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Notes
\par }\pard\plain \s43\li540\ri20\sb120\sa120 \f5\fs20 
Unlike the NDS ALM, the intent is to have the various 'Set ... Property' commands immediately write the data back to the NetWare Bindery.  The NDS ALM would buffer the data in the object's data blocks and then write the data out when the 'Modify Object' N
DS ALM function was called.
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Test Cases
\par }\pard\plain \s44\fi-450\li990\ri14\sb60\sa60\tx990\tx3060 \f5\fs20 1.\tab Execute function when no NetWare DLLs are available.  The 'Error' flow should be returned.
\par 2.\tab Execute the function when the NetWare DLLs (NWCALLS.DLL especially) are available, but no network is present. The 'Error' flow should be returned.
\par 3.\tab Execute the function when the NetWare DLLs (NWCALLS.DLL especially) are available and a network is available, but no logged in connection exists. The 'Error' flow should be returned.
\par 4.\tab ???
\par \pard\plain \s18\ri14\keepn \b\f5\cf6 \page {\cs16\fs16\up6 {\*\bkmkstart idh_set_net_addr_property}{\*\bkmkend idh_set_net_addr_property}#{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 #} idh_set_net_addr_property}} {\cs16\fs16\up6 $
{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 $} Set Net Address Property}} {\cs16\fs16\up6 +{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 +} brws3:0300}} {\cs16\fs16\up6 K{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 K
} Set Net Address Property}} {\cs16\fs16\up6 !{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 !} EB(`btn_up'); CBB(`btn_up', `JI(`', `idh_contents')')}} Set Net Address Property
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 Sets the value(s) of the specified network address property (attribute) associated with a NetWare Bindery object.
\par {\cf5 \{bml bitmaps\\f_bndq.bmp\}}{\cf1  }
\par {\b Usage
\par }\pard\plain \s43\li540\ri20\sb120\sa120 \f5\fs20 TBD
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Inputs
\par }\pard\plain \s33\fi-360\li900\ri20\sb120\sa120\tx900 \f5\fs20 1.\tab "Bindery"  An 'NW Bindery' object specifying the NetWare Bindery to manipulate. The Object Name and Object Type values are obtained from this NW Bindery object. This input is MANDATORY.

\par 2.\tab "Property Name"  A 'Text' object which contains the NetWare Bindery property name to set.  The property name can be specified in either the Bindery name or local (translated) name.  Refer to the {\uldb\cf11 Object Properties}{\v 
idh_object_prop_xlat}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 6964685f6f626a6563745f70726f705f786c6174}}}{\fldrslt }}
{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }} section of this document for further information on the two naming formats. The property name specified should not contain the '*' and '?' wildcard characters. This input is MANDATORY.
\par 3.\tab "Property Value"  A 'Table' object which contains the value(s) for the specified property of the NetWare Bindery object.  This input is MANDATORY.
\par 4.\tab "Replace Value"  A 'Flag' object which, if set, causes all existing values in the specified property to be replaced by the specified value(s).  This 
input is OPTIONAL, with all existing values maintained (effectively appending the new values to the property) if this parameter is not set.
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Outputs
\par }\pard\plain \s33\fi-360\li900\ri20\sb120\sa120\tx900 \f5\fs20 None
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Flows (Return Codes)
\par }\pard\plain \s34\fi-3067\li3614\ri14\sb60\sa60\tx990\tx3600 \f5\fs20 1.\tab Set
\par 2.\tab No such object
\par 3.\tab No such property
\par 4.\tab Wrong data type\tab The specified property is not of data type number.
\par 5.\tab Error
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Notes
\par }\pard\plain \s43\li540\ri20\sb120\sa120 \f5\fs20 
Unlike the NDS ALM, the intent is to have the various 'Set ... Property' commands immediately write the data back to the NetWare Bindery.  The NDS ALM would buffer the data in the object's data blocks and the
n write the data out when the 'Modify Object' NDS ALM function was called.
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Test Cases
\par }\pard\plain \s44\fi-450\li990\ri14\sb60\sa60\tx990\tx3060 \f5\fs20 1.\tab Execute function when no NetWare DLLs are available.  The 'Error' flow should be returned.
\par 2.\tab Execute the function when the NetWare DLLs (NWCALLS.DLL especially) are available, but no network is present. The 'Error' flow should be returned.
\par 3.\tab Execute the function when the NetWare DLLs (NWCALLS.DLL especially) are available and a network is available, but no logged in connection exists. The 'Error' flow should be returned.
\par 4.\tab ???
\par \pard\plain \s18\ri14\keepn \b\f5\cf6 \page {\cs16\fs16\up6 {\*\bkmkstart idh_set_number_property}{\*\bkmkend idh_set_number_property}#{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 #} idh_set_number_property}} {\cs16\fs16\up6 ${\footnote 
\pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 $} Set Number Property}} {\cs16\fs16\up6 +{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 +} brws3:0310}} {\cs16\fs16\up6 K{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 K}
 Set Number Property}} {\cs16\fs16\up6 !{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 !} EB(`btn_up'); CBB(`btn_up', `JI(`', `idh_contents')')}} Set Number Property
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 Sets the value(s) of the specified number property (attribute) associated with a NetWare Bindery object.
\par {\cf5 \{bml bitmaps\\f_bndr.bmp\}}{\cf1  }
\par {\b Usage
\par }\pard\plain \s43\li540\ri20\sb120\sa120 \f5\fs20 TBD
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Inputs
\par }\pard\plain \s33\fi-360\li900\ri20\sb120\sa120\tx900 \f5\fs20 1.\tab "Bindery"  An 'NW Bindery' object specifying the NetWare Bindery to manipulate. The Object Name and Object Type values are obtained from this NW Bindery object. This input is MANDATORY.

\par 2.\tab "Property Name"  A 'Text' object which contains the NetWare Bindery property name to set.  The property name can be specified in either the Bindery name or local (translated) name.  Refer to the {\uldb\cf11 Object Properties}{\v 
idh_object_prop_xlat}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 6964685f6f626a6563745f70726f705f786c6174}}}{\fldrslt }}
{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }} section of this document for further information on the two naming formats. The property name specified should not contain the '*' and '?' wildcard characters. This input is MANDATORY.
\par 3.\tab "Property Value"  A 'Number' object which contains the value for the specified property of the NetWare Bindery object.  This input is MANDATORY.
\par 4.\tab 
"Replace Value"  A 'Flag' object which, if set, causes all existing values in the specified property to be replaced by the specified value(s).  This input is OPTIONAL, with all existing values maintained (effectively appending the new values to the pro
perty) if this parameter is not set.
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Outputs
\par }\pard\plain \s33\fi-360\li900\ri20\sb120\sa120\tx900 \f5\fs20 None
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Flows (Return Codes)
\par }\pard\plain \s34\fi-3067\li3614\ri14\sb60\sa60\tx990\tx3600 \f5\fs20 1.\tab Set
\par 2.\tab No such object
\par 3.\tab No such property
\par 4.\tab Wrong data type\tab The specified property is not of data type number.
\par 5.\tab Error
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Notes
\par }\pard\plain \s43\li540\ri20\sb120\sa120 \f5\fs20 Unlike the NDS ALM, the intent is to have the 
various 'Set ... Property' commands immediately write the data back to the NetWare Bindery.  The NDS ALM would buffer the data in the object's data blocks and then write the data out when the 'Modify Object' NDS ALM function was called.
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Test Cases
\par }\pard\plain \s44\fi-450\li990\ri14\sb60\sa60\tx990\tx3060 \f5\fs20 1.\tab Execute function when no NetWare DLLs are available.  The 'Error' flow should be returned.
\par 2.\tab Execute the function when the NetWare DLLs (NWCALLS.DLL especially) are available, but no network is present. The 'Error' flow should be returned.
\par 3.\tab Execute the function when the NetWare DLLs (NWCALLS.DLL especially) are available and a network is available, but no logged in connection exists. The 'Error' flow should be returned.
\par 4.\tab ???
\par \pard\plain \s18\ri14\keepn \b\f5\cf6 \page {\cs16\fs16\up6 {\*\bkmkstart idh_set_table_property}{\*\bkmkend idh_set_table_property}#{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 #} idh_set_table_property}} {\cs16\fs16\up6 ${\footnote 
\pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 $} Set Table Property}} {\cs16\fs16\up6 +{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 +} brws3:0320}} {\cs16\fs16\up6 K{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 K}
 Set Table Property}} {\cs16\fs16\up6 !{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 !} EB(`btn_up'); CBB(`btn_up', `JI(`', `idh_contents')')}} Set Table Property
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 Sets the value(s) of the specified table property (attribute) associated with a NetWare Bindery object.
\par {\cf5 \{bml bitmaps\\f_bnds.bmp\}}{\cf1  }
\par {\b Usage
\par }\pard\plain \s43\li540\ri20\sb120\sa120 \f5\fs20 TBD
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Inputs
\par }\pard\plain \s33\fi-360\li900\ri20\sb120\sa120\tx900 \f5\fs20 1.\tab "Bindery"  An 'NW Bindery' object specifying the NetWare Bindery to manipulate. The Object Name and Object Type values are obtained from this NW Bindery object. This input is MANDATORY.

\par 2.\tab "Property Name"  A 'Text' object which contains the NetWare Bindery property name to set.  The property name can be specified in either the Bindery name or local (translated) name.  Refer to the {\uldb\cf11 Object Properties}{\v 
idh_object_prop_xlat}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 6964685f6f626a6563745f70726f705f786c6174}}}{\fldrslt }}
{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }} section of this document for further information on the two naming formats. The property name specified should not contain the '*' and '?' wildcard characters. This input is MANDATORY.
\par 3.\tab "Property Value"  A 'Table' object which contains the value for the specified property of the NetWare Bindery object.  This input is MANDATORY.
\par 4.\tab 
"Replace Value"  A 'Flag' object which, if set, causes all existing values in the specified property to be replaced by the specified value(s).  This input is OPTIONAL, with all existing values maintained (effectively appending the new values to the pro
perty) if this parameter is not set.
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Outputs
\par }\pard\plain \s33\fi-360\li900\ri20\sb120\sa120\tx900 \f5\fs20 None
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Flows (Return Codes)
\par }\pard\plain \s34\fi-3067\li3614\ri14\sb60\sa60\tx990\tx3600 \f5\fs20 1.\tab Set
\par 2.\tab No such object
\par 3.\tab No such property
\par 4.\tab Wrong data type\tab The specified property is not of data type number.
\par 5.\tab Error
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Notes
\par }\pard\plain \s43\li540\ri20\sb120\sa120 \f5\fs20 
Unlike the NDS ALM, the intent is to have the various 'Set ... Property' commands immediately write the data back to the NetWare Bindery.  The NDS ALM would buffer the data in the object's data blocks and then write the data out when the 'Modify Object' N
DS ALM function was called.
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Test Cases
\par }\pard\plain \s44\fi-450\li990\ri14\sb60\sa60\tx990\tx3060 \f5\fs20 1.\tab Execute function when no NetWare DLLs are available.  The 'Error' flow should be returned.
\par 2.\tab Execute the function when the NetWare DLLs (NWCALLS.DLL especially) are available, but no network is present. The 'Error' flow should be returned.
\par 3.\tab Execute the function when the NetWare DLLs (NWCALLS.DLL especially) are available and a network is available, but no logged in connection exists. The 'Error' flow should be returned.
\par 4.\tab ???
\par \pard\plain \s18\ri14\keepn \b\f5\cf6 \page {\cs16\fs16\up6 {\*\bkmkstart idh_set_text_property}{\*\bkmkend idh_set_text_property}#{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 #} idh_set_text_property}} {\cs16\fs16\up6 ${\footnote 
\pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 $} Set Text Property}} {\cs16\fs16\up6 +{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 +} brws3:0330}} {\cs16\fs16\up6 K{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 K}
 Set Text Property}} {\cs16\fs16\up6 !{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 !} EB(`btn_up'); CBB(`btn_up', `JI(`', `idh_contents')')}} Set Text Property
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 Sets the value(s) of the specified text property (attribute) associated with a NetWare Bindery object.
\par {\cf5 \{bml bitmaps\\f_bndt.bmp\}}{\cf1  }
\par {\b Usage
\par }\pard\plain \s43\li540\ri20\sb120\sa120 \f5\fs20 TBD
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Inputs
\par }\pard\plain \s33\fi-360\li900\ri20\sb120\sa120\tx900 \f5\fs20 1.\tab "Bindery"  An 'NW Bindery' object specifying the NetWare Bindery to manipulate. The Object Name and Object Type values are obtained from this NW Bindery object. This input is MANDATORY.

\par 2.\tab "Property Name"  A 'Text' object which contains the NetWare Bindery property name to set.  The property name can be specified in either the Bindery name or local (translated) name.  Refer to the {\uldb\cf11 Object Properties}{\v 
idh_object_prop_xlat}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 6964685f6f626a6563745f70726f705f786c6174}}}{\fldrslt }}
{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }} section of this document for further information on the two naming formats. The property name specified should not contain the '*' and '?' wildcard characters. This input is MANDATORY.
\par 3.\tab "Property Value"  A 'Text' object which contains the value for the specified property of the NetWare Bindery object.  This input is MANDATORY.
\par 4.\tab "Replace Value"  A 'Flag' object which, if set, causes all existing values in the specified property to be replaced by the specified value(s).  This input is OPTIONAL, with all existin
g values maintained (effectively appending the new values to the property) if this parameter is not set.
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Outputs
\par }\pard\plain \s33\fi-360\li900\ri20\sb120\sa120\tx900 \f5\fs20 None
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Flows (Return Codes)
\par }\pard\plain \s34\fi-3067\li3614\ri14\sb60\sa60\tx990\tx3600 \f5\fs20 1.\tab Set
\par 2.\tab No such object
\par 3.\tab No such property
\par 4.\tab Wrong data type\tab The specified property is not of data type number.
\par 5.\tab Error
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Notes
\par }\pard\plain \s43\li540\ri20\sb120\sa120 \f5\fs20 
Unlike the NDS ALM, the intent is to have the various 'Set ... Property' commands immediately write the data back to the NetWare Bindery.  The NDS ALM would buffer the data in the object's data blocks and then write the data out when the 'Modi
fy Object' NDS ALM function was called.
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Test Cases
\par }\pard\plain \s44\fi-450\li990\ri14\sb60\sa60\tx990\tx3060 \f5\fs20 1.\tab Execute function when no NetWare DLLs are available.  The 'Error' flow should be returned.
\par 2.\tab Execute the function when the NetWare DLLs (NWCALLS.DLL especially) are available, but no network is present. The 'Error' flow should be returned.
\par 3.\tab Execute the function when the NetWare DLLs (NWCALLS.DLL especially) are available and a network is available, but no logged in connection exists. The 'Error' flow should be returned.
\par 4.\tab ???
\par \pard\plain \s18\ri14\keepn \b\f5\cf6 \page {\cs16\fs16\up6 {\*\bkmkstart idh_set_time_property}{\*\bkmkend idh_set_time_property}#{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 #} idh_set_time_property}} {\cs16\fs16\up6 ${\footnote 
\pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 $} Set Time Property}} {\cs16\fs16\up6 +{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 +} brws3:0340}} {\cs16\fs16\up6 K{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 K}
 Set Time Property}} {\cs16\fs16\up6 !{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 !} EB(`btn_up'); CBB(`btn_up', `JI(`', `idh_contents')')}} Set Time Property
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 Sets the value(s) of the specified time property (attribute) associated with a NetWare Bindery object.
\par {\cf5 \{bml bitmaps\\f_bndu.bmp\}}{\cf1  }
\par {\b Usage
\par }\pard\plain \s43\li540\ri20\sb120\sa120 \f5\fs20 TBD
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Inputs
\par }\pard\plain \s33\fi-360\li900\ri20\sb120\sa120\tx900 \f5\fs20 1.\tab "Bindery"  An 'NW Bindery' object specifying the NetWare Bindery to manipulate. The Object Name and Object Type values are obtained from this NW Bindery object. This input is MANDATORY.

\par 2.\tab "Property Name"  A 'Text' object which contains the NetWare Bindery property name to set.  The property name can be specified in either the Bindery name or local (translated) name.  Refer to the {\uldb\cf11 Object Properties}{\v 
idh_object_prop_xlat}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 6964685f6f626a6563745f70726f705f786c6174}}}{\fldrslt }}
{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }} section of this document for further information on the two naming formats. The property name specified should not contain the '*' and '?' wildcard characters.  This input is MANDATORY.
\par 3.\tab "Days"  A 'Number' object which contains the days component of the time value for the specified property of the NetWare Bindery object.  This input is OPTIONAL.
\par 4.\tab "Hours"  A 'Number' object which contains the hours component of the time value for the specified property of the NetWare Bindery object.  This input is OPTIONAL.
\par 5.\tab "Minutes"  A 'Number' object which contains the minutes component of the time value for the specified property of the NetWare Bindery object.  This input is OPTIONAL.
\par 6.\tab "Seconds"  A 'Number' object which contains the seconds component of the time value for the specified property of the NetWare Bindery object.  This input is OPTIONAL.
\par 7.\tab "Replace Value"
  A 'Flag' object which, if set, causes all existing values in the specified property to be replaced by the specified value(s).  This input is OPTIONAL, with all existing values maintained (effectively appending the new values to the property) if this par
ameter is not set.
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Outputs
\par }\pard\plain \s33\fi-360\li900\ri20\sb120\sa120\tx900 \f5\fs20 None
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Flows (Return Codes)
\par }\pard\plain \s34\fi-3067\li3614\ri14\sb60\sa60\tx990\tx3600 \f5\fs20 1.\tab Set
\par 2.\tab No such object
\par 3.\tab No such property
\par 4.\tab Wrong data type\tab The specified property is not of data type number.
\par 5.\tab Error
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Notes
\par }\pard\plain \s43\li540\ri20\sb120\sa120 \f5\fs20 Unlike the NDS ALM, the intent is to have the various 'Set ... Property' c
ommands immediately write the data back to the NetWare Bindery.  The NDS ALM would buffer the data in the object's data blocks and then write the data out when the 'Modify Object' NDS ALM function was called.
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Test Cases
\par }\pard\plain \s44\fi-450\li990\ri14\sb60\sa60\tx990\tx3060 \f5\fs20 1.\tab Execute function when no NetWare DLLs are available.  The 'Error' flow should be returned.
\par 2.\tab Execute the function when the NetWare DLLs (NWCALLS.DLL especially) are available, but no network is present. The 'Error' flow should be returned.
\par 3.\tab Execute the function when the NetWare DLLs (NWCALLS.DLL especially) are available and a network is available, but no logged in connection exists. The 'Error' flow should be returned.
\par 4.\tab ???
\par \pard\plain \s18\ri14\keepn \b\f5\cf6 \page {\cs16\fs16\up6 {\*\bkmkstart idx_verify_password}{\*\bkmkend idx_verify_password}#{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 #} idh_verify_password}} {\cs16\fs16\up6 ${\footnote \pard\plain 
\s17\ri20 \f5\fs20 {\cs16\fs16\up6 $} Verify Password}} {\cs16\fs16\up6 +{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 +} brws3:0350}} {\cs16\fs16\up6 K{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 K} Verify Password}} {
\cs16\fs16\up6 !{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 !} EB(`btn_up'); CBB(`btn_up', `JI(`', `idh_contents')')}} Verify Password
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 Verifies the current password for the specified object in the NetWare Bindery.
\par {\cf5 \{bml bitmaps\\f_vpas.bmp\}}{\cf1  }
\par {\b Usage
\par }\pard\plain \s43\li540\ri20\sb120\sa120 \f5\fs20 TBD
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Inputs
\par }\pard\plain \s33\fi-360\li900\ri20\sb120\sa120\tx900 \f5\fs20 1.\tab "Bindery"  An 'NW Bindery' object specifying the NetWare Bindery to manipulate. The Object Name and Object Type values are obtained from this NW Bindery object. This input is MANDATORY.

\par 2.\tab "Password"  A 'Text' object containing the object's current password.  This input is MANDATORY.
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Outputs
\par }\pard\plain \s33\fi-360\li900\ri20\sb120\sa120\tx900 \f5\fs20 None
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Flows (Return Codes)
\par }\pard\plain \s34\fi-3067\li3614\ri14\sb60\sa60\tx990\tx3600 \f5\fs20 1.\tab Verified
\par 2.\tab Not verified
\par 3.\tab No such object
\par 4.\tab Bad password format
\par 5.\tab Error
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Notes
\par }\pard\plain \s43\li540\ri20\sb120\sa120 \f5\fs20 TBD
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Test Cases
\par }\pard\plain \s44\fi-450\li990\ri14\sb60\sa60\tx990\tx3060 \f5\fs20 1.\tab Execute function when no NetWare DLLs are available.  The 'Error' flow should be returned.
\par 2.\tab Execute the function when the NetWare DLLs (NWCALLS.DLL especially) are available, but no network is present. The 'Error' flow should be returned.
\par 3.\tab Execute the function when the NetWare DLLs (NWCALLS.DLL especially) are available and a network is available, but no logged in connection exists. The 'Error' flow should be returned.
\par 4.\tab ???
\par \pard\plain \s18\ri14\keepn \b\f5\cf6 \page {\cs16\fs16\up6 {\*\bkmkstart idh_who_am_i}{\*\bkmkend idh_who_am_i}#{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 #} idh_who_am_i}} {\cs16\fs16\up6 ${\footnote \pard\plain \s17\ri20 \f5\fs20 {
\cs16\fs16\up6 $} Who Am I ?}} {\cs16\fs16\up6 +{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 +} brws3:0355}} {\cs16\fs16\up6 K{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 K} Who Am I ?}} {\cs16\fs16\up6 !{\footnote \pard\plain 
\s17\ri20 \f5\fs20 {\cs16\fs16\up6 !} EB(`btn_up'); CBB(`btn_up', `JI(`', `idh_contents')')}} Who Am I ?
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 Determines the Bindery user name and other information pertaining to the current user.
\par {\cf5 \{bml bitmaps\\f_bndz.bmp\}}{\cf1  }
\par {\b Usage
\par }\pard\plain \s33\li540\ri20\sb120\sa120\tx540 \f5\fs20 The following are valid values for the "Wrt Access" and "Rd Access" output parameters, with case being insignificant:
\par \pard \s33\fi-1800\li2880\ri14\sb60\sa60\tx2880 {\b String\tab Meaning}
\par Anyone\tab Access is allowed to objects and properties with the corresponding object or property security value set to ANYONE.
\par Logged\tab Access is allowed to objects and properties with the corresponding object or property security value set to LOGGED or lower.
\par Object\tab Access is allowed to objects and properties with the corresponding object or property security value set to OBJECT or lower.
\par Supervisor\tab Access is allowed to objects and properties with the corresponding object or property security value set to SUPERVISOR or lower.
\par NetWare\tab Access is allowed to objects and properties with the corresponding object or property security value set to NETWARE or lower.
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Inputs
\par }\pard\plain \s33\fi-360\li900\ri20\sb120\sa120\tx900 \f5\fs20 1.\tab "Bindery"  An 'NW Bindery' object specifying the NetWare Bindery to manipulate.  This input is MANDATORY.
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Outputs
\par }\pard\plain \s33\fi-360\li900\ri20\sb120\sa120\tx900 \f5\fs20 1.\tab "User Name"  A 'Text' object to contain the Bindery user name of the current user.  This output is MANDATORY.
\par 2.\tab "Is Supervisor"  A 'Flag' object which, if set, signifies that the current has is SUPERVISOR or equivalent.  This output is OPTIONAL.
\par 3.\tab "Rd Access"  A 'Text' object which describes the current user's read access level to the specified NetWare Bindery.  Read access controls which objects and properties the workstation can find when it scans the Bindery.  This output is OPTIONAL.

\par 4.\tab "Wrt Access" A 'Text' object which describes the current user's read access level to the specified NetWare Bindery. Write access controls which objects and properties the workstation can modify.  This output is OPTIONAL.
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Flows (Return Codes)
\par }\pard\plain \s34\fi-3067\li3614\ri14\sb60\sa60\tx990\tx3600 \f5\fs20 1.\tab Retrieved
\par 2.\tab No connection\tab No NetWare connection is present.
\par 3.\tab Error
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Notes
\par }\pard\plain \s43\li540\ri20\sb120\sa120 \f5\fs20 TBD
\par \pard\plain \s30\li360\ri20\sb120\sa120 \f5\fs20 {\b Test Cases
\par }\pard\plain \s44\fi-450\li990\ri14\sb60\sa60\tx990\tx3060 \f5\fs20 1.\tab Execute function when no NetWare DLLs are available.  The 'Error' flow should be returned.
\par 2.\tab Execute the function when the NetWare DLLs (NWCALLS.DLL especially) are available, but no network is present. The 'Error' flow should be returned.
\par 3.\tab Execute the function when the NetWare DLLs (NWCALLS.DLL especially) are available and a network is available, but no logged in connection exists. The ' No connection ' flow should be returned.
\par 4.\tab ???
\par \pard\plain \s18\ri14\keepn \b\f5\cf6 \page {\cs16\fs16\up6 {\*\bkmkstart idh_obj_edit_dlg_help}{\*\bkmkend idh_obj_edit_dlg_help}#{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 #} idh_obj_edit_dlg_help}} {\cs16\fs16\up6 ${\footnote 
\pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 $} Object Editing Dialog}} {\cs16\fs16\up6 K{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 K} Object Editing Dialog}} {\cs16\fs16\up6 !{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 !}
 EB(`btn_up'); CBB(`btn_up', `JI(`', `idh_contents')')
\par }} Object Editing Dialog
\par \pard\plain \s29\li720\ri20\tx720\tx1260 \f4\fs20 
\par \pard \s29\li360\ri20\tx360\tx1260 {\b Server Name\tab 
\par }\pard\plain \s43\li540\ri20\sb120\sa120 \f5\fs20 This value is used to store the name of the 
NetWare server which contains the NetWare Bindery to manipulate.  If this value is not assigned to any Text object, the current primary connection will be used for the various Bindery functions for most functions.  The following functions require that a s
erver name is specified:
\par \pard \s43\li907\ri14 {\uldb\cf11 Open Bindery}{\v idh_open_bindery}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 
6964685f6f70656e5f62696e64657279}}}{\fldrslt }}{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}
\par {\uldb\cf11 Close Bindery}{\v idh_close_bindery}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 
6964685f636c6f73655f62696e64657279}}}{\fldrslt }}{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}
\par {\uldb\cf11 Delete Object}{\v idh_delete_object}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 
6964685f64656c6574655f6f626a656374}}}{\fldrslt }}{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}
\par {\uldb\cf11 Rename Object}{\v idh_rename_object}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 
6964685f72656e616d655f6f626a656374}}}{\fldrslt }}{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}
\par {\uldb\cf11 Delete Property}{\v idh_delete_property}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 
6964685f64656c6574655f70726f7065727479}}}{\fldrslt }}{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}
\par {\uldb\cf11 Change Object Security}{\v idh_change_obj_security}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 
6964685f6368616e67655f6f626a5f7365637572697479}}}{\fldrslt }}{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}
\par \pard\plain \s29\li360\ri20\tx360\tx1260 \f4\fs20 
\par {\b\fs24 Object Filters
\par }\pard\plain \s43\li540\ri20\sb120\sa120 \f5\fs20 These values are used by the {\uldb\cf11 List Objects}{\v idh_list_objects}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}
{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 6964685f6c6973745f6f626a65637473}}}{\fldrslt }}{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }} function to minimize the input parameter count. 
\par \pard\plain \s29\li720\ri20\tx720\tx1260 \f4\fs20 {\b Name Filter
\par }\pard\plain \s43\li900\ri20\sb120\sa120 \f5\fs20 
This value is used to specified a Bindery object name to search for.  This value may contain the wildcard characters '*' and '?'.  The wildcard characater '*' will match any number of characters, while the '?' wildcard character matches a single character
.  An object name may be a maximum of 47 characters and may c
ontain any printable characters (ASCII hexadecimal values 0x21 to 0x7D)  with the exceptions listed below.  Space characters are also not allowed in object names, but will be automatically converted to underscore characters.  The specified object name fil
ter value will be converted to all uppercase automatically.
\par \pard \s43\li1267\ri14 /   (slashes)
\par \\   (backslashes)
\par :   (colons)
\par ;   (semicolons)
\par ,   (commas)
\par \pard \s43\li900\ri20\sb120\sa120 
\par \pard\plain \s29\li720\ri20\tx720\tx1260 \f4\fs20 {\b Type Filter
\par }\pard\plain \s43\li900\ri20\sb120\sa120 \f5\fs20 This value is used to specified an object type filter which will be used to limit the object list to be returned to object of a single type.  This value should contain one of the following values:
\par \pard \s43\li1267\ri14 All
\par *\tab (same as All)
\par Unknown
\par Group
\par Print Queue
\par File Server
\par Job Server
\par Gateway
\par Print Server
\par Archive Queue
\par Archive Server
\par Job Queue
\par Administration
\par \pard\plain \s29\li360\ri20\tx360\tx1260 \f4\fs20 
\par {\b\fs24 Object Data
\par }\pard\plain \s43\li540\ri20\sb120\sa120 \f5\fs20 These values are used by the functions 'Get ... Property', 'Set ... Property' and ??? to minimize the input parameter count. 
\par \pard\plain \s29\li720\ri20\tx720\tx1260 \f4\fs20 {\b Object Name
\par }\pard\plain \s43\li900\ri20\sb120\sa120 \f5\fs20 This value is used to specify the name of the Bindery object to be manipulated.  The rules for this value are the same as for the
 Name Filter value described above, with the exception that this value should not contain the '*' and '?' wildcard characters.
\par \pard\plain \s29\li720\ri20\tx720\tx1260 \f4\fs20 {\b Object Type
\par }\pard\plain \s43\li900\ri20\sb120\sa120 \f5\fs20 
This value is used to specify the type of the Bindery object to be manipulated. The rules for this value are the same as for the Type Filter value described above, with the exception that this value should not contain the '*' and '?' wildcard characters.

\par \pard\plain \s29\li720\ri20\tx720\tx1260 \f4\fs20 {\b Object ID
\par }\pard\plain \s43\li900\ri20\sb120\sa120 \f5\fs20 This value is used to specify the Bindery object ID of the object to be manipulated.  THIS VALUE IS CURRENTLY NOT USED !!!
\par \pard\plain \s29\li720\ri20\tx720\tx1260 \f4\fs20 
\par \pard\plain \s18\ri14\keepn \b\f5\cf6 \page {\cs16\fs16\up6 {\*\bkmkstart idh_name_translation}{\*\bkmkend idh_name_translation}#{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 #} idh_name_translation}} {\cs16\fs16\up6 ${\footnote \pard\plain 
\s17\ri20 \f5\fs20 {\cs16\fs16\up6 $} Name Translation}} {\cs16\fs16\up6 !{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 !} EB(`btn_up'); CBB(`btn_up', `JI(`', `idh_contents')')}} Name Translation
\par \pard\plain \s29\li720\ri20\tx720\tx1260 \f4\fs20 
\par \pard\plain \s27\li360\sa100 \f5\fs20 {\uldb\cf11 Object Types}{\v idh_object_types_xlat}{\field\flddirty{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}
{\field\flddirty{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 6964685f6f626a6563745f74797065735f786c6174}}}{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}
\par {\uldb\cf11 Object Properties}{\v idh_object_prop_xlat}{\field\flddirty{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  ADDIN }{\cf1 
{\*\datafield 6964685f6f626a6563745f70726f705f786c6174}}}{\fldrslt }}{\field\flddirty{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}
\par \pard\plain \s29\li720\ri20\tx720\tx1260 \f4\fs20 
\par \pard\plain \s18\ri14\keepn \b\f5\cf6 \page {\cs16\fs16\up6 {\*\bkmkstart idh_object_types_xlat}{\*\bkmkend idh_object_types_xlat}#{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 #} idh_object_types_xlat}} {\cs16\fs16\up6 ${\footnote 
\pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 $} Object Types}} {\cs16\fs16\up6 K{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 K} Object Types}} {\cs16\fs16\up6 !{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 !}
 EB(`btn_up'); CBB(`btn_up', `JI(`', `idh_name_translation')')}} Object Types
\par \pard\plain \ri20 \f5\fs20 {\fs16 
\par }\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw15\brdrcf1 \trbrdrl\brdrs\brdrw15\brdrcf1 \trbrdrb\brdrs\brdrw15\brdrcf1 \trbrdrr\brdrs\brdrw15\brdrcf1 \trbrdrh\brdrs\brdrw15\brdrcf1 \trbrdrv\brdrs\brdrw15\brdrcf1 \clbrdrt\brdrs\brdrw15\brdrcf1 \clbrdrl
\brdrs\brdrw15\brdrcf1 \clbrdrb\brdrs\brdrw15\brdrcf1 \clbrdrr\brdrs\brdrw15\brdrcf1 \cellx2700\clbrdrt\brdrs\brdrw15\brdrcf1 \clbrdrl\brdrs\brdrw15\brdrcf1 \clbrdrb\brdrs\brdrw15\brdrcf1 \clbrdrr\brdrs\brdrw15\brdrcf1 \cellx4140\clbrdrt
\brdrs\brdrw15\brdrcf1 \clbrdrl\brdrs\brdrw15\brdrcf1 \clbrdrb\brdrs\brdrw15\brdrcf1 \clbrdrr\brdrs\brdrw15\brdrcf1 \cellx5040\clbrdrt\brdrs\brdrw15\brdrcf1 \clbrdrl\brdrs\brdrw15\brdrcf1 \clbrdrb\brdrs\brdrw15\brdrcf1 \clbrdrr\brdrs\brdrw15\brdrcf1 
\cellx6030\clbrdrt\brdrs\brdrw15\brdrcf1 \clbrdrl\brdrs\brdrw15\brdrcf1 \clbrdrb\brdrs\brdrw15\brdrcf1 \clbrdrr\brdrs\brdrw15\brdrcf1 \cellx7650 \pard \intbl {\b Bindery Name\cell Local Name\cell Object Type\cell Default Security\cell Notes\cell }\pard 
\intbl {\b \row }\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw15\brdrcf1 \trbrdrl\brdrs\brdrw15\brdrcf1 \trbrdrb\brdrs\brdrw15\brdrcf1 \trbrdrr\brdrs\brdrw15\brdrcf1 \trbrdrh\brdrs\brdrw15\brdrcf1 \trbrdrv\brdrs\brdrw15\brdrcf1 \clbrdrt
\brdrs\brdrw15\brdrcf1 \clbrdrl\brdrs\brdrw15\brdrcf1 \clbrdrb\brdrs\brdrw15\brdrcf1 \clbrdrr\brdrs\brdrw15\brdrcf1 \cellx2700\clbrdrt\brdrs\brdrw15\brdrcf1 \clbrdrl\brdrs\brdrw15\brdrcf1 \clbrdrb\brdrs\brdrw15\brdrcf1 \clbrdrr\brdrs\brdrw15\brdrcf1 
\cellx4140\clbrdrt\brdrs\brdrw15\brdrcf1 \clbrdrl\brdrs\brdrw15\brdrcf1 \clbrdrb\brdrs\brdrw15\brdrcf1 \clbrdrr\brdrs\brdrw15\brdrcf1 \cellx5040\clbrdrt\brdrs\brdrw15\brdrcf1 \clbrdrl\brdrs\brdrw15\brdrcf1 \clbrdrb\brdrs\brdrw15\brdrcf1 \clbrdrr
\brdrs\brdrw15\brdrcf1 \cellx6030\clbrdrt\brdrs\brdrw15\brdrcf1 \clbrdrl\brdrs\brdrw15\brdrcf1 \clbrdrb\brdrs\brdrw15\brdrcf1 \clbrdrr\brdrs\brdrw15\brdrcf1 \cellx7650 \pard \intbl {\fs14 OT_WILD\cell }{\fs16 All\cell 0xFFFF\cell }\cell \cell \pard 
\intbl \row \pard \intbl {\fs14 OT_UNKNOWN\cell }{\fs16 Unknown\cell 0x0000\cell }\cell \cell \pard \intbl \row \pard \intbl {\fs14 OT_USER\cell }{\fs16 User\cell 0x0100\cell }\cell \cell \pard \intbl \row \pard \intbl {\fs14 OT_USER_GROUP\cell }{\fs16 
Group\cell 0x0200\cell }\cell \cell \pard \intbl \row \pard \intbl {\fs14 OT_PRINT_QUEUE\cell }{\fs16 Print Queue\cell 0x0300\cell }\cell \cell \pard \intbl \row \pard \intbl {\fs14 OT_FILE_SERVER\cell }{\fs16 File Server\cell 0x0400\cell }\cell \cell 
\pard \intbl \row \pard \intbl {\fs14 OT_JOB_SERVER\cell }{\fs16 Job Server\cell 0x0500\cell }\cell \cell \pard \intbl \row \pard \intbl {\fs14 OT_GATEWAY\cell }{\fs16 Gateway\cell 0x0600\cell }\cell \cell \pard \intbl \row \pard \intbl {\fs14 
OT_PRINT_SERVER\cell }{\fs16 Print Server\cell 0x0700\cell }\cell \cell \pard \intbl \row \pard \intbl {\fs14 OT_ARCHIVE_QUEUE\cell }{\fs16 Archive Queue\cell 0x0800\cell }\cell \cell \pard \intbl \row \pard \intbl {\fs14 OT_ARCHIVE_SERVER\cell }{\fs16 
Archive Server\cell 0x0900\cell }\cell \cell \pard \intbl \row \pard \intbl {\fs14 OT_JOB_QUEUE\cell }{\fs16 Job Queue\cell 0x0A00\cell }\cell \cell \pard \intbl \row \pard \intbl {\fs14 OT_ADMINISTRATION\cell }{\fs16 Administration\cell 0x0B00\cell }
\cell \cell \pard \intbl \row \pard \intbl {\fs14 OT_NAS_SNA_GATEWAY\cell }\cell {\fs16 0x2100\cell }\cell \cell \pard \intbl \row \pard \intbl {\fs14 OT_REMOTE_BRIDGE_SERVER\cell }\cell {\fs16 0x2700\cell }\cell \cell \pard \intbl \row \pard \intbl {
\fs14 OT_TIME_SYNCH'TION_SERVER\cell }\cell {\fs16 0x2D00\cell }\cell \cell \pard \intbl \row \pard \intbl {\fs14 OT_ARCHIVE_SERVER_DYNAMIC_SAP\cell }\cell {\fs16 0x2E00\cell }\cell \cell \pard \intbl \row \pard \intbl {\fs14 OT_ADVERTISING_PRINT_SERVER
\cell }\cell {\fs16 0x4700\cell }\cell \cell \pard \intbl \row \pard \intbl {\fs14 OT_BTRIEVE_VAP\cell }\cell {\fs16 0x5000\cell }\cell \cell \pard \intbl \row \pard \intbl {\fs14 OT_PRINT_QUEUE_USER\cell }\cell {\fs16 0x5300\cell }\cell \cell \pard 
\intbl \row \pard \intbl {\fs16 \cell }\cell \cell \cell \cell \pard \intbl \row \trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw15\brdrcf1 \trbrdrl\brdrs\brdrw15\brdrcf1 \trbrdrb\brdrs\brdrw15\brdrcf1 \trbrdrr\brdrs\brdrw15\brdrcf1 \trbrdrh
\brdrs\brdrw15\brdrcf1 \trbrdrv\brdrs\brdrw15\brdrcf1 \clbrdrt\brdrs\brdrw15\brdrcf1 \clbrdrl\brdrs\brdrw15\brdrcf1 \clbrdrb\brdrs\brdrw15\brdrcf1 \clbrdrr\brdrs\brdrw15\brdrcf1 \cellx2700\clbrdrt\brdrs\brdrw15\brdrcf1 \clbrdrl\brdrs\brdrw15\brdrcf1 
\clbrdrb\brdrs\brdrw15\brdrcf1 \clbrdrr\brdrs\brdrw15\brdrcf1 \cellx4140\clbrdrt\brdrs\brdrw15\brdrcf1 \clbrdrl\brdrs\brdrw15\brdrcf1 \clbrdrb\brdrs\brdrw15\brdrcf1 \clbrdrr\brdrs\brdrw15\brdrcf1 \cellx5040\clbrdrt\brdrs\brdrw15\brdrcf1 \clbrdrl
\brdrs\brdrw15\brdrcf1 \clbrdrb\brdrs\brdrw15\brdrcf1 \clbrdrr\brdrs\brdrw15\brdrcf1 \cellx6030\clbrdrt\brdrs\brdrw15\brdrcf1 \clbrdrl\brdrs\brdrw15\brdrcf1 \clbrdrb\brdrs\brdrw15\brdrcf1 \clbrdrr\brdrs\brdrw15\brdrcf1 \cellx7650 \pard \intbl {\fs16 
\cell }\cell \cell \cell \cell \pard \intbl \row \pard \ri20 
\par \pard\plain \s18\ri14\keepn \b\f5\cf6 \page {\cs16\fs16\up6 {\*\bkmkstart idh_object_prop_xlat}{\*\bkmkend idh_object_prop_xlat}#{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 #} idh_object_prop_xlat}} {\cs16\fs16\up6 ${\footnote \pard\plain 
\s17\ri20 \f5\fs20 {\cs16\fs16\up6 $} Object Properties}} {\cs16\fs16\up6 K{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 K} Object Properties}} {\cs16\fs16\up6 !{\footnote \pard\plain \s17\ri20 \f5\fs20 {\cs16\fs16\up6 !}
 EB(`btn_up'); CBB(`btn_up', `JI(`', `idh_name_translation')')}} Object Properties
\par \pard\plain \ri20 \f5\fs20 
\par {\b File Server Objects
\par 
\par }\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw15\brdrcf1 \trbrdrl\brdrs\brdrw15\brdrcf1 \trbrdrb\brdrs\brdrw15\brdrcf1 \trbrdrr\brdrs\brdrw15\brdrcf1 \trbrdrh\brdrs\brdrw15\brdrcf1 \trbrdrv\brdrs\brdrw15\brdrcf1 \clbrdrt\brdrs\brdrw15\brdrcf1 \clbrdrl
\brdrs\brdrw15\brdrcf1 \clbrdrb\brdrs\brdrw15\brdrcf1 \clbrdrr\brdrs\brdrw15\brdrcf1 \cellx1692\clbrdrt\brdrs\brdrw15\brdrcf1 \clbrdrl\brdrs\brdrw15\brdrcf1 \clbrdrb\brdrs\brdrw15\brdrcf1 \clbrdrr\brdrs\brdrw15\brdrcf1 \cellx3600\clbrdrt
\brdrs\brdrw15\brdrcf1 \clbrdrl\brdrs\brdrw15\brdrcf1 \clbrdrb\brdrs\brdrw15\brdrcf1 \clbrdrr\brdrs\brdrw15\brdrcf1 \cellx4584\clbrdrt\brdrs\brdrw15\brdrcf1 \clbrdrl\brdrs\brdrw15\brdrcf1 \clbrdrb\brdrs\brdrw15\brdrcf1 \clbrdrr\brdrs\brdrw15\brdrcf1 
\cellx5670\clbrdrt\brdrs\brdrw15\brdrcf1 \clbrdrl\brdrs\brdrw15\brdrcf1 \clbrdrb\brdrs\brdrw15\brdrcf1 \clbrdrr\brdrs\brdrw15\brdrcf1 \cellx8640 \pard \intbl {\b Bindery Name\cell Local Name\cell Data Type(s)\cell Default Security\cell Notes\cell }\pard 
\intbl {\b \row }\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw15\brdrcf1 \trbrdrl\brdrs\brdrw15\brdrcf1 \trbrdrb\brdrs\brdrw15\brdrcf1 \trbrdrr\brdrs\brdrw15\brdrcf1 \trbrdrh\brdrs\brdrw15\brdrcf1 \trbrdrv\brdrs\brdrw15\brdrcf1 \clbrdrt
\brdrs\brdrw15\brdrcf1 \clbrdrl\brdrs\brdrw15\brdrcf1 \clbrdrb\brdrs\brdrw15\brdrcf1 \clbrdrr\brdrs\brdrw15\brdrcf1 \cellx1692\clbrdrt\brdrs\brdrw15\brdrcf1 \clbrdrl\brdrs\brdrw15\brdrcf1 \clbrdrb\brdrs\brdrw15\brdrcf1 \clbrdrr\brdrs\brdrw15\brdrcf1 
\cellx3600\clbrdrt\brdrs\brdrw15\brdrcf1 \clbrdrl\brdrs\brdrw15\brdrcf1 \clbrdrb\brdrs\brdrw15\brdrcf1 \clbrdrr\brdrs\brdrw15\brdrcf1 \cellx4584\clbrdrt\brdrs\brdrw15\brdrcf1 \clbrdrl\brdrs\brdrw15\brdrcf1 \clbrdrb\brdrs\brdrw15\brdrcf1 \clbrdrr
\brdrs\brdrw15\brdrcf1 \cellx5670\clbrdrt\brdrs\brdrw15\brdrcf1 \clbrdrl\brdrs\brdrw15\brdrcf1 \clbrdrb\brdrs\brdrw15\brdrcf1 \clbrdrr\brdrs\brdrw15\brdrcf1 \cellx8640 \pard \intbl {\fs16 NET_ADDRESS\cell }\cell \cell \cell \cell \pard \intbl \row \pard 
\intbl {\fs16 OPERATORS\cell }\cell \cell \cell \cell \pard \intbl \row \pard \intbl {\fs16 \cell }\cell \cell \cell \cell \pard \intbl \row \pard \intbl {\fs16 \cell }\cell \cell \cell \cell \pard \intbl \row \pard \intbl {\fs16 \cell }\cell \cell \cell 
\cell \pard \intbl \row \trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw15\brdrcf1 \trbrdrl\brdrs\brdrw15\brdrcf1 \trbrdrb\brdrs\brdrw15\brdrcf1 \trbrdrr\brdrs\brdrw15\brdrcf1 \trbrdrh\brdrs\brdrw15\brdrcf1 \trbrdrv\brdrs\brdrw15\brdrcf1 \clbrdrt
\brdrs\brdrw15\brdrcf1 \clbrdrl\brdrs\brdrw15\brdrcf1 \clbrdrb\brdrs\brdrw15\brdrcf1 \clbrdrr\brdrs\brdrw15\brdrcf1 \cellx1692\clbrdrt\brdrs\brdrw15\brdrcf1 \clbrdrl\brdrs\brdrw15\brdrcf1 \clbrdrb\brdrs\brdrw15\brdrcf1 \clbrdrr\brdrs\brdrw15\brdrcf1 
\cellx3600\clbrdrt\brdrs\brdrw15\brdrcf1 \clbrdrl\brdrs\brdrw15\brdrcf1 \clbrdrb\brdrs\brdrw15\brdrcf1 \clbrdrr\brdrs\brdrw15\brdrcf1 \cellx4584\clbrdrt\brdrs\brdrw15\brdrcf1 \clbrdrl\brdrs\brdrw15\brdrcf1 \clbrdrb\brdrs\brdrw15\brdrcf1 \clbrdrr
\brdrs\brdrw15\brdrcf1 \cellx5670\clbrdrt\brdrs\brdrw15\brdrcf1 \clbrdrl\brdrs\brdrw15\brdrcf1 \clbrdrb\brdrs\brdrw15\brdrcf1 \clbrdrr\brdrs\brdrw15\brdrcf1 \cellx8640 \pard \intbl {\fs16 \cell }\cell \cell \cell \cell \pard \intbl \row \pard \ri20 

\par 
\par {\b User Group Objects
\par 
\par }\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw15\brdrcf1 \trbrdrl\brdrs\brdrw15\brdrcf1 \trbrdrb\brdrs\brdrw15\brdrcf1 \trbrdrr\brdrs\brdrw15\brdrcf1 \trbrdrh\brdrs\brdrw15\brdrcf1 \trbrdrv\brdrs\brdrw15\brdrcf1 \clbrdrt\brdrs\brdrw15\brdrcf1 \clbrdrl
\brdrs\brdrw15\brdrcf1 \clbrdrb\brdrs\brdrw15\brdrcf1 \clbrdrr\brdrs\brdrw15\brdrcf1 \cellx1692\clbrdrt\brdrs\brdrw15\brdrcf1 \clbrdrl\brdrs\brdrw15\brdrcf1 \clbrdrb\brdrs\brdrw15\brdrcf1 \clbrdrr\brdrs\brdrw15\brdrcf1 \cellx3600\clbrdrt
\brdrs\brdrw15\brdrcf1 \clbrdrl\brdrs\brdrw15\brdrcf1 \clbrdrb\brdrs\brdrw15\brdrcf1 \clbrdrr\brdrs\brdrw15\brdrcf1 \cellx4584\clbrdrt\brdrs\brdrw15\brdrcf1 \clbrdrl\brdrs\brdrw15\brdrcf1 \clbrdrb\brdrs\brdrw15\brdrcf1 \clbrdrr\brdrs\brdrw15\brdrcf1 
\cellx5670\clbrdrt\brdrs\brdrw15\brdrcf1 \clbrdrl\brdrs\brdrw15\brdrcf1 \clbrdrb\brdrs\brdrw15\brdrcf1 \clbrdrr\brdrs\brdrw15\brdrcf1 \cellx8640 \pard \intbl {\b Bindery Name\cell Local Name\cell Data Type(s)\cell Default Security\cell Notes\cell }\pard 
\intbl {\b \row }\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw15\brdrcf1 \trbrdrl\brdrs\brdrw15\brdrcf1 \trbrdrb\brdrs\brdrw15\brdrcf1 \trbrdrr\brdrs\brdrw15\brdrcf1 \trbrdrh\brdrs\brdrw15\brdrcf1 \trbrdrv\brdrs\brdrw15\brdrcf1 \clbrdrt
\brdrs\brdrw15\brdrcf1 \clbrdrl\brdrs\brdrw15\brdrcf1 \clbrdrb\brdrs\brdrw15\brdrcf1 \clbrdrr\brdrs\brdrw15\brdrcf1 \cellx1692\clbrdrt\brdrs\brdrw15\brdrcf1 \clbrdrl\brdrs\brdrw15\brdrcf1 \clbrdrb\brdrs\brdrw15\brdrcf1 \clbrdrr\brdrs\brdrw15\brdrcf1 
\cellx3600\clbrdrt\brdrs\brdrw15\brdrcf1 \clbrdrl\brdrs\brdrw15\brdrcf1 \clbrdrb\brdrs\brdrw15\brdrcf1 \clbrdrr\brdrs\brdrw15\brdrcf1 \cellx4584\clbrdrt\brdrs\brdrw15\brdrcf1 \clbrdrl\brdrs\brdrw15\brdrcf1 \clbrdrb\brdrs\brdrw15\brdrcf1 \clbrdrr
\brdrs\brdrw15\brdrcf1 \cellx5670\clbrdrt\brdrs\brdrw15\brdrcf1 \clbrdrl\brdrs\brdrw15\brdrcf1 \clbrdrb\brdrs\brdrw15\brdrcf1 \clbrdrr\brdrs\brdrw15\brdrcf1 \cellx8640 \pard \intbl {\fs16 ACL\cell }\cell \cell \cell Emu\cell \pard \intbl \row \pard 
\intbl {\fs16 CN\cell }\cell \cell \cell \cell \pard \intbl \row \pard \intbl {\fs16 GROUP_MEMBERS\cell }\cell \cell \cell \cell \pard \intbl \row \pard \intbl {\fs16 MANAGERS\cell }\cell \cell \cell \cell \pard \intbl \row \pard \intbl {\fs16 
OBJECT_CLASS\cell }\cell \cell \cell \cell \pard \intbl \row \trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw15\brdrcf1 \trbrdrl\brdrs\brdrw15\brdrcf1 \trbrdrb\brdrs\brdrw15\brdrcf1 \trbrdrr\brdrs\brdrw15\brdrcf1 \trbrdrh\brdrs\brdrw15\brdrcf1 \trbrdrv
\brdrs\brdrw15\brdrcf1 \clbrdrt\brdrs\brdrw15\brdrcf1 \clbrdrl\brdrs\brdrw15\brdrcf1 \clbrdrb\brdrs\brdrw15\brdrcf1 \clbrdrr\brdrs\brdrw15\brdrcf1 \cellx1692\clbrdrt\brdrs\brdrw15\brdrcf1 \clbrdrl\brdrs\brdrw15\brdrcf1 \clbrdrb\brdrs\brdrw15\brdrcf1 
\clbrdrr\brdrs\brdrw15\brdrcf1 \cellx3600\clbrdrt\brdrs\brdrw15\brdrcf1 \clbrdrl\brdrs\brdrw15\brdrcf1 \clbrdrb\brdrs\brdrw15\brdrcf1 \clbrdrr\brdrs\brdrw15\brdrcf1 \cellx4584\clbrdrt\brdrs\brdrw15\brdrcf1 \clbrdrl\brdrs\brdrw15\brdrcf1 \clbrdrb
\brdrs\brdrw15\brdrcf1 \clbrdrr\brdrs\brdrw15\brdrcf1 \cellx5670\clbrdrt\brdrs\brdrw15\brdrcf1 \clbrdrl\brdrs\brdrw15\brdrcf1 \clbrdrb\brdrs\brdrw15\brdrcf1 \clbrdrr\brdrs\brdrw15\brdrcf1 \cellx8640 \pard \intbl {\fs16 \cell }\cell \cell \cell \cell 
\pard \intbl \row \pard \ri20 
\par 
\par {\b User Objects
\par }
\par \trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw15\brdrcf1 \trbrdrl\brdrs\brdrw15\brdrcf1 \trbrdrb\brdrs\brdrw15\brdrcf1 \trbrdrr\brdrs\brdrw15\brdrcf1 \trbrdrh\brdrs\brdrw15\brdrcf1 \trbrdrv\brdrs\brdrw15\brdrcf1 \clbrdrt\brdrs\brdrw15\brdrcf1 \clbrdrl
\brdrs\brdrw15\brdrcf1 \clbrdrb\brdrs\brdrw15\brdrcf1 \clbrdrr\brdrs\brdrw15\brdrcf1 \cellx1692\clbrdrt\brdrs\brdrw15\brdrcf1 \clbrdrl\brdrs\brdrw15\brdrcf1 \clbrdrb\brdrs\brdrw15\brdrcf1 \clbrdrr\brdrs\brdrw15\brdrcf1 \cellx3600\clbrdrt
\brdrs\brdrw15\brdrcf1 \clbrdrl\brdrs\brdrw15\brdrcf1 \clbrdrb\brdrs\brdrw15\brdrcf1 \clbrdrr\brdrs\brdrw15\brdrcf1 \cellx4584\clbrdrt\brdrs\brdrw15\brdrcf1 \clbrdrl\brdrs\brdrw15\brdrcf1 \clbrdrb\brdrs\brdrw15\brdrcf1 \clbrdrr\brdrs\brdrw15\brdrcf1 
\cellx5670\clbrdrt\brdrs\brdrw15\brdrcf1 \clbrdrl\brdrs\brdrw15\brdrcf1 \clbrdrb\brdrs\brdrw15\brdrcf1 \clbrdrr\brdrs\brdrw15\brdrcf1 \cellx8640 \pard \intbl {\b Bindery Name\cell Local Name\cell Data Type(s)\cell Default Security\cell Notes\cell }\pard 
\intbl {\b \row }\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw15\brdrcf1 \trbrdrl\brdrs\brdrw15\brdrcf1 \trbrdrb\brdrs\brdrw15\brdrcf1 \trbrdrr\brdrs\brdrw15\brdrcf1 \trbrdrh\brdrs\brdrw15\brdrcf1 \trbrdrv\brdrs\brdrw15\brdrcf1 \clbrdrt
\brdrs\brdrw15\brdrcf1 \clbrdrl\brdrs\brdrw15\brdrcf1 \clbrdrb\brdrs\brdrw15\brdrcf1 \clbrdrr\brdrs\brdrw15\brdrcf1 \cellx1692\clbrdrt\brdrs\brdrw15\brdrcf1 \clbrdrl\brdrs\brdrw15\brdrcf1 \clbrdrb\brdrs\brdrw15\brdrcf1 \clbrdrr\brdrs\brdrw15\brdrcf1 
\cellx3600\clbrdrt\brdrs\brdrw15\brdrcf1 \clbrdrl\brdrs\brdrw15\brdrcf1 \clbrdrb\brdrs\brdrw15\brdrcf1 \clbrdrr\brdrs\brdrw15\brdrcf1 \cellx4584\clbrdrt\brdrs\brdrw15\brdrcf1 \clbrdrl\brdrs\brdrw15\brdrcf1 \clbrdrb\brdrs\brdrw15\brdrcf1 \clbrdrr
\brdrs\brdrw15\brdrcf1 \cellx5670\clbrdrt\brdrs\brdrw15\brdrcf1 \clbrdrl\brdrs\brdrw15\brdrcf1 \clbrdrb\brdrs\brdrw15\brdrcf1 \clbrdrr\brdrs\brdrw15\brdrcf1 \cellx8640 \pard \intbl {\fs16 ACL\cell }\cell \cell \cell Emu\cell \pard \intbl \row \pard 
\intbl {\fs16 AFP_X_MAP_INFO\cell }\cell \cell \cell Emu\cell \pard \intbl \row \pard \intbl {\fs16 BACK_LINK\cell }\cell \cell \cell Emu\cell \pard \intbl \row \pard \intbl {\fs16 CN\cell }\cell \cell \cell Emu\cell \pard \intbl \row \pard \intbl {\fs16 
DELIVERY_OFFICE\cell }\cell \cell \cell Emu\cell \pard \intbl \row \pard \intbl {\fs16 EMAIL_ADDRESS\cell }\cell \cell \cell \cell \pard \intbl \row \pard \intbl {\fs16 FAX_NUMBER\cell }\cell \cell \cell \cell \pard \intbl \row \pard \intbl {\fs16 
GROUPS_I'M_IN\cell }\cell SET\cell \cell Bind & Emu\cell \pard \intbl \row \pard \intbl {\fs16 HOME_DIRECTORY\cell }\cell \cell \cell \cell \pard \intbl \row \pard \intbl {\fs16 IDENTIFICATION\cell }\cell \cell \cell Bind (3.11)\cell \pard \intbl \row 
\pard \intbl {\fs16 L\cell }\cell \cell \cell \cell \pard \intbl \row \pard \intbl {\fs16 LANGUAGE\cell }\cell \cell \cell \cell \pard \intbl \row \pard \intbl {\fs16 LOGIN_CONTROL\cell }\cell \cell \cell Bind & Emu\cell \pard \intbl \row \pard \intbl {
\fs16 LOGIN_SCRIPT\cell }\cell \cell \cell Bind & Emu\cell \pard \intbl \row \pard \intbl {\fs16 MANAGERS\cell }\cell SET\cell \cell Bind & Emu\cell \pard \intbl \row \pard \intbl {\fs16 MESSAGE_SERVER\cell }\cell \cell \cell \cell \pard \intbl \row 
\pard \intbl {\fs16 MISC_LOGIN_INFO\cell }\cell \cell \cell Bind & Emu\cell \pard \intbl \row \pard \intbl {\fs16 OBJECT_CLASS\cell }\cell \cell \cell \cell \pard \intbl \row \pard \intbl {\fs16 OU\cell }\cell \cell \cell \cell \pard \intbl \row \pard 
\intbl {\fs16 PHONE_NUMBER\cell }\cell \cell \cell \cell \pard \intbl \row \pard \intbl {\fs16 POSTAL_ADDRESS\cell }\cell \cell \cell \cell \pard \intbl \row \pard \intbl {\fs16 POSTAL_CODE\cell }\cell \cell \cell \cell \pard \intbl \row \pard \intbl {
\fs16 POST_OFFICE_BOX\cell }\cell \cell \cell \cell \pard \intbl \row \pard \intbl {\fs16 S\cell }\pard \intbl \cell \pard \intbl \cell \pard \intbl \cell \pard \intbl \cell \pard \intbl \row \pard \intbl {\fs16 SA\cell }\pard \intbl \cell \pard \intbl 
\cell \pard \intbl \cell \pard \intbl \cell \pard \intbl \row \pard \intbl {\fs16 SECURITY_EQUALS\cell }\pard \intbl \cell \pard \intbl SET\cell \pard \intbl \cell \pard \intbl Bind & Emu\cell \pard \intbl \row \pard \intbl {\fs16 SURNAME\cell }\pard 
\intbl \cell \pard \intbl \cell \pard \intbl \cell \pard \intbl \cell \pard \intbl \row \pard \intbl {\fs16 TITLE\cell }\pard \intbl \cell \pard \intbl \cell \pard \intbl \cell \pard \intbl \cell \pard \intbl \row \pard \intbl {\fs16 \cell }\pard \intbl 
\cell \pard \intbl \cell \pard \intbl \cell \pard \intbl \cell \pard \intbl \row \pard \intbl {\fs16 \cell }\pard \intbl \cell \pard \intbl \cell \pard \intbl \cell \pard \intbl \cell \pard \intbl \row \pard \intbl {\fs16 \cell }\pard \intbl \cell \pard 
\intbl \cell \pard \intbl \cell \pard \intbl \cell \pard \intbl \row \trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw15\brdrcf1 \trbrdrl\brdrs\brdrw15\brdrcf1 \trbrdrb\brdrs\brdrw15\brdrcf1 \trbrdrr\brdrs\brdrw15\brdrcf1 \trbrdrh\brdrs\brdrw15\brdrcf1 
\trbrdrv\brdrs\brdrw15\brdrcf1 \clbrdrt\brdrs\brdrw15\brdrcf1 \clbrdrl\brdrs\brdrw15\brdrcf1 \clbrdrb\brdrs\brdrw15\brdrcf1 \clbrdrr\brdrs\brdrw15\brdrcf1 \cellx1692\clbrdrt\brdrs\brdrw15\brdrcf1 \clbrdrl\brdrs\brdrw15\brdrcf1 \clbrdrb
\brdrs\brdrw15\brdrcf1 \clbrdrr\brdrs\brdrw15\brdrcf1 \cellx3600\clbrdrt\brdrs\brdrw15\brdrcf1 \clbrdrl\brdrs\brdrw15\brdrcf1 \clbrdrb\brdrs\brdrw15\brdrcf1 \clbrdrr\brdrs\brdrw15\brdrcf1 \cellx4584\clbrdrt\brdrs\brdrw15\brdrcf1 \clbrdrl
\brdrs\brdrw15\brdrcf1 \clbrdrb\brdrs\brdrw15\brdrcf1 \clbrdrr\brdrs\brdrw15\brdrcf1 \cellx5670\clbrdrt\brdrs\brdrw15\brdrcf1 \clbrdrl\brdrs\brdrw15\brdrcf1 \clbrdrb\brdrs\brdrw15\brdrcf1 \clbrdrr\brdrs\brdrw15\brdrcf1 \cellx8640 \pard \intbl {\fs16 
\cell }\pard \intbl \cell \pard \intbl \cell \pard \intbl \cell \pard \intbl \cell \pard \intbl \row \pard \ri20 
\par {\b Print Server Objects
\par }\pard \ri20 {\b 
\par }\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw15\brdrcf1 \trbrdrl\brdrs\brdrw15\brdrcf1 \trbrdrb\brdrs\brdrw15\brdrcf1 \trbrdrr\brdrs\brdrw15\brdrcf1 \trbrdrh\brdrs\brdrw15\brdrcf1 \trbrdrv\brdrs\brdrw15\brdrcf1 \clbrdrt\brdrs\brdrw15\brdrcf1 \clbrdrl
\brdrs\brdrw15\brdrcf1 \clbrdrb\brdrs\brdrw15\brdrcf1 \clbrdrr\brdrs\brdrw15\brdrcf1 \cellx1692\clbrdrt\brdrs\brdrw15\brdrcf1 \clbrdrl\brdrs\brdrw15\brdrcf1 \clbrdrb\brdrs\brdrw15\brdrcf1 \clbrdrr\brdrs\brdrw15\brdrcf1 \cellx3600\clbrdrt
\brdrs\brdrw15\brdrcf1 \clbrdrl\brdrs\brdrw15\brdrcf1 \clbrdrb\brdrs\brdrw15\brdrcf1 \clbrdrr\brdrs\brdrw15\brdrcf1 \cellx4584\clbrdrt\brdrs\brdrw15\brdrcf1 \clbrdrl\brdrs\brdrw15\brdrcf1 \clbrdrb\brdrs\brdrw15\brdrcf1 \clbrdrr\brdrs\brdrw15\brdrcf1 
\cellx5670\clbrdrt\brdrs\brdrw15\brdrcf1 \clbrdrl\brdrs\brdrw15\brdrcf1 \clbrdrb\brdrs\brdrw15\brdrcf1 \clbrdrr\brdrs\brdrw15\brdrcf1 \cellx8640 \pard \intbl {\b Bindery Name\cell }\pard \intbl {\b Local Name\cell }\pard \intbl {\b Data Type(s)\cell 
}\pard \intbl {\b Default Security\cell }\pard \intbl {\b Notes\cell }\pard \intbl {\b \row }\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw15\brdrcf1 \trbrdrl\brdrs\brdrw15\brdrcf1 \trbrdrb\brdrs\brdrw15\brdrcf1 \trbrdrr\brdrs\brdrw15\brdrcf1 \trbrdrh
\brdrs\brdrw15\brdrcf1 \trbrdrv\brdrs\brdrw15\brdrcf1 \clbrdrt\brdrs\brdrw15\brdrcf1 \clbrdrl\brdrs\brdrw15\brdrcf1 \clbrdrb\brdrs\brdrw15\brdrcf1 \clbrdrr\brdrs\brdrw15\brdrcf1 \cellx1692\clbrdrt\brdrs\brdrw15\brdrcf1 \clbrdrl\brdrs\brdrw15\brdrcf1 
\clbrdrb\brdrs\brdrw15\brdrcf1 \clbrdrr\brdrs\brdrw15\brdrcf1 \cellx3600\clbrdrt\brdrs\brdrw15\brdrcf1 \clbrdrl\brdrs\brdrw15\brdrcf1 \clbrdrb\brdrs\brdrw15\brdrcf1 \clbrdrr\brdrs\brdrw15\brdrcf1 \cellx4584\clbrdrt\brdrs\brdrw15\brdrcf1 \clbrdrl
\brdrs\brdrw15\brdrcf1 \clbrdrb\brdrs\brdrw15\brdrcf1 \clbrdrr\brdrs\brdrw15\brdrcf1 \cellx5670\clbrdrt\brdrs\brdrw15\brdrcf1 \clbrdrl\brdrs\brdrw15\brdrcf1 \clbrdrb\brdrs\brdrw15\brdrcf1 \clbrdrr\brdrs\brdrw15\brdrcf1 \cellx8640 \pard \intbl {\fs16 
IDENTIFICATION\cell }\pard \intbl \cell \pard \intbl \cell \pard \intbl \cell \pard \intbl \cell \pard \intbl \row \pard \intbl {\fs16 PS_OPERATORS\cell }\pard \intbl \cell \pard \intbl \cell \pard \intbl \cell \pard \intbl \cell \pard \intbl \row \pard 
\intbl {\fs16 PS_USERS\cell }\pard \intbl \cell \pard \intbl \cell \pard \intbl \cell \pard \intbl \cell \pard \intbl \row \pard \intbl {\fs16 \cell }\pard \intbl \cell \pard \intbl \cell \pard \intbl \cell \pard \intbl \cell \pard \intbl \row \pard 
\intbl {\fs16 \cell }\pard \intbl \cell \pard \intbl \cell \pard \intbl \cell \pard \intbl \cell \pard \intbl \row \trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw15\brdrcf1 \trbrdrl\brdrs\brdrw15\brdrcf1 \trbrdrb\brdrs\brdrw15\brdrcf1 \trbrdrr
\brdrs\brdrw15\brdrcf1 \trbrdrh\brdrs\brdrw15\brdrcf1 \trbrdrv\brdrs\brdrw15\brdrcf1 \clbrdrt\brdrs\brdrw15\brdrcf1 \clbrdrl\brdrs\brdrw15\brdrcf1 \clbrdrb\brdrs\brdrw15\brdrcf1 \clbrdrr\brdrs\brdrw15\brdrcf1 \cellx1692\clbrdrt\brdrs\brdrw15\brdrcf1 
\clbrdrl\brdrs\brdrw15\brdrcf1 \clbrdrb\brdrs\brdrw15\brdrcf1 \clbrdrr\brdrs\brdrw15\brdrcf1 \cellx3600\clbrdrt\brdrs\brdrw15\brdrcf1 \clbrdrl\brdrs\brdrw15\brdrcf1 \clbrdrb\brdrs\brdrw15\brdrcf1 \clbrdrr\brdrs\brdrw15\brdrcf1 \cellx4584\clbrdrt
\brdrs\brdrw15\brdrcf1 \clbrdrl\brdrs\brdrw15\brdrcf1 \clbrdrb\brdrs\brdrw15\brdrcf1 \clbrdrr\brdrs\brdrw15\brdrcf1 \cellx5670\clbrdrt\brdrs\brdrw15\brdrcf1 \clbrdrl\brdrs\brdrw15\brdrcf1 \clbrdrb\brdrs\brdrw15\brdrcf1 \clbrdrr\brdrs\brdrw15\brdrcf1 
\cellx8640 \pard \intbl {\fs16 \cell }\pard \intbl \cell \pard \intbl \cell \pard \intbl \cell \pard \intbl \cell \pard \intbl \row \pard \ri20 
\par 
\par {\b Print Queue Objects
\par }\pard \ri20 {\b 
\par }\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw15\brdrcf1 \trbrdrl\brdrs\brdrw15\brdrcf1 \trbrdrb\brdrs\brdrw15\brdrcf1 \trbrdrr\brdrs\brdrw15\brdrcf1 \trbrdrh\brdrs\brdrw15\brdrcf1 \trbrdrv\brdrs\brdrw15\brdrcf1 \clbrdrt\brdrs\brdrw15\brdrcf1 \clbrdrl
\brdrs\brdrw15\brdrcf1 \clbrdrb\brdrs\brdrw15\brdrcf1 \clbrdrr\brdrs\brdrw15\brdrcf1 \cellx1692\clbrdrt\brdrs\brdrw15\brdrcf1 \clbrdrl\brdrs\brdrw15\brdrcf1 \clbrdrb\brdrs\brdrw15\brdrcf1 \clbrdrr\brdrs\brdrw15\brdrcf1 \cellx3600\clbrdrt
\brdrs\brdrw15\brdrcf1 \clbrdrl\brdrs\brdrw15\brdrcf1 \clbrdrb\brdrs\brdrw15\brdrcf1 \clbrdrr\brdrs\brdrw15\brdrcf1 \cellx4584\clbrdrt\brdrs\brdrw15\brdrcf1 \clbrdrl\brdrs\brdrw15\brdrcf1 \clbrdrb\brdrs\brdrw15\brdrcf1 \clbrdrr\brdrs\brdrw15\brdrcf1 
\cellx5670\clbrdrt\brdrs\brdrw15\brdrcf1 \clbrdrl\brdrs\brdrw15\brdrcf1 \clbrdrb\brdrs\brdrw15\brdrcf1 \clbrdrr\brdrs\brdrw15\brdrcf1 \cellx8640 \pard \intbl {\b Bindery Name\cell }\pard \intbl {\b Local Name\cell }\pard \intbl {\b Data Type(s)\cell 
}\pard \intbl {\b Default Security\cell }\pard \intbl {\b Notes\cell }\pard \intbl {\b \row }\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw15\brdrcf1 \trbrdrl\brdrs\brdrw15\brdrcf1 \trbrdrb\brdrs\brdrw15\brdrcf1 \trbrdrr\brdrs\brdrw15\brdrcf1 \trbrdrh
\brdrs\brdrw15\brdrcf1 \trbrdrv\brdrs\brdrw15\brdrcf1 \clbrdrt\brdrs\brdrw15\brdrcf1 \clbrdrl\brdrs\brdrw15\brdrcf1 \clbrdrb\brdrs\brdrw15\brdrcf1 \clbrdrr\brdrs\brdrw15\brdrcf1 \cellx1692\clbrdrt\brdrs\brdrw15\brdrcf1 \clbrdrl\brdrs\brdrw15\brdrcf1 
\clbrdrb\brdrs\brdrw15\brdrcf1 \clbrdrr\brdrs\brdrw15\brdrcf1 \cellx3600\clbrdrt\brdrs\brdrw15\brdrcf1 \clbrdrl\brdrs\brdrw15\brdrcf1 \clbrdrb\brdrs\brdrw15\brdrcf1 \clbrdrr\brdrs\brdrw15\brdrcf1 \cellx4584\clbrdrt\brdrs\brdrw15\brdrcf1 \clbrdrl
\brdrs\brdrw15\brdrcf1 \clbrdrb\brdrs\brdrw15\brdrcf1 \clbrdrr\brdrs\brdrw15\brdrcf1 \cellx5670\clbrdrt\brdrs\brdrw15\brdrcf1 \clbrdrl\brdrs\brdrw15\brdrcf1 \clbrdrb\brdrs\brdrw15\brdrcf1 \clbrdrr\brdrs\brdrw15\brdrcf1 \cellx8640 \pard \intbl {\fs16 
Q_OPERATORS\cell }\pard \intbl \cell \pard \intbl \cell \pard \intbl \cell \pard \intbl \cell \pard \intbl \row \pard \intbl {\fs16 Q_SERVERS\cell }\pard \intbl \cell \pard \intbl \cell \pard \intbl \cell \pard \intbl \cell \pard \intbl \row \pard \intbl 
{\fs16 Q_USERS\cell }\pard \intbl \cell \pard \intbl \cell \pard \intbl \cell \pard \intbl \cell \pard \intbl \row \pard \intbl {\fs16 \cell }\pard \intbl \cell \pard \intbl \cell \pard \intbl \cell \pard \intbl \cell \pard \intbl \row \pard \intbl {
\fs16 \cell }\pard \intbl \cell \pard \intbl \cell \pard \intbl \cell \pard \intbl \cell \pard \intbl \row \trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw15\brdrcf1 \trbrdrl\brdrs\brdrw15\brdrcf1 \trbrdrb\brdrs\brdrw15\brdrcf1 \trbrdrr
\brdrs\brdrw15\brdrcf1 \trbrdrh\brdrs\brdrw15\brdrcf1 \trbrdrv\brdrs\brdrw15\brdrcf1 \clbrdrt\brdrs\brdrw15\brdrcf1 \clbrdrl\brdrs\brdrw15\brdrcf1 \clbrdrb\brdrs\brdrw15\brdrcf1 \clbrdrr\brdrs\brdrw15\brdrcf1 \cellx1692\clbrdrt\brdrs\brdrw15\brdrcf1 
\clbrdrl\brdrs\brdrw15\brdrcf1 \clbrdrb\brdrs\brdrw15\brdrcf1 \clbrdrr\brdrs\brdrw15\brdrcf1 \cellx3600\clbrdrt\brdrs\brdrw15\brdrcf1 \clbrdrl\brdrs\brdrw15\brdrcf1 \clbrdrb\brdrs\brdrw15\brdrcf1 \clbrdrr\brdrs\brdrw15\brdrcf1 \cellx4584\clbrdrt
\brdrs\brdrw15\brdrcf1 \clbrdrl\brdrs\brdrw15\brdrcf1 \clbrdrb\brdrs\brdrw15\brdrcf1 \clbrdrr\brdrs\brdrw15\brdrcf1 \cellx5670\clbrdrt\brdrs\brdrw15\brdrcf1 \clbrdrl\brdrs\brdrw15\brdrcf1 \clbrdrb\brdrs\brdrw15\brdrcf1 \clbrdrr\brdrs\brdrw15\brdrcf1 
\cellx8640 \pard \intbl {\fs16 \cell }\pard \intbl \cell \pard \intbl \cell \pard \intbl \cell \pard \intbl \cell \pard \intbl \row \pard \ri20 
\par 
\par {\b Archive Queue Objects
\par }\pard \ri20 {\b 
\par }\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw15\brdrcf1 \trbrdrl\brdrs\brdrw15\brdrcf1 \trbrdrb\brdrs\brdrw15\brdrcf1 \trbrdrr\brdrs\brdrw15\brdrcf1 \trbrdrh\brdrs\brdrw15\brdrcf1 \trbrdrv\brdrs\brdrw15\brdrcf1 \clbrdrt\brdrs\brdrw15\brdrcf1 \clbrdrl
\brdrs\brdrw15\brdrcf1 \clbrdrb\brdrs\brdrw15\brdrcf1 \clbrdrr\brdrs\brdrw15\brdrcf1 \cellx1692\clbrdrt\brdrs\brdrw15\brdrcf1 \clbrdrl\brdrs\brdrw15\brdrcf1 \clbrdrb\brdrs\brdrw15\brdrcf1 \clbrdrr\brdrs\brdrw15\brdrcf1 \cellx3600\clbrdrt
\brdrs\brdrw15\brdrcf1 \clbrdrl\brdrs\brdrw15\brdrcf1 \clbrdrb\brdrs\brdrw15\brdrcf1 \clbrdrr\brdrs\brdrw15\brdrcf1 \cellx4584\clbrdrt\brdrs\brdrw15\brdrcf1 \clbrdrl\brdrs\brdrw15\brdrcf1 \clbrdrb\brdrs\brdrw15\brdrcf1 \clbrdrr\brdrs\brdrw15\brdrcf1 
\cellx5670\clbrdrt\brdrs\brdrw15\brdrcf1 \clbrdrl\brdrs\brdrw15\brdrcf1 \clbrdrb\brdrs\brdrw15\brdrcf1 \clbrdrr\brdrs\brdrw15\brdrcf1 \cellx8640 \pard \intbl {\b Bindery Name\cell }\pard \intbl {\b Local Name\cell }\pard \intbl {\b Data Type(s)\cell 
}\pard \intbl {\b Default Security\cell }\pard \intbl {\b Notes\cell }\pard \intbl {\b \row }\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw15\brdrcf1 \trbrdrl\brdrs\brdrw15\brdrcf1 \trbrdrb\brdrs\brdrw15\brdrcf1 \trbrdrr\brdrs\brdrw15\brdrcf1 \trbrdrh
\brdrs\brdrw15\brdrcf1 \trbrdrv\brdrs\brdrw15\brdrcf1 \clbrdrt\brdrs\brdrw15\brdrcf1 \clbrdrl\brdrs\brdrw15\brdrcf1 \clbrdrb\brdrs\brdrw15\brdrcf1 \clbrdrr\brdrs\brdrw15\brdrcf1 \cellx1692\clbrdrt\brdrs\brdrw15\brdrcf1 \clbrdrl\brdrs\brdrw15\brdrcf1 
\clbrdrb\brdrs\brdrw15\brdrcf1 \clbrdrr\brdrs\brdrw15\brdrcf1 \cellx3600\clbrdrt\brdrs\brdrw15\brdrcf1 \clbrdrl\brdrs\brdrw15\brdrcf1 \clbrdrb\brdrs\brdrw15\brdrcf1 \clbrdrr\brdrs\brdrw15\brdrcf1 \cellx4584\clbrdrt\brdrs\brdrw15\brdrcf1 \clbrdrl
\brdrs\brdrw15\brdrcf1 \clbrdrb\brdrs\brdrw15\brdrcf1 \clbrdrr\brdrs\brdrw15\brdrcf1 \cellx5670\clbrdrt\brdrs\brdrw15\brdrcf1 \clbrdrl\brdrs\brdrw15\brdrcf1 \clbrdrb\brdrs\brdrw15\brdrcf1 \clbrdrr\brdrs\brdrw15\brdrcf1 \cellx8640 \pard \intbl {\fs16 
Q_DIRECTORY\cell }\pard \intbl \cell \pard \intbl \cell \pard \intbl \cell \pard \intbl \cell \pard \intbl \row \pard \intbl {\fs16 Q_OPERATORS\cell }\pard \intbl \cell \pard \intbl \cell \pard \intbl \cell \pard \intbl \cell \pard \intbl \row \pard 
\intbl {\fs16 Q_PRIORITY\cell }\pard \intbl \cell \pard \intbl \cell \pard \intbl \cell \pard \intbl \cell \pard \intbl \row \pard \intbl {\fs16 Q_SERVERS\cell }\pard \intbl \cell \pard \intbl \cell \pard \intbl \cell \pard \intbl \cell \pard \intbl \row 
\pard \intbl {\fs16 Q_USERS\cell }\pard \intbl \cell \pard \intbl \cell \pard \intbl \cell \pard \intbl \cell \pard \intbl \row \trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw15\brdrcf1 \trbrdrl\brdrs\brdrw15\brdrcf1 \trbrdrb\brdrs\brdrw15\brdrcf1 
\trbrdrr\brdrs\brdrw15\brdrcf1 \trbrdrh\brdrs\brdrw15\brdrcf1 \trbrdrv\brdrs\brdrw15\brdrcf1 \clbrdrt\brdrs\brdrw15\brdrcf1 \clbrdrl\brdrs\brdrw15\brdrcf1 \clbrdrb\brdrs\brdrw15\brdrcf1 \clbrdrr\brdrs\brdrw15\brdrcf1 \cellx1692\clbrdrt
\brdrs\brdrw15\brdrcf1 \clbrdrl\brdrs\brdrw15\brdrcf1 \clbrdrb\brdrs\brdrw15\brdrcf1 \clbrdrr\brdrs\brdrw15\brdrcf1 \cellx3600\clbrdrt\brdrs\brdrw15\brdrcf1 \clbrdrl\brdrs\brdrw15\brdrcf1 \clbrdrb\brdrs\brdrw15\brdrcf1 \clbrdrr\brdrs\brdrw15\brdrcf1 
\cellx4584\clbrdrt\brdrs\brdrw15\brdrcf1 \clbrdrl\brdrs\brdrw15\brdrcf1 \clbrdrb\brdrs\brdrw15\brdrcf1 \clbrdrr\brdrs\brdrw15\brdrcf1 \cellx5670\clbrdrt\brdrs\brdrw15\brdrcf1 \clbrdrl\brdrs\brdrw15\brdrcf1 \clbrdrb\brdrs\brdrw15\brdrcf1 \clbrdrr
\brdrs\brdrw15\brdrcf1 \cellx8640 \pard \intbl {\fs16 \cell }\pard \intbl \cell \pard \intbl \cell \pard \intbl \cell \pard \intbl \cell \pard \intbl \row \pard \ri20 
\par 
\par }