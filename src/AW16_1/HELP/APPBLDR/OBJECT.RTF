{\rtf1\ansi \deff7\deflang1033{\fonttbl{\f0\froman Tms Rmn;}{\f1\froman Symbol;}{\f2\fswiss Helv;}{\f3\fmodern Courier;}
{\f4\froman Times New Roman;}{\f5\fswiss Arial;}{\f6\froman MS Serif;}{\f7\fswiss MS Sans Serif;}{\f8\froman Times;}{\f9\fswiss Helvetica{\*\falt Arial};}
{\f10\fswiss System;}{\f11\fmodern Courier New;}{\f12\fnil Wingdings;}{\f13\fswiss Arial Narrow;}{\f14\froman Book Antiqua;}{\f15\froman Bookman Old Style;}
{\f16\fswiss Century Gothic;}{\f17\froman Century Schoolbook;}{\f18\fscript Monotype Corsiva;}{\f19\fnil Monotype Sorts;}{\f20\fmodern MS LineDraw;}
{\f21\fdecor Algerian;}{\f22\fswiss Arial Rounded MT Bold;}{\f23\fdecor Braggadocio;}{\f24\fswiss Britannic Bold;}{\f25\fscript Brush Script MT;}
{\f26\fdecor Colonna MT;}{\f27\fdecor Desdemona;}{\f28\froman Footlight MT Light;}{\f29\fswiss Impact;}{\f30\fdecor Kino MT;}{\f31\froman Wide Latin;}
{\f32\fscript Matura MT Script Capitals;}{\f33\fdecor Playbill;}{\f34\fswiss Arial Super;}{\f35\fnil WP Greek Helve;}{\f36\fnil WP OverflowSet;}
{\f37\fnil WP Greek Courier;}{\f38\fscript Ribbon131 Bd BT;}{\f39\froman Humanst521 Lt BT;}{\f40\froman GeoSlab703 Lt BT;}{\f41\fswiss Swis721 BlkEx BT;}
{\f42\fswiss Humanst521 Cn BT;}{\f43\fdecor Onyx BT;}{\f44\fdecor CaslonOpnface BT;}{\f45\fswiss EngraversGothic BT;}{\f46\fscript ShelleyVolante BT;}
{\f47\froman BernhardMod BT;}{\f48\fscript Brush738 BT;}{\f49\fscript Blackletter686 BT;}{\f50\froman Arrus BT;}{\f51\froman Arrus Blk BT;}
{\f52\fscript OzHandicraft BT;}{\f53\fswiss WP Phonetic;}{\f54\fnil WP MathExtendedB;}{\f55\fnil WP BoxDrawing;}{\f56\fnil WP IconicSymbolsB;}
{\f57\fnil WP MathExtendedA;}{\f58\froman WP CyrillicA;}{\f59\fnil WP Japanese;}{\f60\fnil WP MathB;}{\f61\fnil WP IconicSymbolsA;}
{\f62\fnil WP Arabic Sihafa;}{\f63\fnil WP MultinationalA Roman;}{\f64\fnil WP CyrillicB;}{\f65\fnil WP MultinationalB Roman;}{\f66\fnil WP MathA;}
{\f67\fnil WP ArabicScript Sihafa;}{\f68\fnil WP Greek Century;}{\f69\fnil WP TypographicSymbols;}{\f70\fnil WP Hebrew David;}{\f71\fswiss Albertus (W1);}
{\f72\fswiss Albertus Xb (W1);}{\f73\fswiss Antique Olv (W1);}{\f74\fswiss CG Omega (W1);}{\f75\froman CG Times (W1);}{\f76\froman Clarendon Cd (W1);}
{\f77\fscript Coronet (W1);}{\f78\fmodern Courier (W1);}{\f79\froman Garmond (W1);}{\f80\fmodern Letter Gothic (W1);}{\f81\fmodern LinePrinter;}
{\f82\fscript Marigold (W1);}{\f83\fswiss Univers (W1);}{\f84\fswiss Univers Cd (W1);}{\f85\fmodern Modern;}{\f86\fscript Script;}{\f87\froman Roman;}
{\f88\fswiss MS Dialog;}{\f89\fswiss AGaramond;}{\f90\fswiss B Helvetica Bold;}{\f91\fnil Small Fonts;}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;
\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;
\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{\ri20 \f7\fs20 \snext0 Normal;}{\s1\ri20\sb240 \b\f5 \sbasedon0\snext0 heading 1;}{\s2\ri20\sb120 \b\f5 \sbasedon0\snext0 heading 2;}{\s3\ri14\sb240\sa120 \b\f5 \sbasedon0\snext0 heading 3;}{
\s4\ri20\sb240\sa60\keepn \b\i\f4 \sbasedon0\snext0 heading 4;}{\*\cs10 \additive Default Paragraph Font;}{\s15\li720\ri720\tldot\tx8280\tqr\tx8640 \f7\fs20\cf8 \sbasedon0\snext0 toc 2;}{\*\cs16 \additive\fs16\up6 \sbasedon10 footnote reference;}{
\s17\ri20 \f7\fs20 \sbasedon0\snext17 footnote text;}{\s18\ri14\keepn \b\f7\cf6 \sbasedon0\snext0 Help Topic Heading;}{\s19\ri20 \b\i\f7 \sbasedon0\snext19 Help See Also;}{\*\cs20 \additive\super \sbasedon10 endnote reference;}{\s21\ri20 \b\f7 
\sbasedon0\snext0 Help Popup Heading;}{\s22\ri20\sa60\tx720\tx1260 \b\f7\fs20 \sbasedon0\snext0 Topic Section;}{\s23\ri20\sb80 \f11 \sbasedon0\snext0 Function Syntax;}{\s24\ri20\sa120\tx2880 \f7\fs16 \sbasedon0\snext24 Topic Wizard Line 2;}{
\s25\ri14\keepn\tx720\tx1260 \b\f7\fs32\cf6 \sbasedon18\snext25 new 2;}{\s26\li360\ri20 \f7\fs20 \sbasedon0\snext0 hlpbrz_toc;}{\s27\li360\sa100 \f7\fs20 \sbasedon0\snext27 HelpBreeze TOC;}{\s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 
\f5\fs20 \sbasedon4\snext28 Normal Indent 4;}{\s29\fi-274\li274\ri20\sb120\sa120\tx270 \b\f7\fs20 \sbasedon0\snext29 Procedure;}{\s30\fi-2160\li2430\ri20\sa60\tx2430\dxfrtext187\dfrmtxtx187\dfrmtxty187 \f5\fs20 \sbasedon28\snext30 Normal TAB;}{
\s31\ri20\sb120 \b\f5 \sbasedon2\snext31 Function;}{\s32\sb120\keep \f89\fs22\cf1 \snext32 Body;}{\s33\qr\keep \f90\fs20 \sbasedon0\snext33 Signals;}{\s34\fi-216\li216\sb60\keep\tx216 \f89\fs22 \sbasedon32\snext34 Body - Bullet;}}{\info
{\title NetWare Services}{\author spiele}{\doccomm <project = >}{\operator spiele}{\creatim\yr1994\mo8\dy24\hr23\min53}{\revtim\yr1994\mo8\dy24\hr23\min53}{\version2}{\edmins5}{\nofpages64}{\nofwords9052}{\nofchars51599}{\vern49203}}\margl1440\margr1440 
\widowctrl\ftnbj\aenddoc\noextrasprl\prcolbl\cvmme\sprsspbf\brkfrm\swpbdr\hyphcaps0 \fet0{\*\template C:\\WINWORD\\TEMPLATE\\HLPBRZ6.DOT}\sectd \linex0\endnhere {\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl2
\pnucltr\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang{\pntxta )}}{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl6
\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang
{\pntxtb (}{\pntxta )}}\pard\plain \s18\ri14\keepn \b\f7\cf6 {\cs16\fs16\up6 #{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 #} IDH_VAB_OBJ}}{\*\bkmkstart IDH_VAB_OBJ}{\*\bkmkend IDH_VAB_OBJ} {\cs16\fs16\up6 ${\footnote \pard\plain \s17\ri20 
\f7\fs20 {\cs16\fs16\up6 $} Object Categories}} {\cs16\fs16\up6 K{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 K} Object Categories}} Object Categories
\par \pard\plain \s27\li360\sa100 \f7\fs20 
\par {\uldb\cf11 User Interface}{\v IDH_user_interface}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 
4944485f757365725f696e74657266616365}}}{\fldrslt }}{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}
\par {\uldb\cf11 Program Control}{\v IDH_program_control}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 
4944485f70726f6772616d5f636f6e74726f6c}}}{\fldrslt }}{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}
\par {\uldb\cf11 NetWare Services}{\v IDH_netware_services}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 
4944485f6e6574776172655f7365727669636573}}}{\fldrslt }}{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}
\par {\uldb\cf11 Client-Server}{\v IDH_client_server}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 
4944485f636c69656e745f736572766572}}}{\fldrslt }}{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}
\par {\uldb\cf11 Multimedia}{\v IDH_multimedia}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 4944485f6d756c74696d65646961}}
}{\fldrslt }}{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}
\par {\uldb\cf11 Communications}{\v IDH_communications}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 
4944485f636f6d6d756e69636174696f6e73}}}{\fldrslt }}{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}
\par {\uldb\cf11 Application Linking}{\v IDH_application_linking}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 
4944485f6170706c69636174696f6e5f6c696e6b696e67}}}{\fldrslt }}{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}
\par \pard \s27\li360\sa100 
\par \pard\plain \s18\ri14\keepn \b\f7\cf6 \page {\cs16\fs16\up6 {\*\bkmkstart IDH_user_interface}{\*\bkmkend IDH_user_interface}#{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 #} IDH_user_interface}} {\cs16\fs16\up6 ${\footnote \pard\plain 
\s17\ri20 \f7\fs20 {\cs16\fs16\up6 $} User Interface}} {\cs16\fs16\up6 K{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 K} User Interface}} User Interface
\par \pard\plain \s27\li360\sa100 \f7\fs20 
\par {\uldb\cf11 Browser}{\v IDH_browser}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 4944485f62726f77736572}}}{\fldrslt }}
{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}
\par {\uldb\cf11 Button}{\v IDH_button}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 4944485f627574746f6e}}}{\fldrslt }}
{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}
\par {\uldb\cf11 Cursor}{\v IDH_cursor}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 4944485f637572736f72}}}{\fldrslt }}
{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}
\par {\uldb\cf11 Date}{\v IDH_date}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 4944485f64617465}}}{\fldrslt }}
{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}
\par {\uldb\cf11 List}{\v IDH_list}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 4944485f6c697374}}}{\fldrslt }}
{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}
\par {\uldb\cf11 Menu}{\v IDH_menu}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 4944485f6d656e75}}}{\fldrslt }}
{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}
\par {\uldb\cf11 Menu Bar}{\v IDH_menu_bar}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 4944485f6d656e755f626172}}}{\fldrslt }}
{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}
\par {\uldb\cf11 Menu Item}{\v IDH_menu_item}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 4944485f6d656e755f6974656d}}
}{\fldrslt }}{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}
\par {\uldb\cf11 Number}{\v IDH_number}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 4944485f6e756d626572}}}{\fldrslt }}
{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}
\par {\uldb\cf11 Page Layout}{\v IDH_page_layout}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 4944485f706167655f6c61796f7574}}
}{\fldrslt }}{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}
\par {\uldb\cf11 Picture}{\v IDH_picture}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 4944485f70696374757265}}}{\fldrslt }}
{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}
\par {\uldb\cf11 Radio Group}{\v IDH_radio_group}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 4944485f726164696f5f67726f7570}}
}{\fldrslt }}{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}
\par {\uldb\cf11 Scale}{\v IDH_scale}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 4944485f7363616c65}}}{\fldrslt }}
{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}
\par {\uldb\cf11 Scroll Bar}{\v IDH_scroll_bar}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 4944485f7363726f6c6c5f626172}}
}{\fldrslt }}{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}
\par {\uldb\cf11 Table}{\v IDH_table}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 4944485f7461626c65}}}{\fldrslt }}
{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}
\par {\uldb\cf11 Text}{\v IDH_text}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 4944485f74657874}}}{\fldrslt }}
{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}
\par {\uldb\cf11 Time}{\v IDH_time}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 4944485f74696d65}}}{\fldrslt }}
{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}
\par {\uldb\cf11 Window}{\v IDH_window}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 4944485f77696e646f77}}}{\fldrslt }}
{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}
\par \pard \s27\li360\sa100 
\par \pard\plain \s18\ri14\keepn \b\f7\cf6 \page {\cs16\fs16\up6 {\*\bkmkstart IDH_browser}{\*\bkmkend IDH_browser}#{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 #} IDH_browser}} {\cs16\fs16\up6 ${\footnote \pard\plain \s17\ri20 \f7\fs20 {
\cs16\fs16\up6 $} Browser}} {\cs16\fs16\up6 +{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 +} brwsobj17:0000}} {\cs16\fs16\up6 K{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 K} Browser}} Browser
\par \pard\plain \s3\ri14\sb240\sa120 \b\f5 Signals
\par \pard\plain \s30\fi-2160\li2430\ri20\sa60\tx2430\dxfrtext187\dfrmtxtx187\dfrmtxty187 \f5\fs20 Clear Fields\tab Issued when the C
lear button is pressed, and also is issued following the After Creating File, After Opening File, After Closing File, and After Deleting signals. Any functions attached to the Browser object via the Clear Fields signal will also be called after these oper
ations. To clear fields after adding or updating records, you should use the After Adding signal to call the function chain attached to the Browser object via the Clear Fields signal.
\par \pard \s30\fi-2160\li2430\ri20\sa60\tx2430\dxfrtext187\dfrmtxtx187\dfrmtxty187 Before and after signals
\par \pard \s30\fi-2160\li2430\ri20\sa60\tx2430\dxfrtext187\dfrmtxtx187\dfrmtxty187 \tab The Browser provides signals for calling your o
wn function chains before, after, or in place of the standard Browser operations. Each Browser button has a Before and After signal. To call a function chain of your own prior to the execution of the Browser button operation, attach your function chain to
 the appropriate Before signal. To call a function chain after the Browser button operation has been executed, use the appropriate After signal. To override a standard Browser operation altogether, connect your function chain to the Browser object and cho
ose the Before signal for the button in question. Then, include the Browser\rquote 
s Cancel Operation function as one of the steps in your alternative function chain. Otherwise, the Browser button you clicked will proceed with its own operation when your function chain terminates.
\par \pard \s30\fi-2160\li2430\ri20\sa60\tx2430\dxfrtext187\dfrmtxtx187\dfrmtxty187 \tab 
A common use of the After signal is to call functions to clear fields following an operation such as adding a record. By clearing fields in this way, you avoid having to do so manually using the Clear button.
\par \pard \s30\fi-2160\li2430\ri20\sa60\tx2430\dxfrtext187\dfrmtxtx187\dfrmtxty187 \tab The signals are as follows:
\par \tab Before Clearing Fields, After Clearing Fields
\par \tab Before Adding, After Adding
\par \tab Before Updating, After Updating 
\par \tab Before Deleting, After Deleting 
\par \tab Before Creating File, After Creating File
\par \tab Before Opening File, After Opening File
\par \tab Before Closing File, After Closing File
\par \tab Before Quitting
\par \tab Before Finding, After Finding
\par \tab Before Power Finding, After Power Finding
\par \tab Before Getting Previous, After Getting Previous
\par \tab Before Getting Next, After Getting Next
\par \tab Before All Records, After All Records
\par \tab Before Found Records, After Found Records
\par \pard\plain \s3\ri14\sb240\sa120 \b\f5 Usage
\par \pard\plain \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 \f5\fs20 
Used in conjunction with a Database object, the Browser is a palette of buttons that automatically implements essential database operations, sparing you the bother of having to set up your own buttons and database function chains. Browser buttons call the
 same code routines as the corresponding Database object functions. You can associate your own function chains with any of the Browser buttons to supplement or replace its built-in operations.
\par \pard \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 Whether you choose to use the Browser 
depends on the interface you want for your application. If you prefer not to use buttons in your application, or if you would like more control over the look of a button interface, then you won\rquote t want to use Browser. 
\par \pard\plain \s18\ri14\keepn \b\f7\cf6 \page {\cs16\fs16\up6 {\*\bkmkstart IDH_button}{\*\bkmkend IDH_button}#{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 #} IDH_button}} {\cs16\fs16\up6 ${\footnote \pard\plain \s17\ri20 \f7\fs20 {
\cs16\fs16\up6 $} Button}} {\cs16\fs16\up6 +{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 +} brwsobj17:0005}} {\cs16\fs16\up6 K{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 K} Button}} Button
\par \pard\plain \s3\ri14\sb240\sa120 \b\f5 Signals
\par \pard\plain \s30\fi-2160\li2430\ri20\sa60\tx2430\dxfrtext187\dfrmtxtx187\dfrmtxty187 \f5\fs20 Pressed\tab Issued when the user presses and releases the mouse button inside an active button.
\par \pard \s30\fi-2160\li2430\ri20\sa60\tx2430\dxfrtext187\dfrmtxtx187\dfrmtxty187 Touched\tab 
Issued when the user presses the mouse button inside an active button. Touched differs from Pressed in that it is immediately issued when the mouse click occurs inside th
e button. The Button object issues a Touched signal regardless of where or whether the mouse button was released.
\par \pard \s30\fi-2160\li2430\ri20\sa60\tx2430\dxfrtext187\dfrmtxtx187\dfrmtxty187 While Down\tab Issued repeatedly as long as the user holds the mouse button down inside an active button.
\par \pard \s30\fi-2160\li2430\ri20\sa60\tx2430\dxfrtext187\dfrmtxtx187\dfrmtxty187 Toggled Off\tab Issued when the user deselects an active radio or checkbox button.
\par Toggled On\tab Issued when the user selects an active radio or checkbox button.
\par \pard \s30\fi-2160\li2430\ri20\sa60\tx2430\dxfrtext187\dfrmtxtx187\dfrmtxty187 Mouse Released\tab Issued when the user releases the mouse button after having pressed it inside the Button object, regardless of whether the mou
se button was released while still inside the button.
\par \pard\plain \s3\ri14\sb240\sa120 \b\f5 Usage
\par \pard\plain \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 \f5\fs20 The Button{\i  }
object lets you design customized buttons for user interaction. Five different styles are supported: standard push buttons, checkbox, radio, bitmap, and invisible buttons.
\par \pard\plain \s18\ri14\keepn \b\f7\cf6 \page {\cs16\fs16\up6 {\*\bkmkstart IDH_cursor}{\*\bkmkend IDH_cursor}#{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 #} IDH_cursor}} {\cs16\fs16\up6 ${\footnote \pard\plain \s17\ri20 \f7\fs20 {
\cs16\fs16\up6 $} Cursor}} {\cs16\fs16\up6 +{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 +} brwsobj17:0010}} {\cs16\fs16\up6 K{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 K} Cursor}} Cursor
\par \pard\plain \s3\ri14\sb240\sa120 \b\f5 Signals
\par \pard\plain \s30\fi-2160\li2430\ri20\sa60\tx2430\dxfrtext187\dfrmtxtx187\dfrmtxty187 \f5\fs20 Cursor Started\tab Issued after the cursor has been started.
\par \pard \s30\fi-2160\li2430\ri20\sa60\tx2430\dxfrtext187\dfrmtxtx187\dfrmtxty187 Cursor Stopped\tab Issued after the cursor has been stopped.
\par \pard\plain \s3\ri14\sb240\sa120 \b\f5 Usage
\par \pard\plain \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 \f5\fs20 The Cursor object lets you design, load, and display static and animated black and white cursors.
\par \pard\plain \s18\ri14\keepn \b\f7\cf6 \page {\cs16\fs16\up6 {\*\bkmkstart IDH_date}{\*\bkmkend IDH_date}#{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 #} IDH_date}} {\cs16\fs16\up6 ${\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 $}
 Date}} {\cs16\fs16\up6 +{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 +} brwsobj17:0015}} {\cs16\fs16\up6 K{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 K} Date}} Date
\par \pard\plain \s3\ri14\sb240\sa120 \b\f5 Signals
\par \pard\plain \s30\fi-2160\li2430\ri20\sa60\tx2430\dxfrtext187\dfrmtxtx187\dfrmtxty187 \f5\fs20 Changed\tab Issued when any component of the date or its appearance is changed through user action or under program control.
\par \pard \s30\fi-2160\li2430\ri20\sa60\tx2430\dxfrtext187\dfrmtxtx187\dfrmtxty187 Day Changed\tab Issued when the current day changes under program control (available only when Keep Current is selected). 
\par Month Changed\tab Issued when the current month changes under program control (available only when Keep Current is selected).
\par Year Changed\tab Issued when the current year changes under program control (available only when Keep Current is selected).
\par Activated\tab Issued when the user tabs into or positions the cursor in the object or when the object is activated through the Activate Item function.
\par Deactivated\tab Issued when the user tabs out of the object or clicks in another field or when another field is activated through the Activate Item function.
\par \pard\plain \s3\ri14\sb240\sa120 \b\f5 Usage
\par \pard\plain \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 \f5\fs20 The Date{\i  }object lets you display, edit, and manipulate calendar dates manually entered by a user or generated by the operating system.
\par \pard \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 The Date object has three factors in common with the Number, Text, and Time objects. 1) They all can resi
de in windows alongside buttons, lists, scales, pictures, and other window item objects. 2) They all have textual representation. 3) Because of their common basis in text, they are often interchangeable. Being interchangeable means that these objects can 
usually be passed to each other\rquote s functions without needing an explicit conversion function.
\par \pard\plain \s18\ri14\keepn \b\f7\cf6 \page {\cs16\fs16\up6 {\*\bkmkstart IDH_list}{\*\bkmkend IDH_list}#{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 #} IDH_list}} {\cs16\fs16\up6 ${\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 $}
 List}} {\cs16\fs16\up6 +{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 +} brwsobj17:0020}} {\cs16\fs16\up6 K{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 K} List}} List
\par \pard\plain \s3\ri14\sb240\sa120 \b\f5 Signals
\par \pard\plain \s30\fi-2160\li2430\ri20\sa60\tx2430\dxfrtext187\dfrmtxtx187\dfrmtxty187 \f5\fs20 Double click\tab Issued when the user double clicks an element (not issued for drop down combo lists or drop down lists).
\par \pard \s30\fi-2160\li2430\ri20\sa60\tx2430\dxfrtext187\dfrmtxtx187\dfrmtxty187 Single click\tab Issued when the user clicks an element (not issued for drop down combo lists or drop down lists).
\par \pard \s30\fi-2160\li2430\ri20\sa60\tx2430\dxfrtext187\dfrmtxtx187\dfrmtxty187 Changed\tab Issued when an element is changed.
\par Enter Key\tab Issued when the user presses the Enter key while the list is active.
\par Return Key\tab Issued when the user presses the Return key while the list is active.
\par \pard \s30\fi-2160\li2430\ri20\sa60\tx2430\dxfrtext187\dfrmtxtx187\dfrmtxty187 Activated\tab Issued when the user tabs into or clicks in the list, or when the Activate Item function is called.
\par Deactivated\tab Issued when the user tabs out of the list or clicks in another activatable field, or when the Activate Item function is called for another item.
\par \pard \s30\fi-2160\li2430\ri20\sa60\tx2430\dxfrtext187\dfrmtxtx187\dfrmtxty187 Selection changed\tab Issued when a selection is changed in the list.
\par Edited\tab Issued when a simple combo box or drop down combo box has been edited.
\par \pard \s30\fi-2160\li2430\ri20\sa60\tx2430\dxfrtext187\dfrmtxtx187\dfrmtxty187 Dropped\tab Issued when the list portion of a drop down combo box or a drop down list is shown.
\par Closed\tab Issued when the list portion of a drop down combo box or a drop down list is hidden.
\par \pard\plain \s3\ri14\sb240\sa120 \b\f5 Usage
\par \pard\plain \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 \f5\fs20 The List{\i  }object lets you use and manage scrollable, single column lists of text elements. 
\par \pard \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 Lists have a limit of 64k worth of characters.
\par \pard\plain \s18\ri14\keepn \b\f7\cf6 \page {\cs16\fs16\up6 {\*\bkmkstart IDH_menu}{\*\bkmkend IDH_menu}#{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 #} IDH_menu}} {\cs16\fs16\up6 ${\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 $}
 Menu}} {\cs16\fs16\up6 +{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 +} brwsobj17:0025}} {\cs16\fs16\up6 K{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 K} Menu}} Menu
\par \pard\plain \s3\ri14\sb240\sa120 \b\f5 Signals
\par \pard\plain \s30\fi-2160\li2430\ri20\sa60\tx2430\dxfrtext187\dfrmtxtx187\dfrmtxty187 \f5\fs20 Menu Item Chosen\tab Issued when the user chooses an item from the menu. This signal is issued for both Menu Item objects and text-only items.
\par \pard \s30\fi-2160\li2430\ri20\sa60\tx2430\dxfrtext187\dfrmtxtx187\dfrmtxty187 No Item Chosen\tab Issued after a user leaves an activated menu without choosing any of its menu items.
\par \pard\plain \s3\ri14\sb240\sa120 \b\f5 Usage
\par \pard\plain \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 \f5\fs20 A menu system has three basic parts: menu bar, the menus in the menu bar, and the individual menu items in each the menu.
\par \pard \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 The {\i menu bar}  contains the menus that are displayed across the top of a window. Most windows have a menu bar that is displayed all of the time.
\par \pard \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 Making up the menu bar are {\i menus }(File, Edit, etc.), which themselves contain {\i menu items}
 (New, Open, Close, Quit, etc.) that you select to perform operations. By convention, File and Edit are respectively the first and second menus in a menu bar.
\par Although you have complete control over the design of your menus, file-related commands such as New, Open, Close, Save, and{\i  }Exit are typically found in the File menu. Likewise, editing commands such as Cut, Copy, and Paste are usually put 
in the Edit menu.
\par \pard\plain \s18\ri14\keepn \b\f7\cf6 \page {\cs16\fs16\up6 {\*\bkmkstart IDH_menu_bar}{\*\bkmkend IDH_menu_bar}#{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 #} IDH_menu_bar}} {\cs16\fs16\up6 ${\footnote \pard\plain \s17\ri20 \f7\fs20 {
\cs16\fs16\up6 $} Menu Bar}} {\cs16\fs16\up6 +{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 +} brwsobj17:0030}} {\cs16\fs16\up6 K{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 K} Menu Bar}} Menu Bar
\par \pard\plain \s3\ri14\sb240\sa120 \b\f5 Signals
\par \pard\plain \s30\fi-2160\li2430\ri20\sa60\tx2430\dxfrtext187\dfrmtxtx187\dfrmtxty187 \f5\fs20 None.
\par \pard\plain \s3\ri14\sb240\sa120 \b\f5 Usage
\par \pard\plain \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 \f5\fs20 A menu system has three basic parts: the menu bar, the menus in the menu bar, and the individual menu items in each menu.
\par \pard \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 The {\i menu bar}  contains the menus that are displayed across the top of a window. Most windows have a menu bar that is displayed all of the time.
\par \pard \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 Making up the menu bar are {\i menus }(File, Edit, etc.), which themselves contain {\i menu items}
 (New, Open, Close, Quit, etc.) that you select to perform operations. By convention, File and Edit are respectively the first and second menus in a menu bar.
\par Although you have complete control over the design of your menus, by convention file-related commands such as New, Open, Close, Save, and{\i  }
Exit are typically found in the File menu. Likewise, editing commands such as Cut, Copy, and Paste are usually put in the Edit menu.
\par \pard \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 In AppWare, the menu bar, menus, and menu items are created by separate objects. This section discusses the Menu Bar object.
\par After you\rquote ve built a menu bar, you must attach it to an active window. This attachment step is done in the Window Attributes dialog. See the Window object documentation for more information.
\par \pard\plain \s18\ri14\keepn \b\f7\cf6 \page {\cs16\fs16\up6 {\*\bkmkstart IDH_menu_item}{\*\bkmkend IDH_menu_item}#{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 #} IDH_menu_item}} {\cs16\fs16\up6 ${\footnote \pard\plain \s17\ri20 \f7\fs20 {
\cs16\fs16\up6 $} Menu Item}} {\cs16\fs16\up6 +{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 +} brwsobj17:0035}} {\cs16\fs16\up6 K{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 K} Menu Item}} Menu Item
\par \pard\plain \s3\ri14\sb240\sa120 \b\f5 Signals
\par \pard\plain \s30\fi-2160\li2430\ri20\sa60\tx2430\dxfrtext187\dfrmtxtx187\dfrmtxty187 \f5\fs20 Chosen\tab Issued when the user chooses a normal menu item.
\par \pard \s30\fi-2160\li2430\ri20\sa60\tx2430\dxfrtext187\dfrmtxtx187\dfrmtxty187 Toggled On\tab Issued when the menu item is toggled on.
\par Toggled Off \tab Issued when the menu item is toggled off.
\par \pard \s30\fi-2160\li2430\ri20\sa60\tx2430\dxfrtext187\dfrmtxtx187\dfrmtxty187 \tab The two toggle signals are issued only by toggle menu items, and are therefore not displayed in the signal pop-up unless the menu item is of the toggle type.
\par \pard\plain \s3\ri14\sb240\sa120 \b\f5 Usage
\par \pard\plain \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 \f5\fs20 A menu system has three basic parts: the menu bar, the menus in the menu bar, and the individual menu items in each menu.
\par \pard \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 The {\i menu bar}  contains the menus that are displayed across the top of a window. Most windows have a menu bar that is displayed all of the time.
\par \pard \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 Making up the menu bar are {\i menus }(File, Edit, etc.), which themselves contain {\i menu items}
 (New, Open, Close, Quit, etc.) that you select to perform operations. By convention, File and Edit are respectively the first and second menus in a menu bar.
\par Although you have complete control over the design of your menus, by convention file-related commands such as New, Open, Close, Save, and{\i  }
Exit are typically found in the File menu. Likewise, editing commands such as Cut, Copy, and Paste are usually put in the Edit menu.
\par \pard \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 In AppWare, the menu bar, menus, and menu items are created by separate objects. This section discusses the Menu Item object.
\par \pard\plain \s18\ri14\keepn \b\f7\cf6 \page {\cs16\fs16\up6 {\*\bkmkstart IDH_number}{\*\bkmkend IDH_number}#{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 #} IDH_number}} {\cs16\fs16\up6 ${\footnote \pard\plain \s17\ri20 \f7\fs20 {
\cs16\fs16\up6 $} Number}} {\cs16\fs16\up6 +{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 +} brwsobj17:0040}} {\cs16\fs16\up6 K{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 K} Number}} Number
\par \pard\plain \s3\ri14\sb240\sa120 \b\f5 Signals
\par \pard\plain \s30\fi-2160\li2430\ri20\sa60\tx2430\dxfrtext187\dfrmtxtx187\dfrmtxty187 \f5\fs20 Changed\tab Issued whenever the number or its appearance are changed by the user or under program control.
\par Activated\tab Issued when the user tabs into or clicks in the field or when the Window function Activate Item activates the field.
\par \pard \s30\fi-2160\li2430\ri20\sa60\tx2430\dxfrtext187\dfrmtxtx187\dfrmtxty187 Deactivated\tab Issued when the user tabs out of the field or clicks in another field or when the Window function Activate Item activates another field.
\par \pard \s30\fi-2160\li2430\ri20\sa60\tx2430\dxfrtext187\dfrmtxtx187\dfrmtxty187 Range Error\tab Issued when the number falls outside the range -2{\fs12\up7 31 }to 2{\fs12\up7 31 } \endash  1.
\par \pard\plain \s3\ri14\sb240\sa120 \b\f5 Usage
\par \pard\plain \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 \f5\fs20 The Number object lets you display, edit, and manipulate whole and floating point numbers. 
\par \pard \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 The functions Add, Decrement, Divide, Increment, Mult
iply, Subtract, Sum, and Expression perform simple arithmetic and algebraic operations. The Compare Numbers function compares numbers and generates signals that you can use to call other functions based on the results of the comparison. The Random and Ran
domize functions make it possible to generate random numbers. 
\par \pard \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 
For basic numerical operations, the Number object and its functions are all you need. It is not recommended, however, that you use Number functions for building long and complicated sequences of
 operations, especially repetitive operations. In such cases, you\rquote 
re better off using the Calculation object, or custom Number functions of your own design. Custom functions must be created in a lower level environment, such as C or C++. The use of such functions is unavoidable in very intensive number crunching.
\par \pard \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 
The point at which the use of custom functions becomes necessary will vary from one application to another, and in the end you must decide whether your application is performing up to par. As a rul
e of thumb, if a given operation calls for the use of several hundred Number functions, or if you\rquote re using a sequence of Number functions in a loop that is repeated more than a hundred times, you should consider the use of a custom function.
\par \pard\plain \s18\ri14\keepn \b\f7\cf6 \page {\cs16\fs16\up6 {\*\bkmkstart IDH_page_layout}{\*\bkmkend IDH_page_layout}#{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 #} IDH_page_layout}} {\cs16\fs16\up6 ${\footnote \pard\plain \s17\ri20 
\f7\fs20 {\cs16\fs16\up6 $} Page Layout}} {\cs16\fs16\up6 +{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 +} brwsobj17:0045}} {\cs16\fs16\up6 K{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 K} Page Layout}} Page Layout
\par \pard\plain \s3\ri14\sb240\sa120 \b\f5 Signals
\par \pard\plain \s30\fi-2160\li2430\ri20\sa60\tx2430\dxfrtext187\dfrmtxtx187\dfrmtxty187 \f5\fs20 Page finished\tab Issued after each page is spooled.
\par \pard\plain \s3\ri14\sb240\sa120 \b\f5 Usage
\par \pard\plain \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 \f5\fs20 The Page Layout object allows you to design layouts for printing. 
\par \pard \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 Page Layout lets you arrange one or more Window objects on a single sample page. By positioning the Window objects, you
 specify how Page Layout will print those objects when the containing Page Layout is passed to the Printer object\rquote s Print or Print Now functions. Page Layout prints the contents of each Window object in its respective position on the page. You 
\ldblquote spool\rdblquote  windows residing in the Page Layout object again and again, thus generating one or more printed pages.
\par \pard \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 The most common use of the Page Layout object is to print repetitive information, such as labels or lists.
\par \pard \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 Page Layout does not give the user of your applica
tion the ability to define his or her own layouts at run-time, but does allow the user to choose from a range of printing options defined when the application was created. 
\par \pard\plain \s18\ri14\keepn \b\f7\cf6 \page {\cs16\fs16\up6 {\*\bkmkstart IDH_picture}{\*\bkmkend IDH_picture}#{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 #} IDH_picture}} {\cs16\fs16\up6 ${\footnote \pard\plain \s17\ri20 \f7\fs20 {
\cs16\fs16\up6 $} Picture}} {\cs16\fs16\up6 +{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 +} brwsobj17:0050}} {\cs16\fs16\up6 K{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 K} Picture}} Picture
\par \pard\plain \s3\ri14\sb240\sa120 \b\f5 Signals
\par \pard\plain \s30\fi-2160\li2430\ri20\sa60\tx2430\dxfrtext187\dfrmtxtx187\dfrmtxty187 \f5\fs20 Changed\tab Issued when the Picture object is modified in any way.
\par \pard \s30\fi-2160\li2430\ri20\sa60\tx2430\dxfrtext187\dfrmtxtx187\dfrmtxty187 Clicked\tab Issued when the user clicks in the picture.
\par Activated\tab Issued when the picture receives focus (selectable pictures only)
\par Deactivated\tab Issued when the picture loses focus (selectable pictures only).
\par Double Clicked\tab Issued when the user double clicks the picture at runtime.
\par \pard\plain \s3\ri14\sb240\sa120 \b\f5 Usage
\par \pard\plain \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 \f5\fs20 The Picture{\i  }object allows your application to manipulate and display .BMP images and MetaFiles. 
\par \pard \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 Pictures have many uses. For example, you can store them as fields in a database, use them to make windows more attractive, or cover them with invisible buttons to create colorful interfaces.

\par \pard\plain \s18\ri14\keepn \b\f7\cf6 \page {\cs16\fs16\up6 {\*\bkmkstart IDH_radio_group}{\*\bkmkend IDH_radio_group}#{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 #} IDH_radio_group}} {\cs16\fs16\up6 ${\footnote \pard\plain \s17\ri20 
\f7\fs20 {\cs16\fs16\up6 $} Radio Group}} {\cs16\fs16\up6 +{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 +} brwsobj17:0055}} {\cs16\fs16\up6 K{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 K} Radio Group}} Radio Group
\par \pard\plain \s3\ri14\sb240\sa120 \b\f5 Signals
\par \pard\plain \s30\fi-2160\li2430\ri20\sa60\tx2430\dxfrtext187\dfrmtxtx187\dfrmtxty187 \f5\fs20 None.
\par \pard\plain \s3\ri14\sb240\sa120 \b\f5 Usage
\par \pard\plain \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 \f5\fs20 The Radio Group object lets you define groups of radio buttons (Button objects) that behave as a single entity. At any given moment, only one button 
in the group may be selected; when the user makes a new selection, the currently selected button is deselected.
\par \pard \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 A Button may belong to more than one group at a time. As a result, user actions in one group can automatically determine the behavior of buttons in other groups.
\par \pard\plain \s18\ri14\keepn \b\f7\cf6 \page {\cs16\fs16\up6 {\*\bkmkstart IDH_scale}{\*\bkmkend IDH_scale}#{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 #} IDH_scale}} {\cs16\fs16\up6 ${\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 
$} Scale}} {\cs16\fs16\up6 +{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 +} brwsobj17:0060}} {\cs16\fs16\up6 K{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 K} Scale}} Scale
\par \pard\plain \s3\ri14\sb240\sa120 \b\f5 Signals
\par \pard\plain \s30\fi-2160\li2430\ri20\sa60\tx2430\dxfrtext187\dfrmtxtx187\dfrmtxty187 \f5\fs20 Changed\tab 
Issued whenever the user drags the indicator, or when the maximum, minimum, or value Number objects change through user action or under program control.
\par \pard \s30\fi-2160\li2430\ri20\sa60\tx2430\dxfrtext187\dfrmtxtx187\dfrmtxty187 User Changed\tab Issued when the user drags the indicator.
\par After Sync-dragging\tab Issued when the user releases the mouse after synch-dragging the indicator.
\par \pard\plain \s3\ri14\sb240\sa120 \b\f5 Usage
\par \pard\plain \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 \f5\fs20 The Scale object lets you design sliders for graphically displaying and controlling numerical values. You can design horizontal, vertical, or diagonal scales. 
\par \pard \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 
A slider consists of a stationary image or scale and an indicator image that slides over the top of or alongside the scale. When the user drags the indicator, its location relative to the end points of the scale is converted into a numerical value. 
Conversely, when the numerical value linked to indicator location is changed under program control, the indicator image is automatically moved to reflect the change.
\par \pard\plain \s18\ri14\keepn \b\f7\cf6 \page {\cs16\fs16\up6 {\*\bkmkstart IDH_scroll_bar}{\*\bkmkend IDH_scroll_bar}#{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 #} IDH_scroll_bar}} {\cs16\fs16\up6 ${\footnote \pard\plain \s17\ri20 \f7\fs20 {
\cs16\fs16\up6 $} Scroll Bar}} {\cs16\fs16\up6 +{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 +} brwsobj17:0065}} {\cs16\fs16\up6 K{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 K} Scroll Bar}} Scroll Bar
\par \pard\plain \s3\ri14\sb240\sa120 \b\f5 Signals
\par \pard\plain \s30\fi-2160\li2430\ri20\sa60\tx2430\dxfrtext187\dfrmtxtx187\dfrmtxty187 \f5\fs20 Scroll Line Up\tab Issued when the scroll bar is scrolled up (or left) one line via the keyboard or the mouse.
\par \pard \s30\fi-2160\li2430\ri20\sa60\tx2430\dxfrtext187\dfrmtxtx187\dfrmtxty187 Scroll Line Down \tab Issued when the scroll bar is scrolled down (or right) one line via the keyboard or the mouse.
\par \pard \s30\fi-2160\li2430\ri20\sa60\tx2430\dxfrtext187\dfrmtxtx187\dfrmtxty187 Scroll Page Up \tab Issued when the scroll bar is paged up (or left) via the keyboard or the mouse.
\par \pard \s30\fi-2160\li2430\ri20\sa60\tx2430\dxfrtext187\dfrmtxtx187\dfrmtxty187 Scroll Page Down\tab Issued when the scroll bar is paged down (or right) via the keyboard or the mouse. 
\par Scroll Top\tab Issued when the scroll bar is set to the top-most (or left-most) position via the Home key (activatable scroll bars only).
\par Scroll Bottom \tab Issued when the scroll bar is set to the bottom-most (or right-most) position via the End key (activatable scroll bars only).
\par Slider Track\tab Issued while the slider is being dragged; the current position can be retrieved via a function call.
\par \pard \s30\fi-2160\li2430\ri20\sa60\tx2430\dxfrtext187\dfrmtxtx187\dfrmtxty187 Slider Position\tab Issued when the slider has been dragged to a new position.
\par \pard \s30\fi-2160\li2430\ri20\sa60\tx2430\dxfrtext187\dfrmtxtx187\dfrmtxty187 Activated \tab Issued when the scroll bar is activated by tabbing into the object or clicking on the object (activatable scroll bars only).
\par Deactivated \tab Issued when the scroll bar is deactivated by tabbing out of the object or clicking on another object (activatable scroll bars only).
\par \pard \s30\fi-2160\li2430\ri20\sa60\tx2430\dxfrtext187\dfrmtxtx187\dfrmtxty187 User Changed\tab Issued after a change is made to the scroll bar by the user.
\par \pard\plain \s3\ri14\sb240\sa120 \b\f5 Usage
\par \pard\plain \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 \f5\fs20 The Scroll Bar object allows you to design custom controls using the standard MS Windows scroll bar
. As with the Scale object, with which Scroll Bar has much in common, the maximum and minimum values of the scroll bar\rquote s range and the position of the slider, or \ldblquote thumb\rdblquote 
, can be linked to Number objects. These links allow you to programmatically control a scroll bar\rquote s behavior.
\par \pard \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 
Also like the Scale object, Scroll Bar lets you create both vertical and horizontal scroll bars. Unlike Scale, Scroll Bar does not let you design your own custom images for  the scroll region and slider, or diagonally position the scroll bar.
\par You don\rquote 
t need Scroll Bar in order to create scroll bars for text fields; the Text object automatically controls this. You might use Scroll Bar, however, to build a control to browse through a database or other indexed data sources.                       
                               
\par \pard\plain \s18\ri14\keepn \b\f7\cf6 \page {\cs16\fs16\up6 {\*\bkmkstart IDH_table}{\*\bkmkend IDH_table}#{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 #} IDH_table}} {\cs16\fs16\up6 ${\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 
$} Table}} {\cs16\fs16\up6 +{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 +} brwsobj17:0070}} {\cs16\fs16\up6 K{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 K} Table}} Table
\par \pard\plain \s3\ri14\sb240\sa120 \b\f5 Signals
\par \pard\plain \s30\fi-2160\li2430\ri20\sa60\tx2430\dxfrtext187\dfrmtxtx187\dfrmtxty187 \f5\fs20 Table Needs Row\tab Issued when the table needs data to fill row at Row Index To Number object (auto-fill tables without data source only).
\par \pard \s30\fi-2160\li2430\ri20\sa60\tx2430\dxfrtext187\dfrmtxtx187\dfrmtxty187 Single Click\tab Issued when a click occurs in the table.
\par Double Click\tab Issued when a double click occurs in the table.
\par \pard \s30\fi-2160\li2430\ri20\sa60\tx2430\dxfrtext187\dfrmtxtx187\dfrmtxty187 Return/Enter Key\tab Issued when the Return or Enter key is pressed while the table is active (not issued while a cell is being edited).
\par \pard \s30\fi-2160\li2430\ri20\sa60\tx2430\dxfrtext187\dfrmtxtx187\dfrmtxty187 Delete/Backspace Key
\par \pard \s30\fi-2160\li2430\ri20\sa60\tx2430\dxfrtext187\dfrmtxtx187\dfrmtxty187 \tab Issued when the Delete or Backspace key is pressed while the table is active (not issued while a cell is being edited).
\par \pard \s30\fi-2160\li2430\ri20\sa60\tx2430\dxfrtext187\dfrmtxtx187\dfrmtxty187 Table Activated\tab Issued when table is clicked or tabbed into, thereby activating the table.
\par \pard \s30\fi-2160\li2430\ri20\sa60\tx2430\dxfrtext187\dfrmtxtx187\dfrmtxty187 Table Auto-filled\tab Issued when the Table has rebuilt itself in response to Update Auto Table function or user scrolling (auto-fill tables only). 
\par Table Deactivated\tab Issued when another object is clicked or tabbed into, thereby deactivating the table.
\par Table Field Edited\tab Issued when user clicks off of or tabs out of a cell, or presses Enter, and the cell\rquote s data has changed (manual fill table only).
\par \pard \s30\fi-2160\li2430\ri20\sa60\tx2430\dxfrtext187\dfrmtxtx187\dfrmtxty187 Column Activated\tab Issued when user clicks the title of column.
\par Selection Changed\tab Issued when the user changes the selection.
\par \pard \s30\fi-2160\li2430\ri20\sa60\tx2430\dxfrtext187\dfrmtxtx187\dfrmtxty187 Start Editing Field\tab Issued when the user begins editing a cell in an active table (manual fill table only).
\par Stop Editing Field\tab Issued when the user deselects a cell, selects another cell, or presses the Enter key in an active table (manual fill table only).
\par \pard \s30\fi-2160\li2430\ri20\sa60\tx2430\dxfrtext187\dfrmtxtx187\dfrmtxty187 Auto-Fill Started\tab Issued when the auto-fill of a table has begun (auto-fill table only).
\par \pard\plain \s3\ri14\sb240\sa120 \b\f5 Usage
\par \pard\plain \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 \f5\fs20 
The Table object lets you build editable, multi-column lists containing text supplied by any object having a textual representation (e.g., Button, Date, Number, Text, and Time). 
\par \pard \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 For example, suppose that you want your table to display 
data retrieved from a database containing Name, Address, Zip, and Phone Number fields. When you find a record in the database, information from these fields is read from the disk file into corresponding Text objects in your application. Once in these obje
cts, the information can be routed to a table. An appropriate table in this case might consist of four columns, one for each of the four fields. Information is supplied to the Name column by the Text object that is the Name field of the Database; informat
io
n for the Address column comes from the Address Text object, etc. If another record is read in, an additional row in the table is created, and its columns are likewise filled with data from the field objects. The table is built row by row until all of the
 records have been read from the database. Therefore, when linked to a Database, each row in the table constitutes a record, each column a field in that record. 
\par \pard \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 In general, tables get their information column by column from other objects which serve as int
ermediaries to sources of multiple rows of data. The most important of these sources are the Database and client-server objects, but you can also get multiple lines of information from Text objects. Detailed instructions about getting information from Dat
abase and Text objects is given in this section. \tab 
\par \pard\plain \s18\ri14\keepn \b\f7\cf6 \page {\cs16\fs16\up6 {\*\bkmkstart IDH_text}{\*\bkmkend IDH_text}#{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 #} IDH_text}} {\cs16\fs16\up6 ${\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 $}
 Text}} {\cs16\fs16\up6 +{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 +} brwsobj17:0075}} {\cs16\fs16\up6 K{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 K} Text}} Text
\par \pard\plain \s3\ri14\sb240\sa120 \b\f5 Signals
\par \pard\plain \s30\fi-2160\li2430\ri20\sa60\tx2430\dxfrtext187\dfrmtxtx187\dfrmtxty187 \f5\fs20 Changed\tab Issued when the text or its appearance is altered by the user or under program control.
\par \pard \s30\fi-2160\li2430\ri20\sa60\tx2430\dxfrtext187\dfrmtxtx187\dfrmtxty187 Edited\tab Issued when the user types in the text (editable text only).
\par \pard \s30\fi-2160\li2430\ri20\sa60\tx2430\dxfrtext187\dfrmtxtx187\dfrmtxty187 Activated\tab Issued when the user tabs into or clicks in the text or when the field is activated by the Window object\rquote s Activate Item function (editable text only).

\par Deactivated\tab Issued when the user tabs out of the field or clicks in another or when another field is activated by the Activate Item function (editable text only).
\par Too Long\tab Issued when the user attempts to type or pass more characters than allowed by the Limit field.
\par \pard \s30\fi-2160\li2430\ri20\sa60\tx2430\dxfrtext187\dfrmtxtx187\dfrmtxty187 Enter Key\tab Issued when the user presses the Enter key (editable text only).
\par \pard\plain \s3\ri14\sb240\sa120 \b\f5 Usage
\par \pard\plain \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 \f5\fs20 The Text object allows your applications to display, edit, and manipulate text.
\par You may display Text objects as fields in a window, or use them as data containers behind the scenes. There is a 32KB, or approximately 32,000 character limit for a Text object.
\par \pard \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 As with the Number object, the Text object\rquote 
s functions let you manipulate the text in basic, high-level ways. For long and complicated operations, especially repetitive operations, custom functions may be necessary. Guidelines for effective use of Text functions are similar t
o those for the Number functions. Refer to the Number object documentation for further details.
\par \pard\plain \s18\ri14\keepn \b\f7\cf6 \page {\cs16\fs16\up6 {\*\bkmkstart IDH_time}{\*\bkmkend IDH_time}#{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 #} IDH_time}} {\cs16\fs16\up6 ${\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 $}
 Time}} {\cs16\fs16\up6 +{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 +} brwsobj17:0080}} {\cs16\fs16\up6 K{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 K} Time}} Time
\par \pard\plain \s3\ri14\sb240\sa120 \b\f5 Signals
\par \pard\plain \s30\fi-2160\li2430\ri20\sa60\tx2430\dxfrtext187\dfrmtxtx187\dfrmtxty187 \f5\fs20 Changed\tab Issued when the time or its appearance changes through user action or under program control.
\par \pard \s30\fi-2160\li2430\ri20\sa60\tx2430\dxfrtext187\dfrmtxtx187\dfrmtxty187 Second Changed\tab Issued when the current second changes under program control (available only when Keep Current is selected).
\par Minute Changed\tab Issued when the current minute changes under program control (available only when Keep Current is selected).
\par Hour Changed\tab Issued when the current hour changes under program control (available only when Keep Current is selected).
\par Activated\tab Issued when the user tabs into or clicks in the time field, or when the field is activated by the Window object\rquote s Activate Item function.
\par Deactivated\tab Issued when the user tabs out of the field or when another field is activated by the user or under program control.
\par \pard\plain \s3\ri14\sb240\sa120 \b\f5 Usage
\par \pard\plain \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 \f5\fs20 The Time object allows your applications to display, edit, and manipulate clock times manually entered by the user or generated by the operating system.
\par \pard\plain \s18\ri14\keepn \b\f7\cf6 \page {\cs16\fs16\up6 {\*\bkmkstart IDH_window}{\*\bkmkend IDH_window}#{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 #} IDH_window}} {\cs16\fs16\up6 ${\footnote \pard\plain \s17\ri20 \f7\fs20 {
\cs16\fs16\up6 $} Window}} {\cs16\fs16\up6 +{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 +} brwsobj17:0085}} {\cs16\fs16\up6 K{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 K} Window}} Window
\par \pard\plain \s3\ri14\sb240\sa120 \b\f5 Signals
\par \pard\plain \s30\fi-2160\li2430\ri20\sa60\tx2430\dxfrtext187\dfrmtxtx187\dfrmtxty187 \f5\fs20 Selected\tab Issued when the window is clicked or when the window is brought to the front under program control.
\par \pard \s30\fi-2160\li2430\ri20\sa60\tx2430\dxfrtext187\dfrmtxtx187\dfrmtxty187 Opened\tab Issued when the window is opened.
\par \pard \s30\fi-2160\li2430\ri20\sa60\tx2430\dxfrtext187\dfrmtxtx187\dfrmtxty187 Closed\tab Issued when the window\rquote s Control-menu box is double clicked or when the window is closed via the Close Window function.
\par Moved\tab Issued when the window is moved by the user or when the window is moved via the Move Window function.
\par Resized\tab Issued when the window is resized by the user or when the window is resized via the Size Window function.
\par \pard \s30\fi-2160\li2430\ri20\sa60\tx2430\dxfrtext187\dfrmtxtx187\dfrmtxty187 Iconified\tab Issued when the window is iconified by the user clicking the Minimize button.
\par Icon Restored\tab Issued when the window is restored to its default size from its iconified state.
\par \pard \s30\fi-2160\li2430\ri20\sa60\tx2430\dxfrtext187\dfrmtxtx187\dfrmtxty187 Before User Closes\tab Issued after the window\rquote s Control-menu box is double clicked but before the window is closed.
\par \pard \s30\fi-2160\li2430\ri20\sa60\tx2430\dxfrtext187\dfrmtxtx187\dfrmtxty187 Cursor in Object\tab Issued when the cursor is moved into the named object.
\par Cursor out of Object\tab Issued when the cursor is moved out of the named object.
\par \pard\plain \s3\ri14\sb240\sa120 \b\f5 Usage
\par \pard\plain \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 \f5\fs20 The Window object enables your application to display and control windows that contain other objects, \ldblquote window items\rdblquote 
. Your application may have as many windows as you like, each with a unique set of attributes, each containing a different group of items.
\par \pard \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 
Windows are most commonly used as containers for presenting other objects to your user. Application windows typically contain fields in the form of Text objects for data entry and controls such as Button objects for initiating actions to manipulate data. 
Other items, such as static text, shapes, and lines may also be added to the window, giving you the capability of designing elegant user interfaces for your applications. 
\par \pard \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 
Windows are also used in printing. The Window object lets you design layouts for reports and other forms of printed output. When you print a window, you print the objects it contains. In some cases, you can print these objects directly and independently. 
But, for complex printing involving multiple objects, windows are indispensable. See the Page Layout documentation for more information.
\par \pard \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 M
any objects can be displayed in a window, including Browser, Button, Date, List, Menu (pop-up), Menu Bar, Movie, Number, OLE, Picture, PolyButton, Scale, Scroll Bar, Table, Terminal, Text, and Time.
\par \pard\plain \s18\ri14\keepn \b\f7\cf6 \page {\cs16\fs16\up6 {\*\bkmkstart IDH_program_control}{\*\bkmkend IDH_program_control}#{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 #} IDH_program_control}} {\cs16\fs16\up6 ${\footnote \pard\plain 
\s17\ri20 \f7\fs20 {\cs16\fs16\up6 $} Program Control}} {\cs16\fs16\up6 K{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 K} Program Control}} Program Control
\par \pard\plain \s27\li360\sa100 \f7\fs20 
\par {\uldb\cf11 Application}{\v IDH_application}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 4944485f6170706c69636174696f6e}}
}{\fldrslt }}{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}
\par {\uldb\cf11 Bundle}{\v IDH_bundle}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 4944485f62756e646c65}}}{\fldrslt }}
{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}
\par {\uldb\cf11 Calculation}{\v IDH_calculation}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 4944485f63616c63756c6174696f6e}}
}{\fldrslt }}{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}
\par {\uldb\cf11 Database}{\v IDH_database}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 4944485f6461746162617365}}}{\fldrslt }}
{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}
\par {\uldb\cf11 File}{\v IDH_file}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 4944485f66696c65}}}{\fldrslt }}
{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}
\par {\uldb\cf11 File Operations}{\v IDH_file_operations}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 
4944485f66696c655f6f7065726174696f6e73}}}{\fldrslt }}{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}
\par {\uldb\cf11 Flag}{\v IDH_flag}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 4944485f666c6167}}}{\fldrslt }}
{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}
\par {\uldb\cf11 Group}{\v IDH_group}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 4944485f67726f7570}}}{\fldrslt }}
{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}
\par {\uldb\cf11 Import-Export}{\v IDH_import_export}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 
4944485f696d706f72745f6578706f7274}}}{\fldrslt }}{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}
\par {\uldb\cf11 Keyboard}{\v IDH_keyboard}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 4944485f6b6579626f617264}}}{\fldrslt }}
{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}
\par {\uldb\cf11 Launch}{\v IDH_launch}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 4944485f6c61756e6368}}}{\fldrslt }}
{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}
\par {\uldb\cf11 Loop}{\v IDH_loop}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 4944485f6c6f6f70}}}{\fldrslt }}
{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}
\par {\uldb\cf11 Notification}{\v IDH_notification}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 
4944485f6e6f74696669636174696f6e}}}{\fldrslt }}{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}
\par {\uldb\cf11 Printer}{\v IDH_printer}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 4944485f7072696e746572}}}{\fldrslt }}
{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}
\par {\uldb\cf11 Signal}{\v IDH_signal}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 4944485f7369676e616c}}}{\fldrslt }}
{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}
\par {\uldb\cf11 Subroutine}{\v IDH_subroutine}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 4944485f737562726f7574696e65}}
}{\fldrslt }}{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}
\par {\uldb\cf11 Text Builder}{\v IDH_text_builder}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 
4944485f746578745f6275696c646572}}}{\fldrslt }}{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}
\par \pard \s27\li360\sa100 
\par \pard\plain \s18\ri14\keepn \b\f7\cf6 \page {\cs16\fs16\up6 {\*\bkmkstart IDH_application}{\*\bkmkend IDH_application}#{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 #} IDH_application}} {\cs16\fs16\up6 ${\footnote \pard\plain \s17\ri20 
\f7\fs20 {\cs16\fs16\up6 $} Application}} {\cs16\fs16\up6 +{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 +} brwsobj18:0000}} {\cs16\fs16\up6 K{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 K} Application}} Application
\par \pard\plain \s3\ri14\sb240\sa120 \b\f5 Signals
\par \pard\plain \s30\fi-2160\li2430\ri20\sa60\tx2430\dxfrtext187\dfrmtxtx187\dfrmtxty187 \f5\fs20 Startup\tab Issued when your application starts up.
\par \pard \s30\fi-2160\li2430\ri20\sa60\tx2430\dxfrtext187\dfrmtxtx187\dfrmtxty187 Suspended\tab Issued when the user switches out of your application and into another.
\par Resumed\tab Issued when the user switches into your application from another application.
\par Mouse Double\tab Issued whenever the mouse button is double-clicked.
\par \pard \s30\fi-2160\li2430\ri20\sa60\tx2430\dxfrtext187\dfrmtxtx187\dfrmtxty187 Mouse Down\tab Issued whenever the mouse button is pressed down, regardless of where the click occurred.
\par Mouse Up\tab Issued whenever the mouse button is released, regardless of where the click occurred.
\par Key Down\tab Issued whenever a key is pressed down, regardless of whether there is an active field to receive the character.
\par Key Up\tab Issued whenever a key is released, regardless of whether there is an active field to receive the character.
\par \pard \s30\fi-2160\li2430\ri20\sa60\tx2430\dxfrtext187\dfrmtxtx187\dfrmtxty187 Disk Inserted\tab 
Issued whenever a disk is inserted into the floppy drive. This signal is not functional on MS Windows; it is included for users who wish to develop Macintosh applications.
\par \pard\plain \s3\ri14\sb240\sa120 \b\f5 Usage
\par \pard\plain \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 \f5\fs20 The Application object issues all generic application- and system-related signals. 
These signals, unlike those issued by other objects, reflect events occurring in or affecting the application as a whole rather than specific objects in it. For instance, you might use the Startup signal, issued when your application starts up, to call fu
nction chains for opening files that have to be loaded before the user takes control of the application.
\par \pard \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 The Application object also provides functions for creating \ldblquote idling\rdblquote  processes in your program. If, for example, you want to stop an animated cursor wit
hin 1/2 second following the termination of a given function chain and the cessation of processor activity, you\rquote 
d use the Idle function to call the Stop Cursor function. Use of the Idle and Stop Cursor functions in this way saves you the trouble of having to call Stop Cursor for every Start Cursor you may use in your application.
\par \pard \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 Finally, the Application object lets you determine from one function chain to the next exactly when screen refreshes take place to reflect changing data.
\par \pard\plain \s18\ri14\keepn \b\f7\cf6 \page {\cs16\fs16\up6 {\*\bkmkstart IDH_bundle}{\*\bkmkend IDH_bundle}#{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 #} IDH_bundle}} {\cs16\fs16\up6 ${\footnote \pard\plain \s17\ri20 \f7\fs20 {
\cs16\fs16\up6 $} Bundle}} {\cs16\fs16\up6 +{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 +} brwsobj18:0005}} {\cs16\fs16\up6 K{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 K} Bundle}} Bundle
\par \pard\plain \s3\ri14\sb240\sa120 \b\f5 Signals
\par \pard\plain \s30\fi-2160\li2430\ri20\sa60\tx2430\dxfrtext187\dfrmtxtx187\dfrmtxty187 \f5\fs20 Dispatched\tab Issued after an assignment of the Bundle has been made to the destination bundle.
\par \pard\plain \s3\ri14\sb240\sa120 \b\f5 Usage
\par \pard\plain \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 \f5\fs20 The Bundle object \ldblquote packages\rdblquote 
 other objects together so that a given operation may be performed on them as a group instead of one by one. Using Bundle makes it easier to transfer objects between applications or to assign one set of objects to another withi
n a single application. These operations are easier because you perform them on the bundle (the group) rather than its individual constituents (the objects). 
\par \pard\plain \s18\ri14\keepn \b\f7\cf6 \page {\cs16\fs16\up6 {\*\bkmkstart IDH_calculation}{\*\bkmkend IDH_calculation}#{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 #} IDH_calculation}} {\cs16\fs16\up6 ${\footnote \pard\plain \s17\ri20 
\f7\fs20 {\cs16\fs16\up6 $} Calculation}} {\cs16\fs16\up6 +{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 +} brwsobj18:0010}} {\cs16\fs16\up6 K{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 K} Calculation}} Calculation
\par \pard\plain \s3\ri14\sb240\sa120 \b\f5 Signals
\par \pard\plain \s30\fi-2160\li2430\ri20\sa60\tx2430\dxfrtext187\dfrmtxtx187\dfrmtxty187 \f5\fs20 Calculated\tab Issued each time the expression is evaluated.
\par \pard \s30\fi-2160\li2430\ri20\sa60\tx2430\dxfrtext187\dfrmtxtx187\dfrmtxty187 Variable Changed\tab Issued any time a variable is changed by user action or under program control.
\par Error in Expression\tab Issued when an error occurs in evaluating the expression (due to a bad variable name, unrecognized operator, etc.).
\par \pard\plain \s3\ri14\sb240\sa120 \b\f5 Usage
\par \pard\plain \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 \f5\fs20 
The Calculation object lets you perform arithmetic and algebraic operations on constants and variables (Number objects). You can define any number of variables, link them to Number objects in your project, and combine the variables in an expression.

\par \pard\plain \s18\ri14\keepn \b\f7\cf6 \page {\cs16\fs16\up6 {\*\bkmkstart IDH_database}{\*\bkmkend IDH_database}#{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 #} IDH_database}} {\cs16\fs16\up6 ${\footnote \pard\plain \s17\ri20 \f7\fs20 {
\cs16\fs16\up6 $} Database}} {\cs16\fs16\up6 +{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 +} brwsobj18:0015}} {\cs16\fs16\up6 K{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 K} Database}} Database
\par \pard\plain \s3\ri14\sb240\sa120 \b\f5 Signals
\par \pard\plain \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 \f5\fs20 None.
\par \pard\plain \s3\ri14\sb240\sa120 \b\f5 Usage
\par \pard\plain \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 \f5\fs20 The Database object provides the means of creating flat-file and relational, single and multi-user, database applications. 
\par \pard \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 
In combination with other objects (Browser, Import-Export, Page Layout, and Table), the Database object allows you to build versatile databases involving ASCII file import and export, multi-column tables, and layouts for reports, labels, and lists. 

\par \pard\plain \s18\ri14\keepn \b\f7\cf6 \page {\cs16\fs16\up6 {\*\bkmkstart IDH_file}{\*\bkmkend IDH_file}#{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 #} IDH_file}} {\cs16\fs16\up6 ${\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 $}
 File}} {\cs16\fs16\up6 +{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 +} brwsobj18:0020}} {\cs16\fs16\up6 K{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 K} File}} File
\par \pard\plain \s3\ri14\sb240\sa120 \b\f5 Signals
\par \pard\plain \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 \f5\fs20 None.
\par \pard\plain \s3\ri14\sb240\sa120 \b\f5 Usage
\par \pard\plain \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 \f5\fs20 The File object allows you to save object data and retrieve it from files created in your own custom format. 
\par \pard \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 Certain objects, namely the Picture, Text, Database, Import-Export, and Sound can create their own files in which to store data. Certain object types also support {\i persistence}
, an attribute that allows objects to store their run time data within the application. However, if an object can\rquote t create its own files, yet you want to store data from the object in an external file, you can use the File object to 
facilitate the data storage. 
\par \pard \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 
When you create or save a File object at run time, the File object makes a copy of the objects it contains and writes the copy to an external data file. Thereafter, when you load the data file, the responsible File object copies the contents of the object
s in the data file to matching objects in your application.
\par \pard \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 A File object can store many objects, including Bundle, Button, Date, Flag, Group, List, Menu, Menu Item, Number, Picture, Subroutine, Table, Text, and Time objects.
\par \pard\plain \s18\ri14\keepn \b\f7\cf6 \page {\cs16\fs16\up6 {\*\bkmkstart IDH_file_operations}{\*\bkmkend IDH_file_operations}#{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 #} IDH_file_operations}} {\cs16\fs16\up6 ${\footnote \pard\plain 
\s17\ri20 \f7\fs20 {\cs16\fs16\up6 $} File Operations}} {\cs16\fs16\up6 +{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 +} brwsobj18:0025}} {\cs16\fs16\up6 K{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 K} File Operations}}
 File Operations
\par \pard\plain \s3\ri14\sb240\sa120 \b\f5 Signals
\par \pard\plain \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 \f5\fs20 Not applicable.
\par \pard\plain \s3\ri14\sb240\sa120 \b\f5 Usage
\par \pard\plain \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 \f5\fs20 
File Operations is a set of functions that work without an object to provide services for handling files and directories. The File Operations functions work with files of all types, not just AppWare
-created files, such as those from the File and Database objects.
\par \pard\plain \s18\ri14\keepn \b\f7\cf6 \page {\cs16\fs16\up6 {\*\bkmkstart IDH_flag}{\*\bkmkend IDH_flag}#{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 #} IDH_flag}} {\cs16\fs16\up6 ${\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 $}
 Flag}} {\cs16\fs16\up6 +{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 +} brwsobj18:0030}} {\cs16\fs16\up6 K{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 K} Flag}} Flag
\par \pard\plain \s3\ri14\sb240\sa120 \b\f5 Signals
\par \pard\plain \s30\fi-2160\li2430\ri20\sa60\tx2430\dxfrtext187\dfrmtxtx187\dfrmtxty187 \f5\fs20 Set\tab Issued when the Flag object has changed to the \ldblquote set\rdblquote  state.
\par \pard \s30\fi-2160\li2430\ri20\sa60\tx2430\dxfrtext187\dfrmtxtx187\dfrmtxty187 Cleared\tab Issued when the Flag object has changed to the \ldblquote clear\rdblquote  state.
\par \pard\plain \s3\ri14\sb240\sa120 \b\f5 Usage
\par \pard\plain \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 \f5\fs20 The Flag object is a kind of Boolean \ldblquote switch.\rdblquote 
 As a Boolean, it has just two states: set (on) or clear (off). In this respect, it is like a checkbox or radio button. It may be used instead of such a button in situations where  an invisible switch is needed to determine the path a fun
ction chain may flow. Unlike checkbox or radio buttons, Flags are not displayed in windows, and are therefore not directly modifiable by the user.
\par \pard\plain \s18\ri14\keepn \b\f7\cf6 \page {\cs16\fs16\up6 {\*\bkmkstart IDH_group}{\*\bkmkend IDH_group}#{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 #} IDH_group}} {\cs16\fs16\up6 ${\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 
$} Group}} {\cs16\fs16\up6 +{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 +} brwsobj18:0035}} {\cs16\fs16\up6 K{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 K} Group}} Group
\par \pard\plain \s3\ri14\sb240\sa120 \b\f5 Signals
\par \pard\plain \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 \f5\fs20 None.
\par \pard\plain \s3\ri14\sb240\sa120 \b\f5 Usage
\par \pard\plain \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 \f5\fs20 The Group object lets you define an indexed group (similar to arrays in Pas
cal or C) of arbitrary objects. Unlike the Bundle object, the Group object does not actually store copies of the objects it references. The Group object merely stores references to its constituent objects. Using these references, the Group object retrieve
s the actual constituent objects on demand.
\par \pard\plain \s18\ri14\keepn \b\f7\cf6 \page {\cs16\fs16\up6 {\*\bkmkstart IDH_import_export}{\*\bkmkend IDH_import_export}#{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 #} IDH_import_export}} {\cs16\fs16\up6 ${\footnote \pard\plain \s17\ri20 
\f7\fs20 {\cs16\fs16\up6 $} Import-Export}} {\cs16\fs16\up6 +{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 +} brwsobj18:0040}} {\cs16\fs16\up6 K{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 K} Import-Export}} Import-Export
\par \pard\plain \s3\ri14\sb240\sa120 \b\f5 Signals
\par \pard\plain \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 \f5\fs20 None.
\par \pard\plain \s3\ri14\sb240\sa120 \b\f5 Usage
\par \pard\plain \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 \f5\fs20 The Import-Export object allows your applications to import and export text data. For example, your application could exchange data with other applications (databases, wo
rd processors, or spreadsheet programs). You can also perform file translation, reading in and modifying lines of data from one file, then writing out the result to a different file.
\par \pard \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 
The import half of the object scans an ASCII text file and transfers it line by line to objects in your application. The export half transfers data from objects in your application to an ASCII text file. Any object that has some sort of textual representa
tion (e.g., Button, Date, Menus, Number, Text, and Time) can participate in this import-export process. 
\par \pard \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 Each line in the text file is divided into a certain number of fields. 
\par \pard\plain \s18\ri14\keepn \b\f7\cf6 \page {\cs16\fs16\up6 {\*\bkmkstart IDH_keyboard}{\*\bkmkend IDH_keyboard}#{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 #} IDH_keyboard}} {\cs16\fs16\up6 ${\footnote \pard\plain \s17\ri20 \f7\fs20 {
\cs16\fs16\up6 $} Keyboard}} {\cs16\fs16\up6 +{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 +} brwsobj18:0045}} {\cs16\fs16\up6 K{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 K} Keyboard}} Keyboard
\par \pard\plain \s3\ri14\sb240\sa120 \b\f5 Signals
\par \pard\plain \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 \f5\fs20 The Keyboard{\i  }
object has a signal for each key on the keyboard. When you press a key, the Keyboard object issues the matching signal. For example, you could program your application to respond when the Home key is pressed by returning to your main application window.

\par \pard\plain \s3\ri14\sb240\sa120 \b\f5 Usage
\par \pard\plain \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 \f5\fs20 The Keyboard object responds to keyboard events by issuing a signal that reports when a key is pressed. Each key on the keyboard has its own signal.
\par \pard \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 
The Keyboard object does not support or relate to field objects such as Text or Number, which independently respond to keyboard actions. The Keyboard object simply allows your program to respond to selected user key presses. 
\par You may use multiple Keyboard objects in your applications. This way, a given key may be used to initiate different function chains depending on which Keyboard object is active at the moment (only one Keyboard object should be active at one time).
\par \pard\plain \s18\ri14\keepn \b\f7\cf6 \page {\cs16\fs16\up6 {\*\bkmkstart IDH_launch}{\*\bkmkend IDH_launch}#{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 #} IDH_launch}} {\cs16\fs16\up6 ${\footnote \pard\plain \s17\ri20 \f7\fs20 {
\cs16\fs16\up6 $} Launch}} {\cs16\fs16\up6 +{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 +} brwsobj18:0050}} {\cs16\fs16\up6 K{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 K} Launch}} Launch
\par \pard\plain \s3\ri14\sb240\sa120 \b\f5 Signals
\par \pard\plain \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 \f5\fs20 None.
\par \pard\plain \s3\ri14\sb240\sa120 \b\f5 Usage
\par \pard\plain \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 \f5\fs20 The Launch{\i  }object lets you launch other applications.
\par \pard\plain \s18\ri14\keepn \b\f7\cf6 \page {\cs16\fs16\up6 {\*\bkmkstart IDH_loop}{\*\bkmkend IDH_loop}#{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 #} IDH_loop}} {\cs16\fs16\up6 ${\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 $}
 Loop}} {\cs16\fs16\up6 +{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 +} brwsobj18:0055}} {\cs16\fs16\up6 K{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 K} Loop}} Loop
\par \pard\plain \s3\ri14\sb240\sa120 \b\f5 Signals
\par \pard\plain \s30\fi-2160\li2430\ri20\sa60\tx2430\dxfrtext187\dfrmtxtx187\dfrmtxty187 \f5\fs20 Each iteration\tab Issued each time through the loop. 
\par \pard\plain \s3\ri14\sb240\sa120 \b\f5 Usage
\par \pard\plain \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 \f5\fs20 The Loop object allows you to designate an arbitrary function chain as a loop, and to specify how many times the loop is to be performed.
\par \pard \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 To repeat a function chain, attach the chain to a Loop object. Then call the Start Loop function from the appropriate function chain to start the loop.
\par \pard \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 You don\rquote t need to use the Loop object in all cases w
here you need to repeat function chains. You can always construct a loop by connecting the signal flow from a function to an earlier function in the same chain. When you do this, you literally create a circle of functions.
\par \pard\plain \s18\ri14\keepn \b\f7\cf6 \page {\cs16\fs16\up6 {\*\bkmkstart IDH_notification}{\*\bkmkend IDH_notification}#{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 #} IDH_notification}} {\cs16\fs16\up6 ${\footnote \pard\plain \s17\ri20 
\f7\fs20 {\cs16\fs16\up6 $} Notification}} {\cs16\fs16\up6 +{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 +} brwsobj18:0060}} {\cs16\fs16\up6 K{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 K} Notification}} Notification
\par \pard\plain \s3\ri14\sb240\sa120 \b\f5 Signals
\par \pard\plain \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 \f5\fs20 None.
\par \pard\plain \s3\ri14\sb240\sa120 \b\f5 Usage
\par \pard\plain \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 \f5\fs20 The AppWare
 programming environment lets you alert the user of your application in several different ways. For example, you can create your own custom alert windows using the Window object, or you can use the General function Beep to generate system beeps. 
\par \pard \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 The Notification object gives you two additional means of alerting the user: by displaying an alert dialog or by causing a window to flash. 
\par \pard\plain \s18\ri14\keepn \b\f7\cf6 \page {\cs16\fs16\up6 {\*\bkmkstart IDH_printer}{\*\bkmkend IDH_printer}#{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 #} IDH_printer}} {\cs16\fs16\up6 ${\footnote \pard\plain \s17\ri20 \f7\fs20 {
\cs16\fs16\up6 $} Printer}} {\cs16\fs16\up6 +{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 +} brwsobj18:0065}} {\cs16\fs16\up6 K{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 K} Printer}} Printer
\par \pard\plain \s3\ri14\sb240\sa120 \b\f5 Signals
\par \pard\plain \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 \f5\fs20 None.
\par \pard\plain \s3\ri14\sb240\sa120 \b\f5 Usage
\par \pard\plain \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 \f5\fs20 
The Printer object lets you print a select set of objects (Window, Text, Page Layout, Table) on most printers. You can use this object to print forms, multiple pages of unformatted text, or just single pages. 
\par \pard \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 When you print a window, data in its field objects (Date, Number, Picture, Table, Text and Time) appears on the page just as it does in the window. Shapes you created with the Window object
\rquote s drawing tools also appear. Frames, if any, containing field objects also print. Control devices (pop-ups, buttons, scales, lists, etc.) do not print.
\par \pard \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 
Printing a window is the way you generate a form. A strategy for doing this is to use one Window object for data entry, and another, not displayed on the screen, but containing the same field objects, for printing. For multi-page forms, use multiple windo
ws.
\par \pard \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 When you print Text objects, the text in the object prints to one or more pages, in an unformatted fashion. Printing Text objects is, therefore, useful only for seeing draft versions of data.

\par \pard \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 To generate labels and multi-record lists, use the Page Layout or Forms objects. 
\par \pard\plain \s18\ri14\keepn \b\f7\cf6 \page {\cs16\fs16\up6 {\*\bkmkstart IDH_signal}{\*\bkmkend IDH_signal}#{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 #} IDH_signal}} {\cs16\fs16\up6 ${\footnote \pard\plain \s17\ri20 \f7\fs20 {
\cs16\fs16\up6 $} Signal}} {\cs16\fs16\up6 +{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 +} brwsobj18:0070}} {\cs16\fs16\up6 K{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 K} Signal}} Signal
\par \pard\plain \s3\ri14\sb240\sa120 \b\f5 Signals
\par \pard\plain \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 \f5\fs20 The Signal object issues signals using the strings (text or numbers) you specify in the editing dialog.
\par \pard\plain \s30\fi-2160\li2430\ri20\sa60\tx2430\dxfrtext187\dfrmtxtx187\dfrmtxty187 \f5\fs20 None\tab Issued if none of the signals match the specified string.
\par \pard \s30\fi-2160\li2430\ri20\sa60\tx2430\dxfrtext187\dfrmtxtx187\dfrmtxty187 Any\tab Issued if any of the signals match the specified string.
\par \pard\plain \s3\ri14\sb240\sa120 \b\f5 Usage
\par \pard\plain \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 \f5\fs20 
The Signal object allows you to invoke a function chain based on the contents of an object (Number, Text, etc.). The Signal object looks for specific data (numbers or text characters) in a designated object. When the object\rquote 
s data matches the specified data, the Signal object issues a signal that can be used to a call a particular function chain.
\par \pard\plain \s18\ri14\keepn \b\f7\cf6 \page {\cs16\fs16\up6 {\*\bkmkstart IDH_subroutine}{\*\bkmkend IDH_subroutine}#{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 #} IDH_subroutine}} {\cs16\fs16\up6 ${\footnote \pard\plain \s17\ri20 \f7\fs20 {
\cs16\fs16\up6 $} Subroutine}} {\cs16\fs16\up6 +{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 +} brwsobj18:0075}} {\cs16\fs16\up6 K{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 K} Subroutine}} Subroutine
\par \pard\plain \s3\ri14\sb240\sa120 \b\f5 Signals
\par \pard\plain \s30\fi-2160\li2430\ri20\sa60\tx2430\dxfrtext187\dfrmtxtx187\dfrmtxty187 \f5\fs20 Called\tab Issued whenever the Call Subroutine function referencing the subroutine is called.
\par \pard\plain \s3\ri14\sb240\sa120 \b\f5 Usage
\par \pard\plain \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 \f5\fs20 The Subroutine object resembles t
he Loop object in  general conception, in that it allows you to define an arbitrary function chain as a subroutine. Once defined, you can invoke the function chain by calling the Call Subroutine function.
\par \pard\plain \s18\ri14\keepn \b\f7\cf6 \page {\cs16\fs16\up6 {\*\bkmkstart IDH_text_builder}{\*\bkmkend IDH_text_builder}#{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 #} IDH_text_builder}} {\cs16\fs16\up6 ${\footnote \pard\plain \s17\ri20 
\f7\fs20 {\cs16\fs16\up6 $} Text Builder}} {\cs16\fs16\up6 +{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 +} brwsobj18:0080}} {\cs16\fs16\up6 K{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 K} Text Builder}} Text Builder
\par \pard\plain \s3\ri14\sb240\sa120 \b\f5 Signals
\par \pard\plain \s30\fi-2160\li2430\ri20\sa60\tx2430\dxfrtext187\dfrmtxtx187\dfrmtxty187 \f5\fs20 Updated\tab Issued each time the expression is evaluated.
\par \pard \s30\fi-2160\li2430\ri20\sa60\tx2430\dxfrtext187\dfrmtxtx187\dfrmtxty187 Variable Changed\tab Issued any time an object variable is changed by user action or under program control.
\par Error\tab Issued when an error occurs in evaluating the expression (due to a bad variable name, unrecognized operator, etc.).
\par \pard\plain \s3\ri14\sb240\sa120 \b\f5 Usage
\par \pard\plain \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 \f5\fs20 Text Builder facilitates the process of building complicated text strings involving Text, Number, Date and Time objects and fixed keyboard characters (\ldblquote literals
\rdblquote ). The object works much like the Calculation object, providing you with any number of namable text variables, which can be linked to the objects mentioned above, then combined by means of a script or expression. 
\par \pard\plain \s18\ri14\keepn \b\f7\cf6 \page {\cs16\fs16\up6 {\*\bkmkstart IDH_netware_services}{\*\bkmkend IDH_netware_services}#{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 #} IDH_netware_services}} {\cs16\fs16\up6 ${\footnote \pard\plain 
\s17\ri20 \f7\fs20 {\cs16\fs16\up6 $} NetWare Services}} {\cs16\fs16\up6 K{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 K} NetWare Services}} NetWare Services
\par \pard\plain \s27\li360\sa100 \f7\fs20 
\par {\uldb\cf11 NW DS Data}{\v IDH_nw_ds_data}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 4944485f6e775f64735f64617461}}
}{\fldrslt }}{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}
\par {\uldb\cf11 NW DS Query}{\v IDH_nw_ds_query}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 4944485f6e775f64735f7175657279}}
}{\fldrslt }}{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}
\par {\uldb\cf11 NW Error ALM}{\v IDH_nw_error_alm}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 
4944485f6e775f6572726f725f616c6d}}}{\fldrslt }}{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}
\par \pard \s27\li360\sa100 
\par \pard\plain \s18\ri14\keepn \b\f7\cf6 \page {\cs16\fs16\up6 {\*\bkmkstart IDH_nw_ds_data}{\*\bkmkend IDH_nw_ds_data}#{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 #} IDH_nw_ds_data}} {\cs16\fs16\up6 ${\footnote \pard\plain \s17\ri20 \f7\fs20 {
\cs16\fs16\up6 $} NW DS Data}} {\cs16\fs16\up6 +{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 +} brwsobj19:0000}} {\cs16\fs16\up6 K{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 K} NW DS Data}} NW DS Data
\par \pard\plain \s3\ri14\sb240\sa120 \b\f5 Signals
\par \pard\plain \s30\fi-2160\li2430\ri20\sa60\tx2430\dxfrtext187\dfrmtxtx187\dfrmtxty187 \f5\fs20 At Startup\tab Issued when the application starts up.
\par \pard \s30\fi-2160\li2430\ri20\sa60\tx2430\dxfrtext187\dfrmtxtx187\dfrmtxty187 At Shutdown\tab Issued when the application shuts down.
\par \pard\plain \s3\ri14\sb240\sa120 \b\f5 Usage
\par \pard\plain \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 \f5\fs20 Directory Services, a component of the NetWare 4.x operating system, provides a global system database called the {\i directory} that maintains 
information about and provides access to every resource on the network.
\par \pard \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 The directory treats all network resources (users, groups, printers, volumes, servers, etc.) as {\i objects}, each of which possesses attributes known as {\i properties}
. Each property in turn consists of one or more values. Values are the data that a property contains. For example, a user object has properties for telephone number, login script, etc. Properties are identified by a {\i type}
 that specifies the kind of data that the property contains. Valid types include Date/Time, Net Address, Number, Table, Text, and Time. Since a given object may contain several properties of each type, properties are distinguished from each other by name.

\par \pard \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 Thus, for instance, to get the date of a user\rquote s last login, you read the user object from the directory and then use a function to get one of the object\rquote 
s date/time properties known as \ldblquote Last Login Time\rdblquote . 
\par AppWare gives you easy access to NetWare Directory Services through two high-level objects and their associated functions. 
\par \pard \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 
The NW DS Data object stores information relating to an object in the NetWare directory, to which it has a one-to-one relationship. This information may come from the directory or may be set under program control using the various Set <Type> Property func
tions. Additional functions enable you to {\i get} information from the NW DS Data object.
\par \pard \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 The NW DS Query object specifies the criteria that are used to retrieve data from the directory.
\par \pard \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 To read an object from the directory, you use the NW
 DS Data function Read Object. This gets data from an object in the directory and returns it to your application in the form of an NW DS Data output parameter. You pass this parameter to an NW DS Data object in your application. Using other NW DS Data fun
ctions, you can then analyze the data property by property.
\par \pard \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 
To create or modify an object in the directory, you first define its properties and values using the NW DS Data object. These  properties and values may previously have been read from the directory
 and then changed, or they may have been created by user entry or program control. Once you\rquote ve configured the NW DS Data object, you can use a function such as Create Object to change the directory itself.
\par \pard\plain \s18\ri14\keepn \b\f7\cf6 \page {\cs16\fs16\up6 {\*\bkmkstart IDH_nw_ds_query}{\*\bkmkend IDH_nw_ds_query}#{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 #} IDH_nw_ds_query}} {\cs16\fs16\up6 ${\footnote \pard\plain \s17\ri20 
\f7\fs20 {\cs16\fs16\up6 $} NW DS Query}} {\cs16\fs16\up6 +{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 +} brwsobj19:0005}} {\cs16\fs16\up6 K{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 K} NW DS Query}} NW DS Query
\par \pard\plain \s3\ri14\sb240\sa120 \b\f5 Signals
\par \pard\plain \s30\fi-2160\li2430\ri20\sa60\tx2430\dxfrtext187\dfrmtxtx187\dfrmtxty187 \f5\fs20 At Startup\tab Issued when the application starts up.
\par \pard \s30\fi-2160\li2430\ri20\sa60\tx2430\dxfrtext187\dfrmtxtx187\dfrmtxty187 At Shutdown\tab Issued when the application shuts down.
\par \pard\plain \s3\ri14\sb240\sa120 \b\f5 Usage
\par \pard\plain \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 \f5\fs20 The NW DS Query object lets you perform searches in and retrieve data from the NetWare directory. Specifically, it provides information used by the List Subordinates, Ob
ject Exists?, Read Object, and Set New Context functions to retrieve an object\rquote 
s data from the directory. The only object data that you can access without NW DS Query is a listing of classes and properties. The use of this object is further illustrated in the introduction to its companion, the NW DS Data object.
\par \pard\plain \s18\ri14\keepn \b\f7\cf6 \page {\cs16\fs16\up6 {\*\bkmkstart IDH_nw_error_alm}{\*\bkmkend IDH_nw_error_alm}#{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 #} IDH_nw_error_alm}} {\cs16\fs16\up6 ${\footnote \pard\plain \s17\ri20 
\f7\fs20 {\cs16\fs16\up6 $} NW Error ALM}} {\cs16\fs16\up6 +{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 +} brwsobj19:0010}} {\cs16\fs16\up6 K{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 K} NW Error ALM}} NW Error ALM
\par \pard\plain \s3\ri14\sb240\sa120 \b\f5 Signals
\par \pard\plain \s30\fi-2160\li2434\ri14\sa60\tx2430\dxfrtext187\dfrmtxtx187\dfrmtxty187 \f5\fs20 None.
\par \pard\plain \s3\ri14\sb240\sa120 \b\f5 Usage
\par \pard\plain \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 \f5\fs20 The role of the NW Error object and its functions is to control NetWare error reports that may be generated while executing NW DS Data, NW DS Query, or NW A
uthentication functions.
\par \pard\plain \s18\ri14\keepn \b\f7\cf6 \page {\cs16\fs16\up6 {\*\bkmkstart IDH_client_server}{\*\bkmkend IDH_client_server}#{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 #} IDH_client_server}} {\cs16\fs16\up6 ${\footnote \pard\plain \s17\ri20 
\f7\fs20 {\cs16\fs16\up6 $} Client-Server}} {\cs16\fs16\up6 K{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 K} Client-Server}} Client-Server
\par \pard\plain \s27\li360\sa100 \f7\fs20 
\par {\uldb\cf11 Oracle Connection}{\v IDH_oracle_connection}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 
4944485f6f7261636c655f636f6e6e656374696f6e}}}{\fldrslt }}{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}
\par {\uldb\cf11 Oracle SQL}{\v IDH_oracle_sql}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 4944485f6f7261636c655f73716c}}
}{\fldrslt }}{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}
\par {\uldb\cf11 ODBC Connection}{\v IDH_odbc_connection}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 
4944485f6f6462635f636f6e6e656374696f6e}}}{\fldrslt }}{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}
\par {\uldb\cf11 ODBC SQL}{\v IDH_odbc_sql}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 4944485f6f6462635f73716c}}}{\fldrslt }}
{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}
\par \pard \s27\li360\sa100 
\par \pard\plain \s18\ri14\keepn \b\f7\cf6 \page {\cs16\fs16\up6 {\*\bkmkstart IDH_oracle_connection}{\*\bkmkend IDH_oracle_connection}#{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 #} IDH_oracle_connection}} {\cs16\fs16\up6 ${\footnote 
\pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 $} Oracle Connection}} {\cs16\fs16\up6 +{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 +} brwsobj20:0000}} {\cs16\fs16\up6 K{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 K}
 Oracle Connection}} Oracle Connection
\par \pard\plain \s3\ri14\sb240\sa120 \b\f5 Signals
\par \pard\plain \s30\fi-2160\li2430\ri20\sa60\tx2430\dxfrtext187\dfrmtxtx187\dfrmtxty187 \f5\fs20 None.
\par \pard\plain \s3\ri14\sb240\sa120 \b\f5 Usage
\par \pard\plain \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 \f5\fs20 The Oracle Connection object enables applications to:
\par \pard \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 \bullet \tab Connect to Oracle
\par \bullet \tab Disconnect from Oracle
\par \bullet \tab Check the status of a connection
\par \bullet \tab Commit transactions
\par \bullet \tab Rollback transactions
\par \bullet \tab Retrieve Oracle connection error messages
\par \bullet \tab Set the maximum number of rows to buffer
\par \pard\plain \s18\ri14\keepn \b\f7\cf6 \page {\cs16\fs16\up6 {\*\bkmkstart IDH_oracle_sql}{\*\bkmkend IDH_oracle_sql}#{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 #} IDH_oracle_sql}} {\cs16\fs16\up6 ${\footnote \pard\plain \s17\ri20 \f7\fs20 {
\cs16\fs16\up6 $} Oracle SQL}} {\cs16\fs16\up6 +{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 +} brwsobj20:0005}} {\cs16\fs16\up6 K{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 K} Oracle SQL}} Oracle SQL
\par \pard\plain \s3\ri14\sb240\sa120 \b\f5 Signals
\par \pard\plain \s30\fi-2160\li2430\ri20\sa60\tx2430\dxfrtext187\dfrmtxtx187\dfrmtxty187 \f5\fs20 None.
\par \pard\plain \s3\ri14\sb240\sa120 \b\f5 Usage
\par \pard\plain \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 \f5\fs20 \bullet \tab Connect to Oracle
\par \pard \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 \bullet \tab Get a list of the tables available to a specified Oracle user
\par \bullet \tab Get a list of the columns in a specified Oracle table
\par \bullet \tab Validate a SQL statement
\par \bullet \tab Disconnect from Oracle
\par \bullet \tab Create SQL statements
\par \pard\plain \s18\ri14\keepn \b\f7\cf6 \page {\cs16\fs16\up6 {\*\bkmkstart IDH_odbc_connection}{\*\bkmkend IDH_odbc_connection}#{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 #} IDH_odbc_connection}} {\cs16\fs16\up6 ${\footnote \pard\plain 
\s17\ri20 \f7\fs20 {\cs16\fs16\up6 $} ODBC Connection}} {\cs16\fs16\up6 +{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 +} brwsobj20:0010}} {\cs16\fs16\up6 K{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 K} ODBC Connection}}
 ODBC Connection
\par \pard\plain \s3\ri14\sb240\sa120 \b\f5 Signals
\par \pard\plain \s30\fi-2160\li2430\ri20\sa60\tx2430\dxfrtext187\dfrmtxtx187\dfrmtxty187 \f5\fs20 If Error\tab Issued when an ODBC error is encountered.
\par \pard\plain \s3\ri14\sb240\sa120 \b\f5 Usage
\par \pard\plain \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 \f5\fs20 The ODBC Connection object allows applications to:
\par \pard \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 \bullet \tab Connect to ODBC
\par \bullet \tab Disconnect from ODBC
\par \bullet \tab Auto-commit transactions (optionally)
\par \pard\plain \s18\ri14\keepn \b\f7\cf6 \page {\cs16\fs16\up6 {\*\bkmkstart IDH_odbc_sql}{\*\bkmkend IDH_odbc_sql}#{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 #} IDH_odbc_sql}} {\cs16\fs16\up6 ${\footnote \pard\plain \s17\ri20 \f7\fs20 {
\cs16\fs16\up6 $} ODBC SQL}} {\cs16\fs16\up6 +{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 +} brwsobj20:0015}} {\cs16\fs16\up6 K{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 K} ODBC SQL}} ODBC SQL
\par \pard\plain \s3\ri14\sb240\sa120 \b\f5 Signals
\par \pard\plain \s30\fi-2160\li2430\ri20\sa60\tx2430\dxfrtext187\dfrmtxtx187\dfrmtxty187 \f5\fs20 If Error\tab Issued when an ODBC error occurs.
\par \pard\plain \s3\ri14\sb240\sa120 \b\f5 Usage
\par \pard\plain \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 \f5\fs20 The ODBC SQL object allows applications to:
\par \pard \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 \bullet \tab Execute SQL statements
\par \bullet \tab Retrieve SELECT statement results from Oracle
\par \bullet \tab Dispose of SELECT statement results queued by Oracle
\par \bullet \tab Retrieve Oracle query error messages
\par \pard\plain \s18\ri14\keepn \b\f7\cf6 \page {\cs16\fs16\up6 {\*\bkmkstart IDH_multimedia}{\*\bkmkend IDH_multimedia}#{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 #} IDH_multimedia}} {\cs16\fs16\up6 ${\footnote \pard\plain \s17\ri20 \f7\fs20 {
\cs16\fs16\up6 $} Multimedia}} {\cs16\fs16\up6 K{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 K} Multimedia}} Multimedia
\par \pard\plain \s27\li360\sa100 \f7\fs20 
\par {\uldb\cf11 Movie}{\v IDH_movie}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 4944485f6d6f766965}}}{\fldrslt }}
{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}
\par {\uldb\cf11 Movie Controller}{\v IDH_movie_controller}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 
4944485f6d6f7669655f636f6e74726f6c6c6572}}}{\fldrslt }}{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}
\par {\uldb\cf11 PolyButton}{\v IDH_polybutton}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 4944485f706f6c79627574746f6e}}
}{\fldrslt }}{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}
\par {\uldb\cf11 Sound}{\v IDH_sound}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 4944485f736f756e64}}}{\fldrslt }}
{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}
\par \pard \s27\li360\sa100 
\par \pard\plain \s18\ri14\keepn \b\f7\cf6 \page {\cs16\fs16\up6 {\*\bkmkstart IDH_movie}{\*\bkmkend IDH_movie}#{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 #} IDH_movie}} {\cs16\fs16\up6 ${\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 
$} Movie}} {\cs16\fs16\up6 +{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 +} brwsobj21:0000}} {\cs16\fs16\up6 K{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 K} Movie}} Movie
\par \pard\plain \s3\ri14\sb240\sa120 \b\f5 Signals
\par \pard\plain \s30\fi-2160\li2430\ri20\sa60\tx2430\dxfrtext187\dfrmtxtx187\dfrmtxty187 \f5\fs20 Single Click\tab Issued when a single click occurs in the movie.
\par \pard \s30\fi-2160\li2430\ri20\sa60\tx2430\dxfrtext187\dfrmtxtx187\dfrmtxty187 Double Click\tab Issued when a double click occurs in the movie.
\par Movie Changed\tab Issued when the current movie is changed.
\par \pard \s30\fi-2160\li2430\ri20\sa60\tx2430\dxfrtext187\dfrmtxtx187\dfrmtxty187 View Changed\tab Issued when the current movie\rquote s attributes are changed, such as, Border, Badge, dimensions, scale, etc.
\par \pard \s30\fi-2160\li2430\ri20\sa60\tx2430\dxfrtext187\dfrmtxtx187\dfrmtxty187 Stopped\tab Issued when the movie stops.
\par Done\tab Issued when the movie has finished playing.
\par Activated\tab Issued when the user tabs into or otherwise activates the movie field.
\par Deactivated\tab Issued when the user tabs out of or otherwise deactivates the movie field.
\par \pard\plain \s3\ri14\sb240\sa120 \b\f5 Usage
\par \pard\plain \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 \f5\fs20 The Movie object allows you to display, edit, and manipulate QuickTime movies. It does not at this time let you create movies from scratch.
\par \pard\plain \s18\ri14\keepn \b\f7\cf6 \page {\cs16\fs16\up6 {\*\bkmkstart IDH_movie_controller}{\*\bkmkend IDH_movie_controller}#{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 #} IDH_movie_controller}} {\cs16\fs16\up6 ${\footnote \pard\plain 
\s17\ri20 \f7\fs20 {\cs16\fs16\up6 $} Movie Controller}} {\cs16\fs16\up6 +{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 +} brwsobj21:0005}} {\cs16\fs16\up6 K{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 K} Movie Controller}}
 Movie Controller
\par \pard\plain \s3\ri14\sb240\sa120 \b\f5 Signals
\par \pard\plain \s30\fi-2160\li2430\ri20\sa60\tx2430\dxfrtext187\dfrmtxtx187\dfrmtxty187 \f5\fs20 Volume Clicked\tab Issued whenever the user clicks in the sound button.
\par \pard \s30\fi-2160\li2430\ri20\sa60\tx2430\dxfrtext187\dfrmtxtx187\dfrmtxty187 Action Clicked\tab Issued whenever the user clicks in the action button.
\par Scroll Area Clicked\tab Issued whenever the user clicks in the scroll area or on the thumb.
\par Stepper Clicked\tab Issued whenever the user clicks in one of the stepper buttons.
\par \pard\plain \s3\ri14\sb240\sa120 \b\f5 Usage
\par \pard\plain \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 \f5\fs20 
The Controller object allows you to set up a sliding control for navigating through QuickTime movies in the Movie object. By placing a Controller object in a window and attaching it to a Movie object, you can instantly play and step through QuickTime movi
es. You don\rquote t need to use the Controller object to play and manipulate movies \endash  it just makes things easier.
\par \pard\plain \s30\fi-2160\li2430\ri20\sa60\tx2430\dxfrtext187\dfrmtxtx187\dfrmtxty187 \f5\fs20 Note:\tab Windows User\rquote s: The Movie Controller object, although displayed as a separate object in the Object & Funct
ion Palette, is integrated with in the Movie object. However, you will not see a separate instance of the Movie Controller in the Window Layout.
\par \pard\plain \s18\ri14\keepn \b\f7\cf6 \page {\cs16\fs16\up6 {\*\bkmkstart IDH_polybutton}{\*\bkmkend IDH_polybutton}#{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 #} IDH_polybutton}} {\cs16\fs16\up6 ${\footnote \pard\plain \s17\ri20 \f7\fs20 {
\cs16\fs16\up6 $} PolyButton}} {\cs16\fs16\up6 +{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 +} brwsobj21:0010}} {\cs16\fs16\up6 K{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 K} PolyButton}} PolyButton
\par \pard\plain \s3\ri14\sb240\sa120 \b\f5 Signals
\par \pard\plain \s30\fi-2160\li2430\ri20\sa60\tx2430\dxfrtext187\dfrmtxtx187\dfrmtxty187 \f5\fs20 Region Clicked\tab Issued whenever any region is clicked.
\par \pard \s30\fi-2160\li2430\ri20\sa60\tx2430\dxfrtext187\dfrmtxtx187\dfrmtxty187 Region Hilited\tab Issued whenever any region is highlighted.
\par Region Unhilited\tab Issued whenever any region is unhighlighted.
\par [Name] Pushed\tab Issued whenever the specific region is pushed.
\par [Name] Hilited\tab Issued whenever the specific region is highlighted.
\par [Name] Unhilited\tab Issued whenever the specific region is unhighlighted.
\par [Name] Hilited\tab Issued whenever the specific region is highlighted.
\par [Name] Unhilited\tab Issued whenever the specific region is unhighlighted.
\par [Name] Clicked\tab Issued whenever the specific region is clicked.
\par \pard\plain \s3\ri14\sb240\sa120 \b\f5 Usage
\par \pard\plain \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 \f5\fs20 
The PolyButton object is a collection of special multimedia objects for creating attractive, multipart buttons, using graphic images that you can design in any paint or draw program. After designing your polybuttons, you place them in the Window object, a
s you do any window item.
\par \pard\plain \s30\fi-2160\li2430\ri20\sa60\tx2430\dxfrtext187\dfrmtxtx187\dfrmtxty187 \f5\fs20 Note:\tab 
The PolyButton object is a non-UPSF object. The regions defined in the Windows and Macintosh versions are not compatible. They use entirely different selection and definition processes.
\par \pard\plain \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 \f5\fs20 
The basic concept of the PolyButton is to alternate the display of two pictures when the mouse is clicked in regions that you draw over the images. The alternating pictures are clipped to the outline of the region clicked. The visual effect is that mouse 
clicks toggle the image inside the clicked region between a normal picture and a highlight picture.
\par \pard\plain \s18\ri14\keepn \b\f7\cf6 \page {\cs16\fs16\up6 {\*\bkmkstart IDH_sound}{\*\bkmkend IDH_sound}#{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 #} IDH_sound}} {\cs16\fs16\up6 ${\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 
$} Sound}} {\cs16\fs16\up6 +{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 +} brwsobj21:0015}} {\cs16\fs16\up6 K{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 K} Sound}} Sound
\par \pard\plain \s3\ri14\sb240\sa120 \b\f5 Signals
\par \pard\plain \s30\fi-2160\li2430\ri20\sa60\tx2430\dxfrtext187\dfrmtxtx187\dfrmtxty187 \f5\fs20 Sound Done\tab Issued when the sound stops playing.
\par \pard\plain \s3\ri14\sb240\sa120 \b\f5 Usage
\par \pard\plain \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 \f5\fs20 
Sounds make your programs more user-friendly by providing audio feedback to certain user actions. Sounds can also be used in multimedia programs, along with animations or interactive graphics, to make the program more interesting.
\par \pard \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 The Sound object allows your applications to load, record, and play digitized sound. The Sound object works with both sound resources and sound files. Sounds c
an be directly recorded as resources that are stored in the Sound object or recorded to a file. Sounds can also be loaded from a sound file or resource. Since resources stored inside a Sound object become a permanent part of your application and take up a
 large amount of memory, it\rquote s often a good idea to load the sounds you need from sound files instead.
\par \pard \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 The Sound object plays its sounds asynchronously, which means that sounds can play while the computer and the user are doing other things. Only one sound a
t a time can be loaded and played in a Sound object.
\par \pard \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 Functions are available to play, stop, record, and load sound files.
\par Sounds can be saved in files or databases, and can be assigned via the Assign function.
\par \pard\plain \s18\ri14\keepn \b\f7\cf6 \page {\cs16\fs16\up6 {\*\bkmkstart IDH_communications}{\*\bkmkend IDH_communications}#{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 #} IDH_communications}} {\cs16\fs16\up6 ${\footnote \pard\plain 
\s17\ri20 \f7\fs20 {\cs16\fs16\up6 $} Communications}} {\cs16\fs16\up6 K{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 K} Communications}} Communications
\par \pard\plain \s27\li360\sa100 \f7\fs20 
\par {\uldb\cf11 Connection}{\v IDH_connection}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 4944485f636f6e6e656374696f6e}}
}{\fldrslt }}{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}
\par {\uldb\cf11 File Transfer}{\v IDH_file_transfer}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 
4944485f66696c655f7472616e73666572}}}{\fldrslt }}{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}
\par {\uldb\cf11 Terminal}{\v IDH_terminal}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 4944485f7465726d696e616c}}}{\fldrslt }}
{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}
\par \pard \s27\li360\sa100 
\par \pard\plain \s18\ri14\keepn \b\f7\cf6 \page {\cs16\fs16\up6 {\*\bkmkstart IDH_connection}{\*\bkmkend IDH_connection}#{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 #} IDH_connection}} {\cs16\fs16\up6 ${\footnote \pard\plain \s17\ri20 \f7\fs20 {
\cs16\fs16\up6 $} Connection}} {\cs16\fs16\up6 +{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 +} brwsobj22:0000}} {\cs16\fs16\up6 K{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 K} Connection}} Connection
\par \pard\plain \s3\ri14\sb240\sa120 \b\f5 Signals
\par \pard\plain \s30\fi-2160\li2430\ri20\sa60\tx2430\dxfrtext187\dfrmtxtx187\dfrmtxty187 \f5\fs20 Not applicable.
\par \pard\plain \s3\ri14\sb240\sa120 \b\f5 Usage
\par \pard\plain \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 \f5\fs20 The Connection editing dialog allows you to create search string signals that you use to call function chains whenever the strings that you\rquote 
re interested in arrive over the connection. The text for the string signals can be added directly in the editing d
ialog. You can also specify whether a search string signal will be active or inactive at startup. The ability to activate and deactivate signals is us
eful when you want to look for separate sets of strings at different times during execution. After you build your application, the number of string signals does not change, but you can activate, deactivate, and set search strings associated with these sig
nals using the Activate Search, Deactivate Search, and Set Search functions.
\par \pard \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 Even though string signals can be active at startup, searching will not actually take place until the connection has been opened. 
\par \pard \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 Signals are identified by their index numbers in 
the String Signals list. The numbering of the search signals does not change when you add a signal to or remove one from the list. For example, consider a list consisting of 6 string signals numbered 1, 2, 3, 4, 5, and 6. After deleting signal number 4, t
he numbering would be 1, 2, 3, 5, and 6. When signals are added, gaps in the list are filled before new rows are appended. To take the previous example, then, if 3 new strings were added, position 4 would be filled before the two remaining signals are add
ed to the end of the list.
\par \pard\plain \s18\ri14\keepn \b\f7\cf6 \page {\cs16\fs16\up6 {\*\bkmkstart IDH_file_transfer}{\*\bkmkend IDH_file_transfer}#{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 #} IDH_file_transfer}} {\cs16\fs16\up6 ${\footnote \pard\plain \s17\ri20 
\f7\fs20 {\cs16\fs16\up6 $} File Transfer}} {\cs16\fs16\up6 +{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 +} brwsobj22:0005}} {\cs16\fs16\up6 K{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 K} File Transfer}} File Transfer
\par \pard\plain \s3\ri14\sb240\sa120 \b\f5 Signals
\par \pard\plain \s30\fi-2160\li2430\ri20\sa60\tx2430\dxfrtext187\dfrmtxtx187\dfrmtxty187 \f5\fs20 Not applicable. 
\par \pard\plain \s3\ri14\sb240\sa120 \b\f5 Usage
\par \pard\plain \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 \f5\fs20 The File Transfer object requires a Connection object to send and receive its raw data.
\par \pard\plain \s18\ri14\keepn \b\f7\cf6 \page {\cs16\fs16\up6 {\*\bkmkstart IDH_terminal}{\*\bkmkend IDH_terminal}#{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 #} IDH_terminal}} {\cs16\fs16\up6 ${\footnote \pard\plain \s17\ri20 \f7\fs20 {
\cs16\fs16\up6 $} Terminal}} {\cs16\fs16\up6 +{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 +} brwsobj22:0010}} {\cs16\fs16\up6 K{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 K} Terminal}} Terminal
\par \pard\plain \s3\ri14\sb240\sa120 \b\f5 Signals
\par \pard\plain \s30\fi-2160\li2430\ri20\sa60\tx2430\dxfrtext187\dfrmtxtx187\dfrmtxty187 \f5\fs20 Not applicable.
\par \pard\plain \s3\ri14\sb240\sa120 \b\f5 Usage
\par \pard\plain \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 \f5\fs20 The Terminal object requires a Connection object to send and receive its raw data.
\par \pard\plain \s18\ri14\keepn \b\f7\cf6 \page {\cs16\fs16\up6 {\*\bkmkstart IDH_application_linking}{\*\bkmkend IDH_application_linking}#{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 #} IDH_application_linking}} {\cs16\fs16\up6 ${\footnote 
\pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 $} Application Linking}} {\cs16\fs16\up6 K{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 K} Application Linking}} Application Linking
\par \pard\plain \s27\li360\sa100 \f7\fs20 
\par {\uldb\cf11 DDE Client}{\v IDH_dde_client}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 4944485f6464655f636c69656e74}}
}{\fldrslt }}{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}
\par {\uldb\cf11 DDE Server}{\v IDH_dde_server}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 4944485f6464655f736572766572}}
}{\fldrslt }}{\field{\*\fldinst {\cf1  macrobutton NextField }}{\fldrslt }}
\par {\uldb\cf11 DLL}{\v IDH_dll}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 4944485f646c6c}}}{\fldrslt }}{\field{\*\fldinst {
\cf1  macrobutton NextField }}{\fldrslt }}
\par {\uldb\cf11 OLE}{\v IDH_ole}{\field{\*\fldinst  macrobutton NextField }{\fldrslt }}{\field{\*\fldinst {\cf1  }{\cf6 macrobutton DoJump2 <+>}}{\fldrslt }}{\field{\*\fldinst {\cf1  ADDIN }{\cf1 {\*\datafield 4944485f6f6c65}}}{\fldrslt }}{\field{\*\fldinst {
\cf1  macrobutton NextField }}{\fldrslt }}
\par \pard \s27\li360\sa100 
\par \pard\plain \s18\ri14\keepn \b\f7\cf6 \page {\cs16\fs16\up6 {\*\bkmkstart IDH_dde_client}{\*\bkmkend IDH_dde_client}#{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 #} IDH_dde_client}} {\cs16\fs16\up6 ${\footnote \pard\plain \s17\ri20 \f7\fs20 {
\cs16\fs16\up6 $} DDE Client}} {\cs16\fs16\up6 +{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 +} brwsobj23:0000}} {\cs16\fs16\up6 K{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 K} DDE Client}} DDE Client
\par \pard\plain \s3\ri14\sb240\sa120 \b\f5 Signals
\par \pard\plain \s30\fi-2160\li2430\ri20\sa60\tx2430\dxfrtext187\dfrmtxtx187\dfrmtxty187 \f5\fs20 Conversation Started\tab \line Issued when a conversation begins. 
\par \pard \s30\fi-2160\li2430\ri20\sa60\tx2430\dxfrtext187\dfrmtxtx187\dfrmtxty187 Conversation Terminated
\par \tab Issued when a conversion stops or when all conversations are stopped.
\par Auto/Notify Transaction Started
\par \pard \s30\fi-2160\li2430\ri20\sa60\tx2430\dxfrtext187\dfrmtxtx187\dfrmtxty187 \tab Issued when an automatic or notify type transaction is started. You
 may respond to this event by calling the Last New Transaction function to retrieve the ID number of the transaction.
\par \pard \s30\fi-2160\li2430\ri20\sa60\tx2430\dxfrtext187\dfrmtxtx187\dfrmtxty187 Auto/Notify Transaction Stopped
\par \pard \s30\fi-2160\li2430\ri20\sa60\tx2430\dxfrtext187\dfrmtxtx187\dfrmtxty187 \tab 
Issued when an automatic or notify type transaction is terminated. You may respond to this event by calling the Last Updated Transaction function to retrieve the ID number of the transaction.
\par \pard \s30\fi-2160\li2430\ri20\sa60\tx2430\dxfrtext187\dfrmtxtx187\dfrmtxty187 Manual Transaction Completed\tab 
\par \tab Issued when a manual type transaction is completed.
\par AutoLink\emdash Data Changed
\par \tab Issued when data from an automatic transaction is received by the client.
\par NotifyLink\emdash Data Changed
\par \pard \s30\fi-2160\li2430\ri20\sa60\tx2430\dxfrtext187\dfrmtxtx187\dfrmtxty187 \tab 
Issued when the DDEML library informs the client of change in data on the server. You may respond to this event by calling the Last Updated Transaction function and passing the ID number it returns to the Get Data function.
\par \pard\plain \s3\ri14\sb240\sa120 \b\f5 Usage
\par \pard\plain \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 \f5\fs20 The DDE Client and DDE Server Objects enable applications you build in AppWare
 to communicate with each other and with other MS Windows applications by means of Dynamic Data Exchange (DDE). Like Apple events on the Macintosh (discussed 
elsewhere in this manual), DDE provides a standard mechanism through which applications can exchange data and instructions for remote program control. In a DDE exchange, a {\i conversation}
 is established between two applications, designated as client and server. A server is an application that provides data to or performs operations at the request of a client program. The client\rquote s requests and the server\rquote 
s responses are referred to as {\i transactions}. In a simple transaction, for example, a Microsoft Excel server might pass a chart or the results of a calculation to a Microsoft Word client.
\par \pard \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 The applications you build in AppWare can also act as DDE clients and servers. An AppWare
 client might request a block of cells from an Excel worksheet, insert them in a Table object, process them, and pass them on to the Oracle object as part of an SQL statement. By the same token, an Excel client might create a chart using query data from a
 Table object in an AppWare server. DDE clients can also request an AppWare server to execute functions and return data generated by those functions.
\par \pard \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 The data that passes between server and client may be in any format that is compatible with the MS Windows Clipboard. The most common formats are bitmap, metafile, and text.
\par \pard \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 AppWare implements its DDE services according to the standard DDE protocol. Although you do not {\i have}
 to follow the standard DDE protocol, adherence to it enables your application to communicate with other protocol-compliant applications. In particu
lar, protocol compliance lets your application communicate with applications created under Windows 3.0, since both message-based DDE (3.0) and DDEML (3.1 and later) use the DDE protocol.
\par \pard\plain \s18\ri14\keepn \b\f7\cf6 \page {\cs16\fs16\up6 {\*\bkmkstart IDH_dde_server}{\*\bkmkend IDH_dde_server}#{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 #} IDH_dde_server}} {\cs16\fs16\up6 ${\footnote \pard\plain \s17\ri20 \f7\fs20 {
\cs16\fs16\up6 $} DDE Server}} {\cs16\fs16\up6 +{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 +} brwsobj23:0005}} {\cs16\fs16\up6 K{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 K} DDE Server}} DDE Server
\par \pard\plain \s3\ri14\sb240\sa120 \b\f5 Signals
\par \pard\plain \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 \f5\fs20 The DDE Server object has no predefined signals. However, you may create signals of your own. 
\par \pard \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 When trying to connect functions to the DDE Server, remember that it issues no signals other than those you define. You can\rquote 
t connect a signal flow to the object until at least one signal has been defined.
\par \pard\plain \s3\ri14\sb240\sa120 \b\f5 Usage
\par \pard\plain \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 \f5\fs20 
The DDE Server object enables your applications to provide data services to DDE clients. It also allows you to create signals that can be triggered remotely from client applications. As far a client is concerned, your AppWare
 server application is just like any other DDE server. In other words, it offers services to a DDE client regardless of whether the client was also created in AppWare
. This is possible because the DDE Server supports the same service:topic:item nomenclature that characterizes all DDE applications. You\rquote ll find a basic introduction to this nomenclature in the DDE Client documentation.
\par \pard \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 
In a DDE exchange, the client initiates a conversation with the server, during which messages, called transactions, pass from the client to the server. The server responds to these transactions by providing data to the client or performing work in its beh
alf. A server may have many clients and a client can request services from multiple servers. A given application can also be both client and server. When a client no longer needs a service, it terminates the conversation with that service.
\par \pard\plain \s18\ri14\keepn \b\f7\cf6 \page {\cs16\fs16\up6 {\*\bkmkstart IDH_dll}{\*\bkmkend IDH_dll}#{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 #} IDH_dll}} {\cs16\fs16\up6 ${\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 $} DLL
}} {\cs16\fs16\up6 +{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 +} brwsobj23:0010}} {\cs16\fs16\up6 K{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 K} DLL}} DLL
\par \pard\plain \s3\ri14\sb240\sa120 \b\f5 Signals
\par \pard\plain \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 \f5\fs20 None.
\par \pard\plain \s3\ri14\sb240\sa120 \b\f5 Usage
\par \pard\plain \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 \f5\fs20 
The DLL Object allows your applications to run many Dynamic Link Libraries (DLLs) that may not be specifically designed as AppWare Loadable Modules (ALMs). Many exported DLL functions may be called \ldblquote as is\rdblquote  without modifications. 

\par \pard \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 To use this ALM, you must have the API for the DLL that specifies the parameters that need to be passed to the DLL functions. Basic C data types
 can be passed as parameters to an exported DLL function. These parameters are linked to AppWare
 objects, such as Text and Number. Only basic C data types can be specified. Complex data types or structures are not currently supported as function arguments.  
\par \pard \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 
The DLL object is intended for occasional use only. If you anticipate using the DLL object frequently for a specific function, you should probably write a custom function to gain access to the DLL\rquote s functions. 
\par \pard \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 The DLL object does not support 
any type of callback mechanism. In other words, DLL functions that require access to visual items in windows cannot be called, and neither can dialogs that are created, managed and supported by AppWare.
\par \pard\plain \s18\ri14\keepn \b\f7\cf6 \page {\cs16\fs16\up6 {\*\bkmkstart IDH_ole}{\*\bkmkend IDH_ole}#{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 #} IDH_ole}} {\cs16\fs16\up6 ${\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 $} OLE
}} {\cs16\fs16\up6 +{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 +} brwsobj23:0015}} {\cs16\fs16\up6 K{\footnote \pard\plain \s17\ri20 \f7\fs20 {\cs16\fs16\up6 K} OLE}} OLE
\par \pard\plain \s3\ri14\sb240\sa120 \b\f5 Signals
\par \pard\plain \s30\fi-2160\li2430\ri20\sa60\tx2430\dxfrtext187\dfrmtxtx187\dfrmtxty187 \f5\fs20 Created\tab Issued when the OLE object is created. If the OLE object is embedded, it is activated at this point.
\par \pard \s30\fi-2160\li2430\ri20\sa60\tx2430\dxfrtext187\dfrmtxtx187\dfrmtxty187 Deleted\tab Issued when the OLE object is deleted.
\par Activated\tab Issued when the OLE object is activated (e.g. edited). 
\par \pard \s30\fi-2160\li2430\ri20\sa60\tx2430\dxfrtext187\dfrmtxtx187\dfrmtxty187 Deactivated\tab Issued when the OLE object is deactivated (for example, after closing from an edit).
\par \pard \s30\fi-2160\li2430\ri20\sa60\tx2430\dxfrtext187\dfrmtxtx187\dfrmtxty187 Size Change\tab 
Issued when the object is updated if the old version of the object and the new version are of different sizes. This is flow is not followed when  the OLE object container is resized by the end user.
\par \pard\plain \s3\ri14\sb240\sa120 \b\f5 Usage
\par \pard\plain \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 \f5\fs20 Object Linking and Embedding (OLE) is typically used to create what is known as a compound document\emdash 
a document that contains data that is dynamically provided by more than one application. In the MS Windows environment prior to OLE, data was manually shared betwee
n applications by means of the Clipboard. Using the Clipboard, for example, you get columns of data from an Excel spreadsheet into a Word document by copying the columns and pasting them into your document. OLE, by contrast, enables you to display and edi
t that spreadsheet data from within Word itself. Your Word document thus becomes a {\i container} for Excel. Excel acts as a {\i server}
, since it provides a data editing service for the Word document. When you want to change the Excel data, you just double click it and you\rquote re instantly returned to Excel. When you exit Excel, you\rquote 
re returned to the Word document, which is updated with new spreadsheet data derived directly from Excel. A container is therefore a placeholder in a window for an {\i embedded} or {\i linked} application, which in OLE terminology is called an {\i object}
 (not to be confused with a AppWare object).
\par \pard \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 While the concept of the compound-document doesn\rquote t apply to many of the applications you create in AppWare, OLE is still useful as a means of 
linking your applications to other OLE-compliant programs. The AppWare OLE object by itself is a generic container that can be associated with any OLE server. Once you make such an association, it takes on the attributes of the server.
\par \pard \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 To use the AppWare
 OLE object, you put it in a window. Its size and location in the window determine where data from the associated OLE server will be displayed. At run time, a user accesses the server by double clicking in the region of the OLE object. Th
e way in which the OLE object displays data from the server depends first on how the server presents its data, and second on the dimensions of the OLE object. Differences between the dimensions of the OLE object and those of the source data on the server 
may result in distortion.
\par \pard \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 The AppWare
 OLE object supports both embedded and linked types. The difference between the two types has to do with where object data is stored. In the case of an embedded object, the container itself (your custom application) keeps the object\rquote 
s data. This means, for example, that you can assign one embedded OLE object to another using the Assign function, and all of the object\rquote s data is assigned. Similarly, you can store an embedded OLE object as a field in the Database 
object. In the case of a linked object, data is stored in a separate document file, not in the container. The container simply {\i references }the file.
\par \pard \s28\li270\ri20\sa60\dxfrtext187\dfrmtxtx187\dfrmtxty187 The AppWare OLE object currently supports the OLE 1.0 specification. A future version of the object will support OLE 2.0.
\par }